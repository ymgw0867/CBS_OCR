<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Leadtools.ImageProcessing.Core</name>
    </assembly>
    <members>
        <member name="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData">
             <summary>
             ColorizeGrayCommandDataクラスには、<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>クラスのカラー化メソッドで使用するグレーの明度（Threshold）と対応する色（Color）に関する情報が含まれます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>クラスは、ユーザー定義の要素数を持つColorizeGrayCommandクラスオブジェクトの配列を使用します。配列の要素がN個の場合は以下のようにカラー化されます。<br/>
             <table>
               <tr>
                  <td><b>明度の範囲</b></td>
                  <td><b>色</b></td>
               </tr>
               <tr>
                  <td>0～Threshold[0]</td>
                  <td>Color[0]</td>
               </tr>
               <tr>
                  <td>Threshold[0]～Threshold[1]</td>
                  <td>Color[1]</td>
               </tr>
               <tr>
                  <td>Threshold[1]～Threshold[2]</td>
                  <td>Color[2]</td>
               </tr>
               <tr>
                  <td>...</td>
                  <td>...</td>
               </tr>
               <tr>
                  <td>Threshold[N - 3]～Threshold[N - 2]</td>
                  <td>Color[N - 2]</td>
               </tr>
               <tr>
                  <td>Threshold[N - 2]～Threshold[N - 1]</td>
                  <td>Color[N - 1]</td>
               </tr>
             </table></description></item>
             <item><description>Threshold[N-1]の値は無視され、代わりに255（８ビット画像の場合）、4095（12ビット画像の場合）、または65535（16ビット画像の場合）が使用される点に注意してください。</description></item>
             <item><description>必須ではありませんが、Threshold[0] &lt; Threshold[1] &lt; Threshold[2] &lt; … &lt; Threshold[N-1]にすることをお勧めします。12ビットのグレースケール画像で４個のColorizeGrayCommandDataクラスを使用する場合、以下のような設定は推奨されません。<br/>
             <table>
               <tr>
                  <td>Threshold[0] = 1000</td>
                  <td>Color[0] = 赤</td>
               </tr>
               <tr>
                  <td>Threshold[1] = 3000</td>
                  <td>Color[1] = 緑</td>
               </tr>
               <tr>
                  <td>Threshold[2] = 2000  // このしきい値に注意 </td>
                  <td>Color[2] = 青</td>
               </tr>
               <tr>
                  <td>Threshold[3] = 4000</td>
                  <td>Color[3] = 黄色</td>
               </tr>
             </table></description></item>
             <item><description>この場合、値が0～1000のピクセルは赤、1001～3000のピクセルは緑、3001～4000のピクセルは黄色になり、4001～有効な最大値のピクセルも黄色になります。</description></item>
             </list>
             <br/>
             詳細は、「<see cref="T:Leadtools.Topics.CorrectingColors">色の補正</see>」を参照してください。<br/>
             </remarks>
             <example>
             以下のサンプルは、16ビットのグレースケール画像をロードしてカラー化します。
             <!--ImageProcessing.Core.ColorizeGrayCommandData-->
             </example>
            <seealso cref="T:Leadtools.Topics.CorrectingColors">色の補正</seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>を初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.ToString">
            <summary>
            オーバーライドされます。このクラスの意味のある名前を返します。
            </summary>
            <returns>このクラスの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.#ctor(Leadtools.RasterColor,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="color">Thresholdで設定した明度の範囲をカラー化するための色。</param>
            <param name="threshold">colorパラメータを使用してカラー化する最大のピクセル値。この値以下のピクセル値がcolorパラメータの色に設定されます。GrayColors配列の最後の<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>クラスオブジェクトでは、この値の代わりに有効な最大値が使用されます。<br/>有効な最大値は画像のビット数によって異なります。８、12、および16ビットの画像では、最大値はそれぞれ、255、4095、および65535です。最大値より大きい値を設定した場合は、最大値に丸められます。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand">ColorizeGrayCommand(ColorizeGrayCommandData[])</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.Color">
            <summary>
            Thresholdプロパティで設定された明度の範囲をカラー化するために使用する色を取得または設定します。
            </summary>
            <value>Thresholdプロパティで設定された明度の範囲をカラー化するために使用する色。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.Threshold">
            <summary>
            Colorプロパティを使用してカラー化する最大のピクセル値を取得または設定します。 
            </summary>
            <value>Colorプロパティを使用してカラー化する最大のピクセル値。この値以下のピクセル値がColorプロパティの色に設定されます。GrayColors配列の最後の<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>クラスでは、この値の代わりに有効な最大値が使用されます。<br/>有効な最大値は画像のビット数によって異なります。８、12、および16ビットの画像では、最大値はそれぞれ、255、4095、および65535です。最大値より大きい値を設定した場合は、最大値に丸められます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed.</reviewed>
             <summary>
             ８、12、または16ビットのグレースケール画像をカラーにします。画像のカラービット数を、指定した形式から24ビットのRGB形式に変更します。
             </summary>
             <keywords>カラー化|グレースケール画像|視覚化|明度|24ビット画像|RGB|12ビット画像|16ビット画像</keywords>
             <remarks>
             <list type="bullet">
             <item><description>このクラスは画像の視覚化に役立ちます。より正確に言えば、画像の明度の変化を示すために使用できます。</description></item>
             <item><description>このクラスは、グレースケールの指定した範囲の明度を対応するRGB値に変換することによって、グレースケール画像をカラーにします。明度の範囲とRGB値の設定には、GrayColorsプロパティを使用します。</description></item>
             <item><description>このクラスを使用すると、元の画像では視認できなかった細部が明瞭になります。12ビットと16ビットのグレースケール画像では、上位の８ビットのみが表示され、残りのビットは破棄されます。そのため、破棄されたビットをカラーにすることで、これらの情報を視覚化できます。</description></item>
             <item><description>このクラスはDestinationImageに24ビットの画像を割り当てて格納します。</description></item>
             <item><description>GrayColorsプロパティにnullを指定すると、一意の出力カラーを生成するアルゴリズムを使用して、画像が自動的にカラー化されます。出力画像には、入力画像が８ビットの場合は256色、12ビットの場合は4096色、16ビットの場合は65535色が含まれます。</description></item>
             <item><description>以下のサンプルは、GrayColorsプロパティを使用して16ビットのグレースケール画像をカラーにする方法を示しています。</description></item>
             <item><description>16ビットのグレースケール画像では、最小のピクセル値は０で、最大のピクセル値は65535です。</description></item>
             <item><description>入力画像の色を以下のようにカラー化します。<br/><br/>
             0～9999の明度のピクセルを赤にする。<br/>
             10000～19999の明度のピクセルを緑にする。<br/>
             20000～29999の明度のピクセルを青にする。<br/>
             30000～39999の明度のピクセルをシアンにする。<br/>
             40000～49999の明度のピクセルをマゼンタにする。<br/>
             50000～65535の明度のピクセルをイエローにする（注意：GrayColors配列の最後の要素では、Thresholdの値は無視されます）。</description></item>
             <item><description>上記の結果を得るためにGrayColors配列をどのように設定すればよいかは、以下のサンプルを参照してください。</description></item>
             <item><description>このクラスは８、12、および16ビットのグレースケール画像のみをサポートしています。12ビットと16ビットのグレースケール画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。このクラスは、画像全体または画像のリージョンを処理できます。画像にリージョンがある場合は、そのリージョンに対してのみ効果が適用されます。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.GrayScaleImages">グレースケール画像</see>」を参照してください。
             </remarks>
             <example>
             以下のサンプルは、16ビットのグレースケール画像をロードしてカラー化します。
             <!--ImageProcessing.Core.ColorizeGrayCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">グレースケール画像</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ColorHalftoneCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.#ctor(Leadtools.ImageProcessing.Core.ColorizeGrayCommandData[])">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="grayColors">クラスオブジェクトの初期化に使用するグレー色を含む、<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>クラスオブジェクトの配列。</param>
            <example>
            以下のサンプルは、16ビットのグレースケール画像をロードしてカラー化します。
            <!--ImageProcessing.Core.ColorizeGrayCommand.ColorizeGrayConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.ToString">
            <summary>
            オーバーライドされます。このクラスの意味のある名前を返します。
            </summary>
            <returns>このクラスの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.DestinationImage">
            <summary>
            生成された画像を含むデスティネーション画像を取得または設定します。
            </summary>
            <value>生成された画像を含むデスティネーション画像。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.GrayColors">
            <summary>
            このクラスオブジェクトで使用されるグレー色を含む<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>クラスオブジェクトの配列。
            </summary>
            <value>このクラスオブジェクトで使用されるグレー色を含む<see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData"/>クラスオブジェクトの配列。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData">
             <reviewed>Mutasem 10.Sep.06: I added the keyword "IDisposable".
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>クラスにレジスタマークの検索情報を提供します。また、<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>によって検出されたレジスタマークの情報が格納されます。
             </summary>
             <remarks>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
             </example>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.#ctor">
            <reviewed>Mutasem 10.Sep.06: I added this method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>オブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,System.Drawing.Point[],Leadtools.ImageProcessing.Core.RegistrationMarkCommandType)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="width">レジスタマークの幅（ピクセル単位）。このパラメータは正の値のみを受け入れます。</param>
            <param name="height">レジスタマークの高さ（ピクセル単位）。このパラメータは正の値のみを受け入れます。</param>
            <param name="minimumScale">検出するレジスタマークの最小の拡大縮小率。これはパーセントで表します。maximumScaleより小さい値を指定する必要があります。このパラメータは正の値のみを受け入れます。</param>
            <param name="maximumScale">検出するレジスタマークの最大の拡大縮小率。これはパーセントで表します。minimumScaleより大きい値を指定する必要があります。このパラメータは正の値のみを受け入れます。</param>
            <param name="rectangle">レジスタマークを検索する領域（ピクセル単位）。</param>
            <param name="searchMarkCount">検索領域内で見つかることが予想されるレジスタマークの数。このパラメータは正の値のみを受け入れます。</param>
            <param name="markDetectedPoints">検出されたレジスタマークの位置を示す点が格納される配列。<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>は、この配列の最初のMarkDetectedCount個の要素に値を格納します。</param>
            <param name="type">レジスタマークの種類。</param>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Finalize">
            <reviewed>Mutasem 10.Sep.06: I added this method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>クラスのデストラクタ。
            </summary>
            <noexample/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Dispose">
            <reviewed>Mutasem 10.Sep.06: I added this method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"></see>によって使用されているすべてのリソースを解放します。
            </summary>
            <noexample/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Dispose(System.Boolean)">
            <reviewed>Mutasem 10.Sep.06: I added this method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mutasem 8.28.06: I added this property to reflect v15 dll.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"></see>によって使用されているすべてのリソースを解放します。
            </summary>
            
            <param name="disposing">
            マネージリソースとアンマネージリソースの両方を解放する場合はtrue。アンマネージリソースだけを解放する場合はfalse。
            </param>
            <noexample/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.SetDataPointer(System.IntPtr,System.Int32)">
            <reviewed>Mutasem 10.Sep.06: This is a new method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            データポインタを設定します。
            </summary>
            <param name="data">データポインタ。</param>
            <param name="size">データポインタのサイズ。</param>
            <returns></returns>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Empty">
            <reviewed>Mutasem 10.28.06: I added this property to reflect v15 dll.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: added (read only)</reviewed>
            <summary>
            （参照のみ）空のクラスを取得します。
            </summary>
            <value>メンバデータが初期化されていない<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>クラスの新しいインスタンスを表します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Data">
            <reviewed>Mutasem 10.Sep.06: I added this method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: added or sets</reviewed>
            <summary>
            データ配列を取得または設定します。
            </summary>
            <value>データ配列。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.DataSize">
            <reviewed>Mutasem 10.Sep.06: This property is new.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: added (read only)</reviewed>
            <summary>
            （参照のみ）データポインタのサイズを取得します。
            </summary>
            <value>データポインタのサイズ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.DataPointer">
            <reviewed>Mutasem 10.Sep.06: This property is new.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: added (read only)</reviewed>
            <summary>
            （参照のみ）データポインタを取得します。
            </summary>
            <value>データポインタ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Width">
            <summary>
            レジスタマークの幅（ピクセル単位）を取得または設定します。
            </summary>
            <value>レジスタマークの幅（ピクセル単位）。このプロパティは正の値のみを受け入れます。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Height">
            <summary>
            レジスタマークの高さ（ピクセル単位）を取得または設定します。
            </summary>
            <value>レジスタマークの高さ（ピクセル単位）。このプロパティは正の値のみを受け入れます。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MinimumScale">
            <summary>
            検出するレジスタマークの最小の拡大縮小率を取得または設定します。
            </summary>
            <value>検出するレジスタマークの最小の拡大縮小率。これはパーセントで表します。MaximumScaleより小さい値を指定する必要があります。このプロパティは正の値のみを受け入れます。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MaximumScale">
            <summary>
            検出するレジスタマークの最大の拡大縮小率を取得または設定します。
            </summary>
            <value>検出するレジスタマークの最大の拡大縮小率。これはパーセントで表します。MinimumScaleより大きい値を指定する必要があります。このプロパティは正の値のみを受け入れます。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Rectangle">
            <summary>
            レジスタマークを検索する領域（ピクセル単位）を含むRectangle構造体を取得または設定します。
            </summary>
            <value>レジスタマークを検索する領域（ピクセル単位）。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.SearchMarkCount">
            <summary>
            検索領域内で見つかることが予想されるレジスタマークの数を取得または設定します。
            </summary>
            <value>検索領域内で見つかることが予想されるレジスタマークの数。このプロパティは正の値のみを受け入れます。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Type">
            <summary>
            レジスタマークの種類を表す値を取得または設定します。
            </summary>
            <value>レジスタマークの種類。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MarkDetectedCount">
            <reviewed>Mutasem 10.Sep.06: I added the set method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: added or sets</reviewed>
            <summary>
            検索領域内で検出されたレジスタマークの数を取得または設定します。
            </summary>
            <value>検索領域内で検出されたレジスタマークの数。
            </value>
            <remarks>
            このプロパティは<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>によって更新されます。
            このプロパティはMarkDetectedPoints配列に格納された要素の数を示します。
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MarkDetectedPoints">
            <summary>
            検出されたレジスタマークの位置を示す点が格納される配列を取得または設定します。
            </summary>
            <value>検出されたレジスタマークの位置を示す点が格納される配列。<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>は、この配列の最初のMarkDetectedCount個の要素に値を格納します。</value>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             SearchMarksプロパティの情報に従って画像を検索し、レジスタマークを検出します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、画像を検索してレジスタマークを検出します。SearchMarks配列にはレジスタマークに関する情報が格納されます。コマンドを呼び出す前にこの配列を宣言し、検索するレジスタマークに関する情報を設定します。</description></item>
             <item><description>このコマンドは、検出したレジスタマークの情報でSearchMarks配列の各メンバを更新します。<br/><br/>
             <list type="bullet">
             <item><description>MarkDetectedCountプロパティは、検索領域で検出されたマークの数で更新されます。</description></item>
             <item><description>MarkDetectedPointsプロパティ（またはコンストラクタのmarkDetectedPointsパラメータ）は、検出されたマークの位置で更新されます。</description></item>
             </list></description></item>
             <item><description><see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>を使用して変換パラメータを取得し、そのパラメータを適用することで、画像を基準画像に合わせることができます。</description></item>
             <item><description>単に画像の傾きを自動的に補正するだけの場合は、<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を使用します。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
             </remarks>
             <example>
             <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
             </example>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.#ctor(Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand[])">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="searchMarks">レジスタマークの特性をすべて記述した<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>構造体の配列。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>のサンプルを参照してください。
            </example>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.SearchMarks">
            <reviewed>Mutasem 10.Sep.06: the return type of this property was wrong (it was SearchRegistrationMarksCommand[]), and I changed it into SearchRegistrationMarksCommandData[].
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            レジスタマークの特性をすべて記述した<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>構造体の配列を取得または設定します。
            </summary>
            <value>レジスタマークの特性をすべて記述した<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"/>構造体の配列。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand">
            <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mutasem 10.Sep.06: I removed the RasterCommand base class to accommodate the new dll.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            画像から特定の周波数成分を除去するためのマスクフィルタを作成します。
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>このコマンドは、フーリエ変換メソッドを扱う場合のみ使用します。</description></item>
            <item><description>マスク画像はグレースケール画像として扱われます。(0,0)の周波数は画像の中央、正のX調波はマスク画像の右半分、正のY調波はマスク画像の下半分にそれぞれ配置されます。マスク画像のサイズはDataのサイズと同じであることが必要です。</description></item>
            <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像の場合、このコマンドは例外をスローしません。</description></item>
            <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
            <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
            </list>
            詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
            </remarks>
            <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"/>を実行します。
            <!--ImageProcessing.Core.FrequencyFilterMaskCommand-->
            </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"/>を実行します。
            <!--ImageProcessing.Core.FrequencyFilterMaskCommand.FrequencyFilterMaskConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.FourierTransformInformation,System.Boolean)">
            <reviewed>Mutasem 8.Sep.06: I changed the name and type of the second argument from fourierTransformInformation into FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="maskImage">マスク画像を含むRasterImageオブジェクト。</param>
            <param name="FourierTransformInformation"><see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.FourierTransformInformation"/>構造体のDataプロパティは、画像の周波数成分を保持する２次元配列です。</param>
            <param name="onOff">ピクセル値が０の場合に対応する周波数成分を除去するかどうかを示す値。有効な値は次のとおりです。
            <table>
              <tr>
                 <td><b>値</b></td>
                 <td><b>説明</b></td>
              </tr>
              <tr>
                 <td>true</td>
                 <td>ピクセル値が０の場合、FourierTransformInformation構造体のDataプロパティ内の対応する位置にある周波数成分を除去します。それ以外の場合は変更しません。対応する<see cref="T:Leadtools.ImageProcessing.Core.Complex"/>構造体のメンバが両方とも０に設定されている場合に、周波数成分が除去されます。</td>
              </tr>
              <tr>
                 <td>false</td>
                 <td>FourierTransformInformation構造体のDataプロパティ内のピクセル位置にある周波数成分に、255で割ったピクセル値を乗算します。</td>
              </tr>
            </table>
            </param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.Run">
            <reviewed>Mutasem 10.Sep.06: I added the keyword "Virtual" to the property.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            メソッドを実行します。
            </summary>
            <returns>1     正常終了しました。<br/> &lt; 1   エラーが発生しました。 </returns>
            <noremarks/>
            <noexample/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.OnOff">
            <summary>
            ピクセル値が０の場合に対応する周波数成分を除去するかどうかを示す値を取得または設定します。
            </summary>
            <value>ピクセル値が０の場合に対応する周波数成分を除去するかどうかを示す値。有効な値は次のとおりです。
            <table>
              <tr>
                 <td><b>値</b></td>
                 <td><b>説明</b></td>
              </tr>
              <tr>
                 <td>true</td>
                 <td>ピクセル値が０の場合、FourierTransformInformation構造体のDataプロパティ内の対応する位置にある周波数成分を除去します。それ以外の場合は変更しません。対応する<see cref="T:Leadtools.ImageProcessing.Core.Complex"/>構造体のメンバが両方とも０に設定されている場合に、周波数成分が除去されます。</td>
              </tr>
              <tr>
                 <td>false</td>
                 <td>FourierTransformInformation構造体のDataプロパティ内のピクセル位置にある周波数成分に、255で割ったピクセル値を乗算します。</td>
              </tr>
            </table>
            </value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.MaskImage">
            <summary>
            マスク画像を参照するRasterImageオブジェクトを取得または設定します。
            </summary>
            <value>マスク画像を参照するRasterImageオブジェクト。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.FourierTransformInformation">
            <reviewed>Mutasem 8.Sep.06: I changed the name and return type of this property from fourierTransformInformation into FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            フーリエ変換に関する情報を含む<see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see>構造体を取得または設定します。
            </summary>
            <value>      
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FourierTransformCommandInformation</see>構造体は、画像の周波数成分を保持する２次元配列です。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">
            <summary>
            この列挙体には、選択されているカラースペースを示すために必要なすべてのタイプが含まれます。
            </summary>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.SignedLookupTable">
            <summary>
            このフラグを設定した場合、ルックアップテーブルのエントリは符号付き16ビット値です。設定しない場合、ルックアップテーブルのエントリは符号なし16ビット値です（このフラグはApplyModalityLookupTableCommandで使用されますが、ApplyLinearModalityLookupTableCommandでは使用されません）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.UpdateMinMax">
            <summary>
            このフラグを設定した場合は、<see cref="P:Leadtools.RasterImage.MinValue"/>が画像の新しい明度の最小値で更新され、<see cref="P:Leadtools.RasterImage.MaxValue"/>が新しい明度の最大値で更新されます。 
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.UseFullRange">
            <summary>
            将来のために予約。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.AllowRangeExpansion">
            <summary>
            このフラグを設定した場合は、モダリティルックアップテーブルの適用後もピクセル値の範囲を維持できるように、可能な場合に高位ビットと低位ビットが画像ハンドルの内部で調整されます。
            （このフラグはApplyLinearModalityLookupTableCommandで使用されますが、ApplyModalityLookupTableCommandでは使用されません）。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.RemoveStatus">
            <summary>
            削除処理中に実行する操作を示します。
            </summary>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.RemoveStatus.Remove">
            <summary>
            点、パンチ穴、境界線などを削除して続行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.RemoveStatus.NoRemove">
            <summary>
            点、パンチ穴、境界線などを削除せずに続行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.RemoveStatus.Cancel">
            <summary>
            削除処理を中止します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.RegistrationMarkCommandType">
            <summary>
            検証するレジスタマークの種類を示すフラグ。
            </summary>
            <remarks>
            現時点では、レジスタマークは１種類（T型）しか定義されていません。今後、他の形状が追加される予定です。
            </remarks>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.RegistrationMarkCommandType.TShape">
            <summary>
            T型のレジスタマーク。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags">
            <summary>
            この列挙体には、選択されているカラースペースを示すために必要なすべてのタイプが含まれます。
            </summary>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags.UpdateMinMax">
            <summary>
            このフラグを設定した場合は、画像の最小の明度に基づいて<see cref="P:Leadtools.RasterImage.MinValue"/>が再計算され、画像の最大の明度に基づいて<see cref="P:Leadtools.RasterImage.MaxValue"/>が再計算されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags.ReverseOrder">
            <summary>
            このフラグを設定した場合は、画像表示ルックアップテーブルのエントリの順序が逆転します（暗から明ではなく、明から暗になります）。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">
            <summary>
            画像のリサイズに使用するアルゴリズムのタイプを表します。
            </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Normal">
            <summary>
            最も高速なアルゴリズムですが、画像全体にエイリアスが生じるため、お勧めできません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Resample">
            <summary>
            線形補間と平均化を使用して高品質の画像を生成します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bicubic">
            <summary>
            バイキュービック補間と平均化によって高品質の画像を生成します。処理速度は<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>より遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Triangle">
            <summary>
            ３ピークの加重平均によって高品質の画像を生成します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Hermite">
            <summary>
            Hermite補間によって、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>よりは品質が劣るものの、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bresenham</see>よりは品質が高い、高品質の画像を生成します。Hermite補間の３次スプラインを使用します。処理速度は<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>より遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bell">
            <summary>
            Bell補間によって高品質の画像を生成します。このフィルタは、画像をぼかすと同時にリサイズを行います。バイキュービックフィルタと同様の性能を必要とするものの、ソース画像にノイズがある場合に、このフィルタを試してみてください。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.QuadraticBSpline">
            <summary>
            ２次Bスプライン補間によって、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.CubicBSpline</see>よりは品質が劣るものの、滑らかで高品質の画像を生成します。処理速度は、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>よりは速く、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.CubicBSpline</see>よりは遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.CubicBSpline">
            <summary>
            ３次Bスプライン補間によって、非常に滑らかで高品質の画像を生成します（ぼかしが最大になります）。<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bell</see>をさらに発展させたもので、処理速度が若干遅くなり、画像のぼかしが増しますが、ノイズとシャープが減少します。<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>よりは高速です。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.BoxFilter">
            <summary>
            アップサンプリングでは最近傍アルゴリズムに相当し、ダウンサンプリングではピクセルを平均化します。１ピクセル幅の線の画像において最良の結果が得られます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Lanczos">
            <summary>
            sinc（sinx/x）を使用するLanczos補間によって、高品質の画像を生成します。品質は最高になりますが、処理速度は遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Michell">
            <summary>
            Michel補間によって、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bell</see>よりは品質が劣るものの、滑らかで高品質の画像を生成します。処理速度が若干遅くなり、画像のぼかしが増しますが、ノイズとシャープが減少します。<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.QuadraticBSpline</see>より高速です。<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bell</see>より遅くなります。処理速度が若干遅くなり、画像のぼかしが増しますが、ノイズとシャープが減少します。<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>より遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Cosine">
            <summary>
            補間においてコサイン関数を使用し、高品質の画像を生成します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Catrom">
            <summary>
            CatmullRom補間によって高品質の画像を生成します。処理速度は、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>よりは遅く、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Lanczos</see>よりは速くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Quadratic">
            <summary>
            ２次補間によって、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>よりは品質が劣るものの、高品質の画像を生成します。処理速度は<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>より遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.CubicConvolution">
            <summary>
            補間によって高品質の画像を生成します（画像のエッジを強調します）。処理速度は<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>より遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bilinear">
            <summary>
            バイリニア補間と平均化によって高品質の画像を生成します。高速ですが、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Normal</see>および<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bresenham</see>よりは遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bresenham">
            <summary>
            Bresenham補間と平均化によって高品質の画像を生成します（<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Normal</see>より高品質です）。処理速度は、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Normal</see>よりは遅く、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>よりは速くなります。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand">
            <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
            Also, I changed all instances of word "function" with word "command" (see comments),
            Also, I removed a remark (see comments).
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            各種のアルゴリズムを画像に適用し、任意のサイズにリサイズします。
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>
            このコマンドは、同じビットマップハンドルを維持したまま、そのビットマップハンドルが参照しているビットマップリージョンをリサイズします。
            </description></item>
            <item><description>
            このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。
            </description></item>
            <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
            </list>
            </remarks>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.ResizeCommand"/>を実行します。
            <!--ImageProcessing.Core.ResizeInterpolateCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.#ctor(System.Int32,System.Int32,Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType)">
            <summary>
            明示的なパラメータを使用して、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="width">画像の幅を表す値（ピクセル単位）。</param>
            <param name="height">画像の高さを表す値（ピクセル単位）。</param>
            <param name="resizeType">画像のリサイズに使用するアルゴリズムのタイプを表す値。有効な値については、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType"/>を参照してください。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.ResizeCommand"/>を実行します。
            <!--ImageProcessing.Core.ResizeInterpolateCommand.ResizeConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.ToString">
            <summary>
            オーバーライドされます。このメソッドの意味のある名前を返します。
            </summary>
            <returns>このメソッドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.Width">
            <summary>
            画像の幅を取得または設定します。
            </summary>
            <value>画像の幅を表す値（ピクセル単位）。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.Height">
            <summary>
            画像の高さを取得または設定します。
            </summary>
            <value>画像の高さを表す値（ピクセル単位）。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.ResizeType">
            <summary>
            リサイズアルゴリズムのタイプを取得または設定します。
            </summary>
            <value>画像のリサイズに使用するアルゴリズムのタイプを表す値。有効な値については、<see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType"/>を参照してください。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">
            <summary>
            この列挙体には有効なハーフトーンパターンが含まれます。 
            </summary>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.None">
            <summary>
            フラグは選択されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Dot">
            <summary>
            点パターン。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Line">
            <summary>
            線パターン。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Circle">
            <summary>
            円パターン。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Ellipse">
            <summary>
            楕円パターン。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             画像の連続階調範囲を維持しながら、画像のハーフトーンスクリーン効果を作成します。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>画像にリージョンがある場合、このメソッドはリージョンに対してのみ作用します。画像にリージョンがない場合は、画像全体に対して作用します。</description></item>
             <item><description>このメソッドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>を実行します。
             <!--ImageProcessing.Core.HalfTonePatternCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ColorHalftoneandHalftoneImages">カラーハーフトーンおよびハーフトーン画像</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.GrayscaleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleExtendedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.AutoColorLevelCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ColorHalftoneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorSeparateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.DesaturateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorCountCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ConvertToColoredGrayCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>を初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.Core.HalfTonePatternCommandType)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>を初期化します。
            </summary>
            <param name="contrast">ハーフトーンパターンのコントラスト。この値を大きくするとパターンの明度が高くなり、パターンがよりはっきり見えるようになります。</param>
            <param name="ripple">ハーフトーンパターンの繰り返し数。この値は内部的に100で除算されます。たとえば、ripple = 200の場合、実際の繰り返し数は２になります。この値を大きくすると、パターン内の点や線などの数が増えます。</param>
            <param name="angleContrast">角パターンのコントラスト。この値を大きくすると、画像内の"スポーク"の明度が高くなります。</param> 
            <param name="angleRipple">角パターンの繰り返し数。この値によって、画像に現れる"スポーク"の数が決まります。</param> 
            <param name="angleOffset">角パターンのオフセット（+/-方向に1/100度単位）。正の値を指定するとスクリーンが時計回りに回転し、負の値を指定すると反時計回りに回転します。</param> 
            <param name="foreGroundColor">露出した領域の前景色を示す値。</param> 
            <param name="backGroundColor">露出した領域の背景色を示す値。</param> 
            <param name="type">どのタイプのハーフトーンパターンを使用するかを示す値。</param> 
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>を実行します。
            <!--ImageProcessing.Core.HalfTonePatternCommand.HalfTonePatternConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.ToString">
            <summary>
            オーバーライドされます。このメソッドの意味のある名前を返します。
            </summary>
            <returns>このメソッドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.Contrast">
            <summary>
            ハーフトーンパターンのコントラストの量を表す値を取得または設定します。この値を大きくするとパターンの明度が高くなり、パターンがよりはっきり見えるようになります。
            </summary>
            <value>ハーフトーンパターンのコントラストを表す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.Ripple">
            <summary>
            ハーフトーンパターンの繰り返し数を表す値を取得または設定します。
            </summary>
            <value>ハーフトーンパターンの繰り返し数を表す値。値は内部的に100で除算されます。たとえば、Ripple = 200の場合、実際の繰り返し数は２になります。この値を大きくすると、パターン内の点や線などの数が増えます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.AngleContrast">
            <summary>
            角パターンのコントラストの量を表す値を取得または設定します。
            </summary>
            <value>角パターンのコントラストを表す値。角パターンは、typeプロパティで<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Circle</see>と<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Ellipse</see>のどちらかが選択されている場合のみ発生します。この値を大きくすると、画像内の"スポーク"の明度が高くなります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.AngleRipple">
            <summary>
            角パターンの繰り返し数を表す値を取得または設定します。
            </summary>
            <value>角パターンの繰り返し数を表す値。角パターンは、typeプロパティで<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Circle</see>と<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Ellipse</see>のどちらかが選択されている場合のみ発生します。この値によって、画像に現れる"スポーク"の数が決まります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.AngleOffset">
            <summary>
            角パターンのオフセットの量を表す値（+/-方向に1/100度単位）を取得または設定します。
            </summary>
            <value>角パターンのオフセットを表す値（+/-方向に1/100度単位）。
            正の値を指定するとスクリーンが時計回りに回転し、負の値を指定すると反時計回りに回転します。
            角パターンのオフセットは、typeプロパティで<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Circle</see>と<see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Ellipse</see>のどちらかが選択されている場合のみ発生します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.ForeGroundColor">
            <summary>
            露出した領域の前景色を取得または設定します。
            </summary>
            <value>前景色。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.BackGroundColor">
            <reviewed>Mutasem 10.Sep.06: I changed the name of this property from Background to BackGroundColor.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            露出した領域の背景色を取得または設定します。
            </summary>
            <value>背景色。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.Type">
            <summary>
            ハーフトーンパターンのタイプを取得または設定します。
            </summary>
            <value>ハーフトーンパターンのタイプを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.Complex">
            <reviewed>Mutasem 10.Sep.06: I changed this from a class into structure.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            Complex構造体には、フーリエ変換メソッドで使用する特定の周波数成分を表す複素数が含まれます。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.Complex.#ctor(System.Double,System.Double)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.Complex"/>オブジェクトを初期化します。
            </summary>
            <param name="r">複素数の実部。</param>
            <param name="i">複素数の虚部。</param>
            <example>
            複素数を定義します。
            <!--ImageProcessing.Core.Complex.ComplexConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.Complex.ToString">
            <summary>
            オーバーライドされます。このクラスの意味のある名前を返します。
            </summary>
            <returns>このクラスの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.Complex.Empty">
            <reviewed>Mutasem 8.28.06: I added this property to reflect v15 dll.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            空のクラスを取得します。
            </summary>
            <value>メンバデータが初期化されていない<see cref="T:Leadtools.ImageProcessing.Core.Complex"/>構造体の新しいインスタンスを表します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.Complex"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.Complex.R">
            <reviewed>Mutasem 10.Sep.06: I changed the reference in the example section of this property.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            複素数の実部を表す値を取得または設定します。
            </summary>
            <value>複素数の実部を表す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.Complex"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.Complex.I">
            <reviewed>Mutasem 10.Sep.06: I changed the reference in the example section of this property.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            複素数の虚部を表す値を取得または設定します。
            </summary>
            <value>複素数の虚部を表す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.Complex"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FourierTransformInformation">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.Sep.06: reviewed.</reviewed>
             <reviewed>Mutasem 8.Sep.06: I changed the name of this class from fourierTransformInformation into FourierTransformInformation to match the dll.
             Samah 28.Sep.06: Reviewed.</reviewed>
             <summary>
             <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation"/>クラスには、画像の周波数成分を保持する複素数の２次元配列に関する情報が含まれます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>この構造体は以下のフーリエ変換クラスで使用します。
             <list type="bullet">
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/></description></item>
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/></description></item>
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/></description></item>
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"/></description></item>
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"/></description></item>
             </list>
             </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.#ctor">
            <reviewed>Mutasem 8.Sep.06: I changed the name of this method to accommodate the new name of this class.</reviewed>
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation"/>オブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.#ctor(Leadtools.RasterImage)">
            <reviewed>Mutasem 8.Sep.06: I changed the name of this methdo to accommodate the new name of this class.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation"/>オブジェクトを初期化します。
            </summary>
            <param name="image">複素数の２次元配列の幅と高さを指定するRasterImageオブジェクト。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Finalize">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>クラスのデストラクタ。
            </summary>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Dispose">
            <reviewed>Mutasem 10.Sep.06: I added this method.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></see>によって使用されているすべてのリソースを解放します。
            </summary>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Dispose(System.Boolean)">
            <reviewed>Mutasem 8.28.06: I added this property to reflect v15 dll.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></see>によって使用されているすべてのリソースを解放します。
            </summary>
            
            <param name="disposing">
            マネージリソースとアンマネージリソースの両方を解放する場合はtrue。アンマネージリソースだけを解放する場合はfalse。
            </param>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Clone">
            <reviewed>Mutasem 10.Sep.06: This method is new.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            現在のオブジェクトを新しいオブジェクトにクローンします。
            </summary>
            <returns>現在のオブジェクトと同じデータを持つ新しいオブジェクト。</returns>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.SetData(Leadtools.ImageProcessing.Core.Complex[])">
            <summary>
            2次元データ配列を設定します。
            </summary>
            <param name="data">2次元データ配列。</param>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.GetDataOf(System.Int32,System.Int32)">
            <reviewed>Mutasem 10.Sep.06: This method is new.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            対象の位置において得られたトランザムデータ複素数を取得します。
            </summary>
            <param name="x">位置のX座標。</param>
            <param name="y">位置のY座標。</param>
            <returns>対象の位置におけるトランザムデータ複素数を表す<see cref="T:Leadtools.ImageProcessing.Core.Complex"/>。</returns>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Empty">
            <reviewed>Mutasem 8.28.06: I added this property to reflect v15 dll.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            空のクラスを取得します。
            </summary>
            <value>メンバデータが初期化されていない<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation"/>クラスの新しいインスタンスを表します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Width">
            <summary>
            ２次元配列の幅（ピクセル単位）を取得します。
            </summary>
            <value>２次元配列の幅（ピクセル単位）。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Height">
            <summary>
            ２次元配列の高さ（ピクセル単位）を取得します。
            </summary>
            <value>２次元配列の高さ（ピクセル単位）。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Data">
            <summary>
            ２次元データ配列を取得します。
            </summary>
            <value>２次元データ配列。１つの配列要素しか宣言されていませんが、この配列にはWidth * Height個の要素が格納されることに注意してください。ピクセル(row, col)の周波数成分は<b>Data</b>[row * <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Width"/> + col]です。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.DataSize">
            <reviewed>Mutasem 10.Sep.06: This property is new.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            データポインタのサイズを取得します。
            </summary>
            <value>データポインタのサイズ。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.DataPointer">
            <reviewed>Mutasem 10.Sep.06: This property is new.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            データポインタを取得します。
            </summary>
            <value>データポインタ。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.AutoCropCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed</reviewed>
             <summary>
             カレント画像をトリミングし、周辺部にある余白を取り除きます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは通常、スキャンした文書の周辺部から余白を自動的にトリミングするために使用します。</description></item>
             <item><description>このコマンドは明度の変化に基づいて余白を検出するため、任意の色または明度を持つ周辺部をトリミングできます。</description></item>
             <item><description>画像にリージョンが定義されている場合は、必要に応じてリージョンもトリミングされます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」を参照してください。<br/>
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"/>を実行して、画像を自動的にトリミングします。
             <!--ImageProcessing.Core.AutoCropCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.CropCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.CopyRectangleCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいAutoCropCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.#ctor(System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいAutoCropCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="threshold">余白を検出するためのデルタ値。余白の検出は画像の端から中心に向かって行われます。明度の変化がこの値以下の領域が、余白とみなされます。有効な値の範囲は0～255です。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.ToString">
            <summary>
            オーバーライドされます。このメソッドの意味のある名前を返します。
            </summary>
            <returns>このメソッドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.AutoCropCommand.Threshold">
            <summary>
            余白を検出するためのデルタ値を取得または設定します。
            </summary>
            <value>余白を検出するためのデルタ値。余白の検出は画像の端から中心に向かって行われます。明度の変化がこのプロパティ以下の領域が、余白とみなされます。有効な値の範囲は0～255です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags">
            <summary>
            指定したXおよびY調波範囲に対して実行する操作を示すフラグ。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>周辺部に露出した領域の処理方法を示すフラグ</td>
                 <td>Color、Repeat、NoChange</td>
              </tr>
              <tr>
                 <td>表面の内側に露出した領域の処理方法を示すフラグ</td>
                 <td>Rotate、WithoutRotate</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.None">
            <summary>
            変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.InsideX">
            <summary>
            X範囲内のX調波を保持し、範囲外のX調波を除去します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.OutsideX">
            <summary>
            X範囲内のX調波を除去し、範囲外のX調波を保持します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.InsideY">
            <summary>
            Y範囲内のY調波を保持し、範囲外のY調波を除去します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.OutsideY">
            <summary>
            Y範囲内のY調波を除去し、範囲外のY調波を保持します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <reviewed>Mutasem 8.Sep.06: This class was inherited from RasterCommand, and I removed that.
             Samah 28.Sep.06: Reviewed.</reviewed>
             <summary>
             フーリエ変換関数によって生成された周波数調波データに、範囲長方形を使用してフィルタをかけます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、フーリエ変換メソッドを扱う場合のみ使用します。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像の場合、このコマンドは例外をスローしません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"/>を実行します。
             <!--ImageProcessing.Core.FrequencyFilterCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"/>を実行します。
            <!--ImageProcessing.Core.FrequencyFilterCommand.FrequencyFilterConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,System.Drawing.Rectangle,Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags)">
            <reviewed>Mutasem 8.Sep.06: I changed the name and type of the first argument from fourierTransformInformation into FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="FourierTransformInformation"><see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.FourierTransformInformation"/>構造体のDataプロパティは、画像の周波数成分を保持する２次元配列です。</param>
            <param name="rectangle">フィルタの適用範囲を指定します。これは、保持または除去する周波数範囲を表します。左辺の値は最小のX調波、右辺の値は最大のX調波、上辺の値は最小のY調波、下辺の値は最大のY調波をそれぞれ表します。最大のX調波は（幅 - 1）に一致し、最大のY調波は（高さ - 1）に一致します。</param>
            <param name="flags">指定したXおよびY調波範囲に対して実行する操作を示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.Run">
            <reviewed>Mutasem 8.Sep.06: I added the word "Virtual" to this method.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            メソッドを実行します。
            </summary>
            <returns>1     正常終了しました。<br/> &lt; 1   エラーが発生しました。 </returns>
            <noremarks/>
            <noexample/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.Flags">
            <summary>
            XおよびY調波範囲に対して実行する操作を示すフラグを取得または設定します。
            </summary>
            <value>XおよびY調波範囲に対して実行する操作を示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.Rectangle">
            <summary>
            フィルタの適用範囲を示すRectangle構造体を取得または設定します。
            </summary>
            <value>フィルタの適用範囲を示すRectangle構造体。これは、保持または除去する周波数範囲を表します。左辺の値は最小のX調波、右辺の値は最大のX調波、上辺の値は最小のY調波、下辺の値は最大のY調波をそれぞれ表します。最大のX調波は（幅 - 1）に一致し、最大のY調波は（高さ - 1）に一致します。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.FourierTransformInformation">
            <reviewed>Mutasem 8.Sep.06: I changed the name of this method from fourierTransformInformation into FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            フーリエ変換に関する情報を含む<see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see>構造体を取得または設定します。
            </summary>
            <value><see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see>構造体は、画像の周波数成分を保持する２次元配列です。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags">
            <reviewed>Mutasem 10.Sep.06: Changed the name of DontFillExposedArea to DoNotFillExposedArea.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかどうか、通常回転と高速回転のどちらを使用するか、をそれぞれ示すフラグ。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>画像の回転角度を検出した後にその傾きを補正するかどうかを示すフラグ</td>
                 <td>DeskewImage、ReturnAngleOnly</td>
              </tr>
              <tr>
                 <td>どの背景色を使用するかを示すフラグ</td>
                 <td>FillExposedArea、DoNotFillExposedArea</td>
              </tr>
              <tr>
                 <td>回転角度が非常に小さい場合に画像の傾きを補正するかどうかを示すフラグ </td>
                 <td>NoThreshold、Threshold</td>
              </tr>
              <tr>
                 <td>補間のタイプを指定するフラグ</td>
                 <td>RotateLinear、RotateResample、RotateBicubic</td>
              </tr>
              <tr>
                 <td>画像がほとんどテキストかまたはテキストと画像が混在しているかを示すフラグ</td>
                 <td>DocumentImage、DocumentAndPictures</td>
              </tr>
              <tr>
                 <td>通常の回転速度と高速な回転速度のどちらを使用するかを示すフラグ。
            通常回転を使用すると、結果が高品質になります。高速回転を使用すると、中程度の品質になります。高速回転は１ビット画像のみを対象とします。</td>
                 <td>NormalSpeedRotate、HighSpeedRotate</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DeskewImage">
            <summary>
            画像の傾きを補正します（画像を回転させます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.ReturnAngleOnly">
            <summary>
            画像の傾きを補正しません（画像を回転させません）。このフラグは通常、回転角度を確かめるときに使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.FillExposedArea">
            <summary>
            回転によって露出した領域を塗りつぶし色（FillColorプロパティ、またはコンストラクタのfillColorパラメータで指定した色）で塗りつぶします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DoNotFillExposedArea">
            <summary>
            回転によって露出した領域を塗りつぶすのに適切な背景色を自動的に決定します。この場合、FillColorは無視されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.NoThreshold">
            <summary>
            任意の補正角度に対して画像の傾きを補正します（画像を回転させます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.Threshold">
            <summary>
            回転角度が非常に小さい場合（0.5度未満の場合）に画像の傾きを補正しません（画像を回転させません）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.RotateLinear">
            <summary>
            回転時にどの補間方法も実行しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.RotateResample">
            <summary>
            回転時にバイリニア補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.RotateBicubic">
            <summary>
            回転時にバイキュービック補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DocumentImage">
            <summary>
            画像にテキストのみが含まれていることを示します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DocumentAndPictures">
            <summary>
            画像にテキストと画像または明瞭でないテキストが含まれていることを示します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseNormalRotate">
            <summary>
            通常の回転速度を使用します（高品質）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseHighSpeedRotate">
            <summary>
            高速な回転速度を使用します（中程度の品質、１ビット画像の場合のみ）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.PerformPreProcessing">
            <summary>
            傾きを補正する前に画像を前処理します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DoNotPerformPreProcessing">
            <summary>
            傾きを補正する前に画像を前処理しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseSelectiveDetection">
            <summary>
            選択的検出手法を使用します（速度を優先）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseNormalDetection">
            <summary>
            選択的検出手法を使用しません（精度を優先）。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DeskewCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.Sep.06:reviewed.</reviewed>
             <summary>指定した画像を回転させて傾きを補正します。このコマンドは通常、スキャンした画像の傾きを自動的に補正する場合に使用します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>Flagsプロパティ、またはコンストラクタのflagsパラメータに<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags"/>.ReturnAngleOnlyを含めた場合は、Angleプロパティ、またはコンストラクタのangleパラメータが回転角度で更新されるだけで、傾きは補正されません。</description></item>
             <item><description>補正される角度は最大で両方向に20度です。このコマンドは、スキャンした文書など、主に横書きのテキストを含む画像に対して使用することを目的としています。それ以外の種類の画像で使用した場合は、結果が正確には予測できません。</description></item>
             <item><description>このコマンドには、回転角度が非常に小さい場合に画像の傾きを補正しないオプションもあります。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像の場合、このコマンドは例外をスローしません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」を参照してください。<br/>
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を実行して、画像の傾きを補正します。
             <!--ImageProcessing.Core.DeskewCommand-->
             </example>
                ///<seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"></seealso>.
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <remarks>fillColorのデフォルト値はRasterColor(0, 0, 0)、angleのデフォルト値は０です。flagsのデフォルト値は、DeskewCommandFlags.DeskewImage | DeskewCommandFlags.FillExposedAreaです。</remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.#ctor(Leadtools.RasterColor,Leadtools.ImageProcessing.Core.DeskewCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="fillColor">回転によって生じる背景を塗りつぶすために使用されます。flagsパラメータに<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags"/>.FillExposedAreaを設定した場合のみ有効です。</param>
            <param name="flags">画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかどうか、通常回転と高速回転のどちらを使用するか、をそれぞれ示すフラグ。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.Angle">
            <summary>
            メソッドによって補正（回転）される画像の角度。
            </summary>
            <value>メソッドによって補正（回転）される画像の角度。回転量は1/100度単位で表されます。たとえば、500は時計回りに５度回転することを意味します。有効な値の範囲は-2000～2000です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を実行して、画像の傾きを補正します。
            <!--ImageProcessing.Core.DeskewCommand.Angle-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.FillColor">
            <summary>
            回転によって生じる背景を塗りつぶす色を取得または設定します。
            </summary>
            <value>回転によって生じる背景を塗りつぶす色。Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags"/>.FillExposedAreaを設定した場合のみ有効です。</value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.Angle"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.Flags">
            <summary>
            傾きを補正するかどうかと、どの背景色を使用するかを示すフラグを取得または設定します。
            </summary>
            <value>画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかどうか、通常回転と高速回転のどちらを使用するか、をそれぞれ示すフラグ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.CorrelationCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.Sep.06:reviewed.</reviewed>
             <summary>
             このコマンドは、相関画像（または相関画像の一部）を比較画像（Runメソッドの画像）内の同じサイズの領域すべてと照合し、相関度に基づいて一致する部分を検出します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、相関画像（または相関画像の一部）を比較画像内の同じサイズの領域すべてと照合し、相関度に基づいて一致する部分を検出します。相関度とは２つの画像がどれだけ類似しているかを示す尺度で、有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。比較画像内で相関画像（または相関画像の一部）との相関度がしきい値よりも大きい領域が検出されると、Pointsプロパティ（またはコンストラクタのpointsパラメータ）にその領域の原点が格納されます。相関画像のサイズは比較画像のサイズと等しいか、またはそれより小さい必要があります。</description></item>
             <item><description>たとえば、次のようにします。
             <list type="number">
             <item><description>検索するオブジェクトの画像を選択し、それをCorrelationImageプロパティ（またはコンストラクタのcorrelationImageパラメータ）に設定します。例： <br/><img src="Correlation1.jpg"/><br/></description></item>
             <item><description>検索するオブジェクトを含む画像を選択し、それを比較画像に設定します。例：<br/><img src="Correlation2.jpg"/><br/></description></item>
             <item><description>CorrelationCommandを呼び出します。</description></item>
             <item><description>比較画像内で相関画像との相関度がしきい値よりも大きい領域が検出されると、Points配列プロパティ（またはコンストラクタのpointsパラメータ）にその領域の原点（左上）が格納されます。領域の高さと幅は相関画像と同じです。</description></item>
             <item><description>結果：<br/><img src="Correlation3.jpg"/><br/></description></item>
             </list></description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             <item><description>すべての画像が符号付きまたは符号なしのどちらかである必要があります。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」を参照してください。<br/>
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>を実行して、画像に相関フィルタを適用します。
             <!--ImageProcessing.Core.CorrelationCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.#ctor(Leadtools.RasterImage,System.Drawing.Point[],System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="correlationImage">検索する画像を参照するRasterImageオブジェクト。</param>
            <param name="points"><see cref="T:System.Drawing.Point"/>構造体の配列。この配列には相関領域の開始点が格納されます。</param>
            <param name="xStep">X方向（画像の幅方向）のステップサイズ（ピクセル単位）。最良の結果を得るには、１を指定します。このパラメータは正の値のみを受け入れます。</param>
            <param name="yStep">Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）。最良の結果を得るには、１を指定します。このパラメータは正の値のみを受け入れます。</param>
            <param name="threshold">相関性のしきい値を示す値。２つの領域が相関（類似）していると判断されるために必要な相関度を指定します。相関画像と比較画像（Runメソッドの画像）内の領域との相関度がこのしきい値より低い場合、両者は相関していないとみなされます。有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>を実行します。
            <!--ImageProcessing.Core.CorrelationCommand.CorrelationConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.CorrelationImage">
            <summary>
            検索する画像を参照するRasterImageオブジェクトを取得または設定します。
            </summary>
            <value>検索する画像を参照するRasterImageオブジェクト。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.Points">
            <summary>
            相関領域の開始点が格納される<see cref="T:System.Drawing.Point"/>構造体の配列を取得します。
            </summary>
            <value><see cref="T:System.Drawing.Point"/>構造体の配列。この配列には相関領域の開始点が格納されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.NumberOfPoints">
            <summary>
            このプロパティは、相関画像と相関していると実際に判断された、比較画像内の領域の数によって更新されます。
            </summary>
            <value>相関画像と相関していると実際に判断された、比較画像内の領域の数を示す値。最大値はPoints配列の長さです。</value>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>を実行します。
            <!--ImageProcessing.Core.CorrelationCommand.NumberOfPoints-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.XStep">
            <summary>
            X方向（画像の幅方向）のステップサイズ（ピクセル単位）を取得または設定します。
            </summary>
            <value>X方向（画像の幅方向）のステップサイズ（ピクセル単位）を表す値。最良の結果を得るには、１を指定します。このプロパティは正の値のみを受け入れます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.YStep">
            <summary>
            Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）を取得または設定します。
            </summary>
            <value>Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）を表す値。最良の結果を得るには、１を指定します。このプロパティは正の値のみを受け入れます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.Threshold">
            <summary>
            相関性のしきい値を示す値を取得または設定します。２つの領域が相関（類似）していると判断されるために必要な相関度を指定します。
            </summary>
            <value>相関性のしきい値を示す値。２つの領域が相関（類似）していると判断されるために必要な相関度を指定します。相関画像と比較画像（Runメソッドの画像）内の領域との相関度がこのしきい値より低い場合、両者は相関していないとみなされます。有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags">
            <summary>
             <para>空白ページ検出処理の動作を決定するフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DetectEmptyPage">
            <summary>
            完全に真っ白な空白ページを検出します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DetectNoisyPage">
            <summary>
            多少のノイズが混ざっていても空白ページとみなします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DontIgnoreBleedThrough">
            <summary>
            裏写りしているページは空白ページとみなしません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.IgnoreBleedThrough">
            <summary>
            裏写りしているページを空白ページとみなします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DontDetectLinedPage">
            <summary>
            線の入っているページは空白ページとみなしません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DetectLinedPage">
            <summary>
            線の入っているページを空白ページとみなします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DontUseActiveArea">
            <summary>
            ページの端の余白部分を無視しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.UseActiveArea">
            <summary>
            ページの端の余白部分を無視します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.UseDefaultMargins">
            <summary>
            ページサイズに基づいて自動的に計算されたデフォルトのマージンを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.UseUserMargins">
            <summary>
            ユーザー指定のマージンを使用します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand">
             <summary>
             画像が空白ページかどうかを検出します。
             このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <keywords>空白ページ検出|裏写り|空白かどうか|空のページ|スキャン|ドキュメント|空白ページの検出</keywords>
             <remarks>
             <list type="bullet">
             <item><description>
             スキャンした文書には、さまざまな理由で多数の空白ページが含まれることがあります。
             文書を保存する前にそのようなページを除去できれば、スキャンしたアイテムを保存するためのディスク領域が少なくなります。
             このコマンドはページが空白かどうかを検出し、精度を示す値を返します。空白ページを高い精度で高速に検出できます（ノイズ、裏写り、線を無視することもできます）。  
             </description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていませんが、例外はスローされません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
             <!--ImageProcessing.Core.BlankPageDetectorCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.#ctor(Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいBlankPageDetectorCommandを初期化します。
            </summary>
            <param name="flags">空白ページ検出処理の動作を決定するフラグ。</param>
            <param name="LeftMargin">処理の対象から除外する画像の左端からのピクセル数。</param>
            <param name="TopMargin">処理の対象から除外する画像の上端からのピクセル数。</param>
            <param name="RightMargin">処理の対象から除外する画像の右端からのピクセル数。</param>
            <param name="BottomMargin">処理の対象から除外する画像の下端からのピクセル数。</param>
            <example>
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.ToString">
            <summary>
            現在の<see cref="T:System.Object"></see>を表す<see cref="T:System.String"></see>を返します。
            </summary>
            <returns>
            現在の<see cref="T:System.Object"></see>を表す<see cref="T:System.String"></see>。
            </returns>
            <noremarks/>
            <noexample/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.IsBlank">
            <summary>
            （参照のみ）ページが空白かどうかを示す値を取得します。
            </summary>
            <value>ページが空白の場合はtrue。それ以外の場合はfalse。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.Accuracy">
            <summary>
            結果の精度（1/100%単位）。
            </summary>
            <value>結果の精度。有効な値の範囲は0～10000です。
            この値は内部で100で除算されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.LeftMargin">
            <summary>
            処理の対象から除外する画像の左端からのピクセル数。
            </summary>
            <value>処理の対象から除外する画像の左端からのピクセル数。
            有効な値の範囲は0～画像の幅（ピクセル単位）です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.RightMargin">
            <summary>
            処理の対象から除外する画像の右端からのピクセル数。
            </summary>
            <value>処理の対象から除外する画像の右端からのピクセル数。
            有効な値の範囲は0～画像の幅（ピクセル単位）です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.TopMargin">
            <summary>
            処理の対象から除外する画像の上端からのピクセル数。
            </summary>
            <value>処理の対象から除外する画像の上端からのピクセル数。
            有効な値の範囲は0～画像の高さ（ピクセル単位）です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.BottomMargin">
            <summary>
            処理の対象から除外する画像の下端からのピクセル数。
            </summary>
            <value>処理の対象から除外する画像の下端からのピクセル数。
            有効な値の範囲は0～画像の高さ（ピクセル単位）です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.Flags">
            <summary>
            ページが真っ白かノイズが入っているか、裏写りを無視するかどうか、線を無視するかどうか、アクティブな領域を使用するかどうか、デフォルトのマージンとユーザー指定のマージンのどちらを使用するかを示すフラグを取得または設定します。
            </summary>
            <value>ページが真っ白かノイズが入っているか、裏写りを無視するかどうか、線を無視するかどうか、アクティブな領域を使用するかどうか、デフォルトのマージンとユーザー指定のマージンのどちらを使用するかを示すフラグを取得または設定します。
            デフォルト値はBlankPageDetectorCommandFlags.DetectEmptyPage | BlankPageDetectorCommandFlags.DontIgnoreBleedThrough | BlankPageDetectorCommandFlags.DontDetectLinedPage | BlankPageDetectorCommandFlags.DontUseActiveArea | BlankPageDetectorCommandFlags.UseDefaultMarginsです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"/>を実行して、画像が空白かどうかを確認します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.MinimumCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             暗いオブジェクトを指定した量だけ拡大します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、画像全体または画像のリージョンを処理できます。</description></item>
             <item><description>効果を調節するには、各ピクセル値の計算に使用する近傍領域のサイズを変更します。たとえば、8×8の近傍領域を使用する場合は、Dimensionプロパティ（またはコンストラクタのdimensionパラメータ）に８を設定します。各ピクセルの値が、その近傍領域の最小値で置き換えられます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             3×3ピクセルの近傍領域を使用して、画像に対して<see cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"/>を実行します。
             <!--ImageProcessing.Core.MinimumCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MosaicCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EmbossCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.OilifyCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SolarizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいMinimumCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.#ctor(System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいMinimumCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="dimension">フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）。このパラメータは正の値のみを受け入れます。</param>
            <example>
            3×3ピクセルの近傍領域を使用して、画像に対して<see cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"/>を実行します。
            <!--ImageProcessing.Core.MinimumCommand.MinimumCommandConstructor-->
            </example> 
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.MinimumCommand.Dimension">
            <summary>
            フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）を取得または設定します。
            </summary>
            <value>フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）。このプロパティは正の値のみを受け入れます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags">
            <reviewed>Mutasem 10.Sep.06: Changed the name of the last enum field from Logarithm into Log.
            Samah 28.Sep.06: reviewed.</reviewed>
            <reviewed>Mutasem 8.Sep.06: The name of the enum was wrong and I fixed it. It was "FourierTransformDisplayFlags".
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            表示するデータとプロットスケールを示すフラグ。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>表示するデータを示すフラグ</td>
                 <td>Magnitude、Phase</td>
              </tr>
              <tr>
                 <td>プロットスケールを示すフラグ。Phaseを設定した場合は無視されます。</td>
                 <td>Normal、Logarithm</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.None">
            <summary>
            変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Magnitude">
            <summary>
            調波の振幅データをプロットします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Phase">
            <summary>
            調波の位相データをプロットします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Normal">
            <summary>
            通常の線形スケールを使用して調波の振幅をプロットします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Log">
            <summary>
            対数スケールを使用して調波の振幅をプロットします。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand">
             <reviewed>
             <para>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).</para>
             <para>Mutasem 12.Sep.06: I changed the word "function" into "command" in the 4th remark item.</para>
             Samah 28.Sep.06: reviewed.</reviewed>
             <summary>
             高速フーリエ変換または離散フーリエ変換の結果を画像として表示します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>または<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>によって計算された<see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>オブジェクトのDataプロパティを画像に変換します。生成された画像は、周波数調波の振幅データまたは位相データのように見えます。(0,0)の周波数は画像の中央、正のX調波は画像の右半分、正のY調波は画像の下半分にそれぞれ配置されます。</description></item>
             <item><description>このコマンドはリージョンに対応していません。画像にリージョンがある場合でも、リージョンは無視されて画像全体が処理されます。</description></item>
             <item><description>コマンドを呼び出す前に、Runメソッドの画像を割り当てておく必要があります。画像のサイズは、<see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>オブジェクトのDataプロパティを生成するときに使用した画像と同じサイズであることが必要です。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像の場合、このコマンドは例外をスローしません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>を実行します。DiscreteFourierTransformコマンドを実行してから、そのデータを表示します。
             <!--ImageProcessing.Core.FourierTransformDisplayCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags)">
            <reviwe>Mutasem 8.Sep.06: I changed the name and type of the first argument from FourierTransformInformation into FourierTransformInformation.</reviwe>
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="FourierTransformInformation"><see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。このプロパティのサイズは画像のサイズと同じであることが必要です。</param>
            <param name="flags">表示するデータとプロットスケールを示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>を実行します。DiscreteFourierTransformコマンドを実行してから、そのデータを表示します。
            <!--ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformDisplayConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.Flags">
            <summary>
            表示するデータとプロットスケールを示すフラグを取得または設定します。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
            </summary>
            <value>表示するデータとプロットスケールを示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation">
            <reviewed>Mutasem 8.Sep.06: I changed the name and return type of this argument from fourierTransformInformation into FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            変換に関する情報を含む<see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。
            </summary>
            <value><see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。このプロパティのサイズは画像のサイズと同じであることが必要です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags">
            <summary>
            変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、およびクリッピングタイプを示すフラグ。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>変換タイプを示すフラグ</td>
                 <td>FastFourierTransform、InverseFastFourierTransform</td>
              </tr>
              <tr>
                 <td>操作チャネルを示すフラグ</td>
                 <td>Blue、Green、Red、Gray</td>
              </tr>
              <tr>
                 <td>画像の再構築に使用する周波数データのタイプを示すフラグ。このフラグはInverseFastFourierTransformを設定した場合のみ使用されます。FastFourierTransformを設定した場合は無視されます。</td>
                 <td>Magnitude、Phase、Both</td>
              </tr>
              <tr>
                 <td>クリッピングタイプを示すフラグ。このフラグはInverseFastFourierTransformを設定した場合のみ使用されます。FastFourierTransformを設定した場合は無視されます。</td>
                 <td>Clip、Scale</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.None">
            <summary>
            変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.FastFourierTransform">
            <summary>
            画像を周波数ドメインに変換し、結果をFourierTransformInformationオブジェクトのDataプロパティに格納します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.InverseFastFourierTransform">
            <summary>
            FourierTransformInformationオブジェクトのDataプロパティに設定された周波数成分を使用して画像を構築します。構築された画像はRunメソッドの画像に格納されます。このオプションはFourierTransformInformationオブジェクトのDataプロパティの値を変更します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Blue">
            <summary>
            青チャネルを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Green">
            <summary>
            緑チャネルを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Red">
            <summary>
            赤チャネルを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Gray">
            <summary>
            マスターチャネルを使用します。このフラグをInverseFastFourierTransformと組み合わせた場合、再構築された画像はグレーになります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Magnitude">
            <summary>
            周波数の振幅データのみから画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Phase">
            <summary>
            周波数の位相データのみから画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Both">
            <summary>
            振幅データと位相データの両方から画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Clip">
            <summary>
            構築された画像の値が0～255の範囲になるようにクリッピングします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Scale">
            <summary>
            構築された画像の値が0～255の範囲になるようにスケーリングします。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand">
             <reviewed>
             <para>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).</para>
             <para>Mutasem 12.Sep.06: I changed the word "function" into "command" in the 4th remark item. (see comment).</para>
             Samah 28.Sep.06: reviewed.</reviewed>
             <summary>
             指定したフラグに従って、画像の高速フーリエ変換または逆高速フーリエ変換を計算します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、高速フーリエ変換アルゴリズムを使用して、画像を時間ドメインから周波数ドメイン、またはその逆に変換します。高速フーリエ変換アルゴリズムは離散フーリエ変換を単純化したもので、画像のサイズが２の累乗（２、４、８、16、32など）である必要があります。必要な計算回数は2N2回から2N LgN回に減少します。画像に対して離散フーリエ変換を使用する場合は、<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>を使用します。サイズが２の累乗でない画像に対してこのメソッドを使用すると、ERROR_INV_PARAMETERエラーが返されます。</description></item>
             <item><description>このコマンドを使用する前に、<see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>のインスタンスを作成する必要があります。</description></item>
             <item><description>このコマンドはリージョンに対応していません。画像にリージョンがある場合でも、リージョンは無視されて画像全体が処理されます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像の場合、このコマンドは例外をスローしません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>を実行して、画像に高速フーリエ変換を適用します。
             <!--ImageProcessing.Core.FastFourierTransformCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>を実行して、画像に高速フーリエ変換を適用します。
            <!--ImageProcessing.Core.FastFourierTransformCommand.FastFourierTransformConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags)">
            <reviewed>Mutasem 8.Sep.06: I changed the first argument from fourierTransformInformation into FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="FourierTransformInformation"><see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。このプロパティのサイズは画像のサイズと同じであることが必要です。この配列は、<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags"/>.FastFourierTransformフラグが設定されている場合、Runメソッドの画像データを使用して値が格納されます。<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags"/>.InverseFastFourierTransformフラグが設定されている場合は、この配列の値を使用してRunメソッドの画像が再構築されます。</param>
            <param name="flags">変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、およびクリッピングタイプを示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.Flags">
            <summary>
            変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、およびクリッピングタイプを示すフラグを取得または設定します。
            </summary>
            <value>変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、およびクリッピングタイプを示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation">
            <reviewed>Mutasem 8.Sep.06: I changed the return type and the name of the property from fourierTransformInformation to FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。
            </summary>
            <value><see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。このプロパティのサイズは画像のサイズと同じであることが必要です。この配列は、<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags"/>.FastFourierTransformフラグが設定されている場合、Runメソッドの画像データを使用して値が格納されます。<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags"/>.InverseFastFourierTransformフラグが設定されている場合は、この配列の値を使用してRunメソッドの画像が再構築されます。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType">
            <summary>
            低位ビット～高位ビットの範囲外のビットを処理する方法を示すフラグ。
            </summary>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType.ProcessRangeOnly">
            <summary>
            ビット範囲の半分を各ピクセルに加算することによってデータをシフトします。LowBit～HighBitの範囲外のビットは変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType.ProcessOutSideRange">
            <summary>
            ビット範囲の半分を各ピクセルに加算することによってデータをシフトします。LowBit～HighBitの範囲外のビットはすべて０にします。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed.</reviewed>
             <summary>
             符号なし画像を符号付き画像に変換します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このクラスは、画像の最小値と最大値を符号付きの値で更新します。</description></item>
             <item><description>このクラスは12ビットと16ビットのグレースケール画像をサポートしています。12ビットと16ビットのグレースケール画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"/>を実行します。符号なしの画像を渡す必要があります。
             <!--ImageProcessing.Core.ConvertUnsignedToSignedCommand-->
             </example>
            <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいConvertUnsignedToSignedCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.#ctor(Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType)">
            <summary>
            明示的なパラメータを使用して、新しいConvertUnsignedToSignedCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="type">低位ビット～高位ビットの範囲外のビットを処理する方法を示すフラグ。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"/>を実行します。符号なしの画像を渡す必要があります。
            <!--ImageProcessing.Core.ConvertUnsignedToSignedCommand.ConvertUnsignedToSignedConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.ToString">
            <summary>
            オーバーライドされます。このクラスの意味のある名前を返します。
            </summary>
            <returns>このクラスの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.Type">
            <summary>
            低位ビット～高位ビットの範囲外のビットを処理する方法を示す値を取得または設定します。
            </summary>
            <value>低位ビット～高位ビットの範囲外のビットを処理する方法を示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             最小の負の値が０になるように画像データのすべての負の値をシフトすることにより、グレースケールの符号付き画像を符号なし画像に変換します。 
             </summary>
             <remarks>
             このコマンドは<see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"/>に似ていますが、
             画像を符号なし画像に変換する際にシフトする値を自動的に決定します。
             <br></br>通常、このコマンドは<see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>コマンドの前に使用します。
             <br></br>このコマンドによって、<see cref="T:Leadtools.RasterImage"/>の<see cref="P:Leadtools.RasterImage.Signed"/>プロパティが更新されます。
             <br></br>また、このコマンドによって、<see cref="T:Leadtools.RasterImage"/>の<see cref="P:Leadtools.RasterImage.MinValue"/>プロパティと<see cref="P:Leadtools.RasterImage.MaxValue"/>プロパティも更新されます。
             <br></br>このコマンドは８ビットの画像をサポートしていません。
             <br></br>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。
             <br></br>このコマンドは符号付きデータ画像をサポートしています。
             <br></br>このコマンドは32ビットのグレースケール画像をサポートしていません。
             </remarks>
             <example>
             このコマンドは符号付き画像に対してMultiscaleEnhancementCommandを適用しますが、MultiscaleEnhancementCommandは符号付き画像をサポートしていないため、画像をいったん符号なし画像に変換し、エフェクトを適用した後、元の符号付き画像に戻します。
             <!--ImageProcessing.Core.MinimumToZeroCommand-->
             </example>
            <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ShiftAmount">
            <summary>
            最小の負の値が０になるよう負の値をシフトするために<see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>クラスオブジェクトが使用する値を取得します。
            </summary>
            <value>最小の負の値が０になるよう負の値をシフトするために<see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>クラスオブジェクトが使用する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.MaximumCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             暗いオブジェクトを指定した量だけ縮小します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、画像全体または画像のリージョンを処理できます。</description></item>
             <item><description>効果を調節するには、各ピクセル値の計算に使用する近傍領域のサイズを変更します。たとえば、8×8の近傍領域を使用する場合は、Dimensionプロパティ（またはコンストラクタのdimensionパラメータ）に８を設定します。各ピクセルの値が、その近傍領域の最大値で置き換えられます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             3×3ピクセルの近傍領域を使用して、画像に対して<see cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"/>を実行します。
             <!--ImageProcessing.Core.MaximumCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MosaicCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EmbossCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.OilifyCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SolarizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいMaximumCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.#ctor(System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいMaximumCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="dimension">フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）。このパラメータは正の値のみを受け入れます。</param>
            <example>
            3×3ピクセルの近傍領域を使用して、画像に対して<see cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"/>を実行します。
            <!--ImageProcessing.Core.MaximumCommand.MaximumConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.MaximumCommand.Dimension">
            <summary>
            フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）を取得または設定します。
            </summary>
            <value>フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）。このプロパティは正の値のみを受け入れます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">
            <summary>
             <para>反転テキスト削除処理の動作を決定するフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.UseDpi">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のすべてのプロパティの単位を1/1000インチにします。画像のDPIを使用してピクセルに変換することで、DPIの異なる複数の画像を処理できます。このフラグを設定しない場合、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のプロパティの単位はすべてピクセルになります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.SingleRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>によって検出された各反転テキスト部分について、<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>に設定された場合、削除された反転テキストを内部シングルリージョンに追加します。<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>に設定された場合は、反転テキストをシングルリージョンに追加しません。<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>が戻るとき、削除されたすべての反転テキストを含むリージョンが、<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region"/>のどちらかに設定されます。LeadRegionが同時に設定されている場合、削除されたすべての反転テキストをLEADリージョンとして持つ画像のシャローコピーが<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion"/>プロパティに設定されます。LeadRegionが同時に設定されていない場合、削除されたすべての反転テキストを含むWindowsリージョンが<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region"/>プロパティに設定されます。
            <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region"/>に割り当てられたLEADリージョンまたはWindowsリージョンは、不要になったときに破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.LeadRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>が戻るとき、削除されたすべての反転テキストをリージョンとして持つRunメソッド画像のシャローコピーを<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion"/>に設定します。
            このフラグはSingleRegionと組み合わせる必要があります。そのため、<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Flags"/>をSingleRegion | LeadRegionに設定します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.CallBackRegion">
            <summary>
            削除しようとしている反転テキストを含むWindowsリージョンを<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Region"/>プロパティに設定します。このフラグを設定すると、<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったリージョンを結合することによって、削除された反転テキストを含む独自のリージョンを作成できます。リージョンは論理OR演算子を使用して結合できます。
            <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったすべてのリージョンを結合すると、<see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Flags"/>にSingleRegionを設定した場合に作成されるリージョンと結果的に同じになります。
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Region"/>プロパティで受け取ったリージョンが不要になったときは、破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.ImageUnchanged">
            <summary>
            Runメソッドの画像を変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.UseDiagonals">
            <summary>
            反転テキストに含まれる斜線のピクセルを考慮します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>によって検出された各反転テキスト部分を処理します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>を実行します。
            <!--ImageProcessing.Core.InvertedTextCommandEventArgs.InvertedTextCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいInvertedTextCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="image">対象の画像を参照するRasterImageオブジェクト。</param>
            <param name="region">削除される反転テキストを表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</param>
            <param name="boundingRectangle">処理される反転テキスト領域のバウンディング長方形。</param>
            <param name="whiteCount">処理される反転テキスト領域に含まれる白ピクセルの総数。</param>
            <param name="blackCount">処理される反転テキスト領域に含まれる黒ピクセルの総数。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>を実行します。
            <!--ImageProcessing.Core.InvertedTextCommandEventArgs.InvertedTextCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Image">
            <summary>
            対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクトを取得します。
            </summary>
            <value>対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクト。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">InvertedTextCommandEventArgs(RasterImage, Region, Rectangle, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Region">
            <summary>
            削除される反転テキストを表すWindowsリージョンを取得します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </summary>
            <value>削除される反転テキストを表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">InvertedTextCommandEventArgs(RasterImage, Region, Rectangle, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.BoundingRectangle">
            <summary>
            処理される反転テキスト領域のバウンディング長方形を含むRectangle構造体を取得します。
            </summary>
            <value>処理される反転テキスト領域のバウンディング長方形。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.WhiteCount">
            <summary>
            処理される反転テキスト領域に含まれる白ピクセルの総数を取得します。
            </summary>
            <value>処理される反転テキスト領域に含まれる白ピクセルの総数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.BlackCount">
            <summary>
            処理される反転テキスト領域に含まれる黒ピクセルの総数を取得します。
            </summary>
            <value>処理される反転テキスト領域に含まれる黒ピクセルの総数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status">
            <summary>
            反転テキスト削除処理のステータスを取得または設定します。
            </summary>
            <value>反転テキスト削除処理のステータスを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.InvertedTextCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <reviewed>Mutasem 10.Sep.06: I modified the first "description" tag below.
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             １ビットの白黒画像で反転テキストを検出して修正します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <keywords>ドキュメントのクリーンアップ|反転テキスト|反転|クリーンアップ|１ビット画像</keywords>
             <remarks>
             <list type="bullet">
             <item><description> このコマンドは、スキャンしたテキスト文書によく見られる反転テキストを検出して修正します。反転テキストの例を以下に示します。   
             <br><img src="Invert1.jpg"/></br>
             <br>反転テキスト領域を修正すると、以下のようになります。</br>
             <br><img src="Invert2.jpg"/></br>
             </description></item>
             <item><description>このコマンドの動作は、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs"/>を使用して変更できます。 </description></item>
             <item><description>このコマンドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>リージョンが選択されている場合は、そのリージョンのみが処理対象となります。リージョンが選択されていない場合は、画像全体が処理されます。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。 </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</see>」を参照してください。
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>を実行します。
             <!--ImageProcessing.Core.InvertedTextCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいInvertedTextCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.#ctor(Leadtools.ImageProcessing.Core.InvertedTextCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいInvertedTextCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="flags">反転テキスト削除処理の動作を決定するフラグ。</param>
            <param name="minimumInvertWidth">反転テキストとみなす領域の最小の幅。単位は、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</param>
            <param name="minimumInvertHeight">反転テキストとみなす領域の最小の高さ。
            単位は、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</param>
            <param name="minimumBlackPercent">反転テキスト領域の総ピクセルに対する黒いピクセルの割合の最小値。
            黒いピクセルの割合がこの値より低い領域は修正の対象になりません。</param>
            <param name="maximumBlackPercent">反転テキスト領域の総ピクセルに対する黒いピクセルの割合の最大値。
            黒いピクセルの割合がこの値より高い領域は修正の対象になりません。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>を実行します。
            <!--ImageProcessing.Core.InvertedTextCommand.InvertedTextConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Flags">
            <summary>
            反転テキスト削除処理の動作を決定するフラグを取得または設定します。
            </summary>
            <value>反転テキスト削除処理の動作を決定する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MinimumInvertWidth">
            <summary>
            反転テキストとみなす領域の最小の幅を取得または設定します。
            </summary>
            <value>反転テキストとみなす領域の最小の幅。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MinimumInvertHeight">
            <summary>
            反転テキストとみなす領域の最小の高さを取得または設定します。
            </summary>
            <value>反転テキストとみなす領域の最小の高さ。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MinimumBlackPercent">
            <summary>
            反転テキスト領域の総ピクセルに対する黒いピクセルの割合の最小値を取得または設定します。 
            </summary>
            <value>反転テキスト領域の総ピクセルに対する黒いピクセルの割合の最小値。
            黒いピクセルの割合がこの値より低い領域は修正の対象になりません。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MaximumBlackPercent">
            <summary>
            反転テキスト領域の総ピクセルに対する黒いピクセルの割合の最大値を取得または設定します。
            </summary>
            <value>反転テキスト領域の総ピクセルに対する黒いピクセルの割合の最大値。
            黒いピクセルの割合がこの値より高い領域は修正の対象になりません。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region">
            <summary>
            Windowsリージョンのハンドルを取得します。
            </summary>
            <value>Windowsリージョンのハンドル。</value>
            <remarks>
            Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see>のみが設定されていて、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.LeadRegion</see>が設定されていない場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>が戻るときに、すべての変更を含む１つのWindowsリージョンで更新されます。
            このプロパティを使用するには、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see>フラグを設定します。
            このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.#ctor(Leadtools.ImageProcessing.Core.InvertedTextCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">InvertedTextCommand(InvertedTextCommandFlags, int,int,int,int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion">
            <summary>
            このプロパティは、削除された反転テキストをリージョンとして持つ画像のシャローコピーで更新されます。
            </summary>
            <value>
            削除された反転テキストをリージョンとして持つ画像のシャローコピー。
            </value>
            <remarks>
            Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.LeadRegion</see>が設定されている場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>が戻るときに、削除された反転テキストをリージョンとして持つ画像のシャローコピーで更新されます。そのため、<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.LeadRegion</see>フラグを設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>を実行します。
            <!--ImageProcessing.Core.InvertedTextCommand.ImageRegion-->
            </example>
            <noremarks/>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.InvertedTextCommand.InvertedText">
            <reviewed>Mutasem 10.Sep.06: I modified this method to accommodate new v15 changes, I also updated the "summary" and "value" tags, to accommodate the change happened here.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            追加処理のためのオプションのデリゲートメソッド。
            </summary>
            <value>追加処理のためのオプションのデリゲートメソッド。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DespeckleCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.Sep.06: Reviewed.</reviewed>
             <summary>
             画像からゴミを取り除きます。このコマンドは通常、スキャンした画像（FAX画像など）をクリーンアップする場合に使用します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、１ピクセルのゴミを取り除き、それより大きいゴミを縮小します。そのため、場合によっては、繰り返し実行することで大きなゴミも完全に取り除くことができます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"/>を実行して、画像からゴミを取り除きます。
             <!--ImageProcessing.Core.DespeckleCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.GlowCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags">
            <reviewed>Safwan 19.July.07: New document.</reviewed>
            <reviewed>Safwan 19.July.07: New document.</reviewed>
            <summary>
            傾きを補正するかどうかと、どの背景色を使用するかを示すフラグ。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>画像の回転角度を検出した後にその傾きを補正するかどうかを示すフラグ</td>
                 <td>DeskewImage、ReturnAngleOnly</td>
              </tr>
              <tr>
                 <td>使用する背景色を示すフラグ</td>
                 <td>FillExposedArea、DoNotFillExposedArea</td>
              </tr>
              <tr>
                 <td>回転角度が非常に小さい場合に画像の傾きを補正するかどうかを示すフラグ </td>
                 <td>NoThreshold、Threshold</td>
              </tr>
              <tr>
                 <td>使用する補間タイプを指定するフラグ</td>
                 <td>RotateLinear、RotateResample、RotateBicubic</td>
              </tr>
              <tr>
                 <td>画像がほとんどテキストかまたはテキストとピクチャが混在しているかを示すフラグ</td>
                 <td>DocumentImage、DocumentAndPictures</td>
              </tr>
              <tr>
                 <td>回転タイプ（通常または高速）を示すフラグ。通常回転は高品質であるのに対して、高速回転の品質は中程度です。高速回転は１ビット画像に対してのみ使用できます。</td>
                 <td>NormalSpeedRotate、HighSpeedRotate</td>
              </tr>
              <tr>
                 <td>通常の傾き補正、小切手の傾き補正、またはライン検出アルゴリズムによる傾き補正を使用して画像の傾きを補正するかどうかを示すフラグ</td>
                 <td>DoNotUseCheckDeskew、UseNormalCheckDeskew、UseLineDetectionToDeskewCheck</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.DeskewImage">
            <summary>
            画像の傾きを補正します（画像を回転させます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.ReturnAngleOnly">
            <summary>
            画像の傾きを補正しません（画像を回転させません）。このフラグは通常、回転角度を確かめるときに使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.FillExposedArea">
            <summary>
            回転によって露出した領域を塗りつぶし色（FillColorプロパティ、またはコンストラクタのfillColorパラメータで指定した色）で塗りつぶします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.DoNotFillExposedArea">
            <summary>
            回転によって露出した領域を塗りつぶすのに適切な背景色を自動的に決定します。この場合、FillColorは無視されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.NoThreshold">
            <summary>
            任意の補正角度に対して画像の傾きを補正します（画像を回転させます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.Threshold">
            <summary>
            回転角度が非常に小さい場合（0.5度未満の場合）に画像の傾きを補正しません（画像を回転させません）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.RotateLinear">
            <summary>
            回転時にどの補間方法も実行しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.RotateResample">
            <summary>
            回転時にバイリニア補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.RotateBicubic">
            <summary>
            回転時にバイキュービック補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.DocumentImage">
            <summary>
            画像にはテキストのみが含まれています。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.DocumentAndPictures">
            <summary>
            画像にはテキストとピクチャまたは明瞭でないテキストが含まれています。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.UseNormalRotate">
            <summary>
            通常の速度で回転させます（高品質）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.UseHighSpeedRotate">
            <summary>
            高速に回転させます（中程度の品質、１ビット画像の場合のみ）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.DoNotUseCheckDeskew">
            <summary>
            どの小切手アルゴリズムも実行しません。通常の傾き補正を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.UseNormalCheckDeskew">
            <summary>
            小切手アルゴリズムを使用して画像の傾きを補正します。このアルゴリズムでは、向きを決定するために、標準的な小切手に共通する数多くの特徴が考慮されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags.UseLineDetectionToDeskewCheck">
            <summary>
            ライン検出アルゴリズムを使用して画像の傾きを補正します。 
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand">
             <summary>
             指定した画像を回転させて傾きを補正します。このコマンドは通常、スキャンした画像の傾きを自動的に補正する場合に使用します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <keywords>小切手|小切手スキャニング|小切手イメージング|ドキュメントイメージング|ドキュメントスキャニング</keywords>
             <remarks>
             <list type="bullet">
             <item><description>DeskewCommandと同様に、このメソッドを使用して、スキャンした文書の傾きを自動的に補正できます。
             このコマンドはDeskewCommandクラスの拡張版で、特に小切手画像に対応できるように改良されました。通常の傾き補正アルゴリズム、特殊な小切手アルゴリズム、特殊なライン検出アルゴリズムなど、異なるアルゴリズムを使用できます。</description></item>
             <item><description>Flagsプロパティ、またはコンストラクタのflagsパラメータに<see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags"/>.ReturnAngleOnlyを含めた場合は、Angleプロパティが回転角度で更新されるだけで、傾きは補正されません。</description></item>
             <item><description>このコマンドには、回転角度が非常に小さい場合に画像の傾きを補正しないオプションもあります。</description></item>
             <item><description>補正される角度は最大で両方向に20度です。このコマンドは、スキャンした小切手など、主に横書きのテキストを含む画像に対して使用することを目的としています。それ以外の種類の画像で使用した場合は、結果が正確には予測できません。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていませんが、例外はスローされません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             カラー画像、グレースケール画像、および１ビット画像に対してDeskewCheckCommandを使用した例を以下に示します。
             <para></para>
             <para>元のカラー画像：</para>
             <img src="ColorOriginal.jpg"/>
             <para></para>
             <para>傾き補正したカラー画像：</para>
             <img src="ColorDeskewed.jpg"/>
             <para></para>
             <para>元のグレースケール画像：</para>
             <img src="GrayOriginal.gif"/>
             <para></para>
             <para>傾き補正したグレースケール画像：</para>
             <img src="GrayDeskewed.gif"/>
             <para></para>
             <para>元の１ビット画像：</para>
             <img src="1BitOriginal.gif"/>
             <para></para>
             <para>傾き補正した１ビット画像：</para>
             <img src="1BitDeskewed.gif"/>
             <para></para>
             詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」および「<see cref="T:Leadtools.Topics.Deskewing">傾き補正</see>」を参照してください。
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"/>を実行して、画像の傾きを補正します。
             <!--ImageProcessing.Core.DeskewCheckCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCheckCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <remarks>fillColorのデフォルト値はRasterColor(0, 0, 0)、angleのデフォルト値は０です。flagsのデフォルト値は、DeskewCheckCommandFlags.DeskewImage | DeskewCheckCommandFlags.FillExposedAreaです。</remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCheckCommand.#ctor(Leadtools.RasterColor,Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="fillColor">回転によって生じる背景を塗りつぶす色。flagsパラメータに<see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags"/>.FillExposedAreaを設定した場合のみ有効です。</param>
            <param name="flags">画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかどうか、どのタイプの回転を使用するかを、それぞれ示すフラグ。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCheckCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewCheckCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewCheckCommand.Angle">
             <summary>
             コマンドによって補正（回転）される画像の角度。
             </summary>
             <value>コマンドによって補正（回転）される画像の角度。回転量は1/100度単位で表されます。たとえば、500は時計回りに５度回転することを意味します。有効な値の範囲は-2000～2000です。デフォルト値は０です。</value>
             <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を実行して、画像の傾きを補正します。
             <!--ImageProcessing.Core.DeskewCheckCommand.Angle-->
             </example>
             <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewCheckCommand.FillColor">
            <summary>
            回転によって生じる背景を塗りつぶす色を取得または設定します。
            </summary>
            <value>回転によって生じる背景を塗りつぶす色。Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommandFlags"/>.FillExposedAreaを設定した場合のみ有効です。デフォルト値は(0, 0, 0)です。</value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.DeskewCheckCommand.Angle"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewCheckCommand.Flags">
            <summary>
            画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかどうか、どのタイプの回転を使用するかを、それぞれ示すフラグを取得または設定します。
            </summary>
            <value>画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかどうか、どのタイプの回転を使用するかを、それぞれ示すフラグ。デフォルト値は、DeskewCheckCommandFlags.DeskewImage | DeskewCheckCommandFlags.FillExposedAreaです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">
            <summary>
             <para>境界線削除処理の動作を決定する列挙値。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.LeadRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>が戻るとき、削除されたすべての境界線をリージョンとして持つ対象画像のシャローコピーを<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion"/>プロパティに設定します。
            このフラグはSingleRegionと組み合わせる必要があります。そのため、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Flags"/>をSingleRegion | LeadRegionに設定します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.CallBackRegion">
            <summary>
            削除しようとしている境界線を含むWindowsリージョンを<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Region"/>プロパティに設定します。
            このフラグを設定すると、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったリージョンを結合することによって、削除された境界線を含む独自のリージョンを作成できます。リージョンは論理OR演算子を使用して結合できます。
            <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったすべてのリージョンを結合すると、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Flags"/>プロパティにSingleRegionを設定した場合に作成されるリージョンと結果的に同じになります。
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Region"/>プロパティで受け取ったリージョンが不要になったときは、破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.SingleRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>によって検出された各境界線について、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>に設定された場合、削除された境界線を内部シングルリージョンに追加します。<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>に設定された場合は、境界線をシングルリージョンに追加しません。<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>が戻るとき、削除されたすべての境界線を含むリージョンが、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region"/>のどちらかに設定されます。LeadRegionが同時に設定されている場合、削除されたすべての境界線をLEADリージョンとして持つ画像のシャローコピーが<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion"/>に設定されます。LeadRegionが同時に設定されていない場合、削除されたすべての境界線を含むWindowsリージョンが<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region"/>に設定されます。
            <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region"/>に割り当てられたLEADリージョンまたはWindowsリージョンは、不要になったときに破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.ImageUnchanged">
            <summary>
            対象の画像を変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.UseVariance">
            <summary>
            境界線を削除するときに境界線幅の変動を考慮します。このフラグを設定した場合は、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Variance"/>プロパティが使用されます。
            このフラグを設定しない場合、<see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Variance"/>プロパティは無視されます。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags">
            <summary>
             <para>削除する境界線を示します。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Left">
            <summary>
            左境界線を削除します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Top">
            <summary>
            上境界線を削除します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Right">
            <summary>
            右境界線を削除します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Bottom">
            <summary>
            下境界線を削除します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.All">
            <summary>
            すべての境界線を削除します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>によって検出された各境界線を処理します。
            </summary>
            <example>
            詳細については、<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>を参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags,System.Drawing.Rectangle)">
            <summary>
            明示的なパラメータを使用して、新しいBorderRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="image">対象の画像を参照するRasterImageオブジェクト。</param>
            <param name="region">削除される境界線を表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</param>
            <param name="border">処理される境界線を示すフラグ。</param>
            <param name="boundingRectangle">処理される境界線のバウンディング長方形を含むRectangleオブジェクト。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Image">
            <reviewed>Mutasem 10.Sep.06: I removed the "set" method.
            Samah 27.sep.06:reviewed</reviewed>
            <reviewed>Mohammed 13.10.06: removed the or sets from the summary + added (Read only)</reviewed>
            <summary>
            （参照のみ）対象の画像を参照するRasterImageオブジェクトを取得します。
            </summary>
            <value>対象の画像を参照するRasterImageオブジェクト。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Region">
            <reviewed>Mutasem 10.Sep.06: I removed the "set" method.
            Samah 27.sep.06:reviewed</reviewed>
            <reviewed>Mohammed 13.10.06: removed the or sets from the summary + added (Read only)</reviewed>
            <summary>
            （参照のみ）削除される境界線を表すWindowsリージョンを取得します。
            </summary>
            <value>削除される境界線を表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Border">
            <reviewed>Mutasem 10.Sep.06: I removed the "set" method.
            Samah 27.sep.06:reviewed</reviewed>
            <reviewed>Mohammed 13.10.06: removed the or sets from the summary + added (Read only)</reviewed>
            <summary>
            （参照のみ）処理される境界線を示すフラグを取得します。
            </summary>
            <value>処理される境界線を示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.BoundingRectangle">
            <reviewed>Mutasem 10.Sep.06: I removed the "set" method.
            Samah 27.sep.06:reviewed</reviewed>
            <reviewed>Mohammed 13.10.06: removed the or sets from the summary + added (Read only)</reviewed>
            <summary>
            （参照のみ）処理される境界線のバウンディング長方形を含むRectangle構造体を取得または設定します。
            </summary>
            <value>処理される境界線のバウンディング長方形を含むRectangle構造体。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status">
            <summary>
            境界線削除処理のステータスを取得または設定します。
            </summary>
            <value>境界線削除処理のステータス。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed</reviewed>
              <summary>
             １ビットの白黒画像から黒の境界線を削除します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、スキャンしたテキスト文書によく見られる境界線を削除します。
             ４つの境界線のいずれか、またはすべてを検出して削除できます。このコマンドの動作は、<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs"/>を使用して変更できます。 </description></item>
             <item><description>このコマンドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>リージョンが選択されている場合は、そのリージョンのみが処理対象となります。リージョンが選択されていない場合は、画像全体が処理されます。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。 </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>を実行します。
             <!--ImageProcessing.Core.BorderRemoveCommand-->
             </example>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
             <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいBorderRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags,Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいBorderRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="flags">境界線削除処理の動作を決定するフラグ。</param>
            <param name="border">削除する境界線を示すフラグ。</param>
            <param name="percent">境界線の検出に使用する画像サイズの割合。通常は20を指定します。
            たとえば、画像の幅が200ピクセル、Percent = 20、Border = <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags">BorderRemoveBorderFlags.Left</see>の場合、画像の左端から40ピクセルの間で左境界線が検出されます。
            境界線が画像の端に近い場合は小さい値を指定し、画像の端から遠い場合は大きい値を指定します。</param>
            <param name="whiteNoiseLength">境界線を検出する際の、白色ノイズの許容量。単位はピクセルで、
            通常は0～10の値を指定すれば十分です。</param>
            <param name="variance">境界線幅の変動の許容量。境界線幅の変動が大きい場合は、Varianceに大きい値を指定します。有効な値の範囲は0～10です。 </param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.BorderRemoveCommand.BorderRemoveConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Flags">
            <summary>
            境界線削除処理の動作を決定するフラグを取得または設定します。
            </summary>
            <value>境界線削除処理の動作を決定する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Border">
            <summary>
            削除する境界線を示すフラグ。
            </summary>
            <value>削除する境界線を示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Percent">
            <summary>
            境界線の検出に使用する画像サイズの割合を取得または設定します。
            </summary>
            <value>境界線の検出に使用する画像サイズの割合。通常は20を指定します。
            たとえば、画像の幅が200ピクセル、Percent = 20、Border = <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags">BorderRemoveBorderFlags.Left</see>の場合、画像の左端から40ピクセルの間で左境界線が検出されます。
            境界線が画像の端に近い場合は小さい値を指定し、画像の端から遠い場合は大きい値を指定します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.WhiteNoiseLength">
            <summary>
            境界線を検出する際の、白色ノイズの許容量を取得または設定します。
            </summary>
            <value>境界線を検出する際の、白色ノイズの許容量。単位はピクセルで、
            通常は0～10の値を指定すれば十分です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Variance">
            <summary>
            境界線幅の変動の許容量を取得または設定します。
            </summary>
            <value>境界線幅の変動の許容量。境界線幅の変動が大きい場合は、Varianceに大きい値を指定します。有効な値の範囲は0～10です。 </value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region">
            <summary>
            Windowsリージョンのハンドルを取得します。
            </summary>
            <value>Windowsリージョンのハンドル。Flagsに<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see>のみが設定されていて、<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.LeadRegion</see>が設定されていない場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>が戻るときに、すべての変更を含む１つのWindowsリージョンで更新されます。これを使用するには、Flagsを<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see>に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.BorderRemoveCommand.Region-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion">
            <summary>
            削除された境界線をリージョンとして持つ画像のシャローコピーで更新されるRasterImageオブジェクト。
            </summary>
            <value>Flagsに<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.LeadRegion</see>が設定されている場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>が戻るときに、削除された境界線をリージョンとして持つ画像のシャローコピーで更新されます。そのため、Flagsを(<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.LeadRegion</see>)に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.BorderRemoveCommand.ImageRegion-->
            </example>
            <noremarks/>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.BorderRemoveCommand.BorderRemove">
            <reviewed>Mutasem 10.Sep.06: I modified this method to accommodate new v15 changes, I also updated the "summary" and "value" tags, to accommodate the change happened here.
            Samah 27.sep.06:reviewed</reviewed>
            <summary>
            削除される境界線情報を処理します。
            </summary>
            <value>削除される境界線情報を処理します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SliceCommandFlags">
            <summary>
             <para>スライスされた画像の傾きを補正するかどうか、回転時にどのタイプの補間を使用するか、および元の画像からスライスを切り取るかどうかを示すフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.DeskewImage">
            <summary>
            傾き補正を行いません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.WithoutDeskewImage">
            <summary>
            スライスされた画像の傾きを補正します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.Normal">
            <summary>
            回転時にどの補間方法も実行しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.Resample">
            <summary>
            回転時にバイリニア補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.Bicubic">
            <summary>
            回転時にバイキュービック補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.WithoutCut">
            <summary>
            元の画像からスライスを切り取りません。 Send the null value to the callback sliceImage parameter.
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.CutSlices">
            <summary>
            元の画像からスライスを切り取ります。コールバックのsliceImageパラメータに、作成された画像へのポインタを送ります。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>によって検出された各スライスを処理します。
            </summary>
            <example>
            このイベントは、1番目のスライスを画像の新しいページに追加してコマンドを中止します。
            <!--ImageProcessing.Core.SliceCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterImage,System.Drawing.Rectangle,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいSliceCommandを初期化します。
            </summary>
            <param name="image">対象の画像。</param>
            <param name="sliceImage">スライスされた画像。この画像が不要になった場合は、プログラマの責任で解放する必要があります。このメンバは、SliceCommandFlags.CutSlicesフラグを使用した場合のみ更新され、それ以外の場合はnullになります。</param>
            <param name="sliceRectangle">抽出されたスライスのバウンディング長方形。</param>
            <param name="deskewAngle">傾き補正角度。回転量は1/100度単位で表されます。たとえば、500は時計回りに５度回転することを意味します。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.Image">
            <reviewed>Mutasem 10.Sep.06: I deleted the "set" method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            対象の画像。
            </summary>
            <value>対象の画像。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.SliceImage">
            <reviewed>Mutasem 10.Sep.06: I deleted the "set" method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: removed or sets</reviewed>
            <summary>
            スライスされた画像を取得します。
            </summary>
            <value>スライスされた画像。この画像が不要になった場合は、プログラマの責任で解放する必要があります。このメンバは、SliceCommandFlags.CutSlicesフラグを使用した場合のみ更新され、それ以外の場合はnullになります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.SliceRectangle">
            <reviewed>Mutasem 10.Sep.06: I deleted the "set" method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: removed or sets</reviewed>
            <summary>
            抽出されたスライスのバウンディング長方形を取得します。
            </summary>
            <value>抽出されたスライスのバウンディング長方形。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.DeskewAngle">
            <reviewed>Mutasem 10.Sep.06: I deleted the "set" method.
            Samah 28.sep.06: Reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: removed or sets</reviewed>
            <summary>
            傾き補正角度を取得します。
            </summary>
            <value>傾き補正角度。回転量は1/100度単位で表されます。たとえば、500は時計回りに５度回転することを意味します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.Cancel">
            <summary>
            スライスコマンドを続行するかどうかを示す値を取得または設定します。
            </summary>
            <value>スライスコマンドを続行するかどうかを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SliceCommand">
            <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            放射線スキャンフィルムから個々のスライスを抽出します。
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>このコマンドは、放射線スキャンフィルムから個々のスライスを抽出します。次の図は、SliceCommandを適用する前と適用した後の放射線画像の例です。この例では、出力データを使用してそれぞれのスライスの周りに白線を描いています。<br/>
            <img src="BeforeSliceBitmap.jpg"></img><br/>前<br/>
            <img src="AfterSliceBitmap.jpg"></img><br/>後<br/>
            </description></item>
            <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
            <item><description>このメソッドは符号付きデータ画像をサポートしていません。</description></item>
            <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
            </list>
            </remarks>
            <example>
            このイベントは、新しく見つかったスライスの周りに新しいリージョンを描画します。
            <!--ImageProcessing.Core.SliceCommand-->
            </example>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.#ctor">
            <reviewed>Mutasem 10.Sep.06: I modified the body of this constructor.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            デフォルトパラメータを使用して、新しいSliceCommandを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.#ctor(System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.Core.SliceCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しいSliceCommandを初期化します。
            </summary>
            <param name="maximumDeskewAngle">傾き補正の最大角度（1/100度単位）。有効な値の範囲は0～1000です（MaximumDeskewAngleを100で除算した値が実際の角度になります）。このパラメータは、SliceCommandFlags.DeskewImageフラグを設定した場合のみ使用されます。</param>
            <param name="fillColor">露出した領域の塗りつぶし色を指定します。</param>
            <param name="flags">スライスされた画像の傾きを補正するかどうか、回転時にどのタイプの補間を使用するか、および元の画像からスライスを切り取るかどうかを示すフラグ。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.Flags">
            <summary>
            スライスされた画像の傾きを補正するかどうか、回転時にどのタイプの補間を使用するか、および元の画像からスライスを切り取るかどうかを示すフラグを取得または設定します。
            </summary>
            <value>スライスされた画像の傾きを補正するかどうか、回転時にどのタイプの補間を使用するか、および元の画像からスライスを切り取るかどうかを示すフラグ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.MaximumDeskewAngle">
            <summary>
            傾き補正の最大角度を取得または設定します。
            </summary>
            <value>傾き補正の最大角度（1/100度単位）。有効な値の範囲は0～1000です（MaximumDeskewAngleを100で除算した値が実際の角度になります）。このパラメータは、SliceCommandFlags.DeskewImageフラグを設定した場合のみ使用されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.FillColor">
            <summary>
            露出した領域の塗りつぶし色を取得または設定します。
            </summary>
            <value>露出した領域の塗りつぶし色を指定します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.DeskewAngle">
            <summary>
            スライスされた画像の回転量で更新される変数を取得します。回転量は1/100度単位で表されます。たとえば、500は時計回りに５度回転することを意味します。このプロパティは、FlagsプロパティでSliceCommandFlags.DeskewImageを選択している場合のみ更新されます。
            </summary>
            <value>スライスされた画像の回転量で更新される変数。回転量は1/100度単位で表されます。たとえば、500は時計回りに５度回転することを意味します。このプロパティは、FlagsプロパティでSliceCommandFlags.DeskewImageを選択している場合のみ更新されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.SliceCommand.Slice">
            <reviewed>Mutasem 10.Sep.06: This event is change to accommodate the new changes in v15,
            And its name is changed from SliceCallback to Slice
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            追加処理のためのオプションのデリゲートメソッドを取得または設定します。
            </summary>
            <value>追加処理のためのオプションのデリゲートメソッド。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommandFlags">
            <summary>
            将来のために予約。０を使用します。
            </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommandFlags.None">
            <summary>
            フラグは選択されていません。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand">
             <summary>
             画像の内部に格納されているルックアップテーブルが線形の場合に、ウィンドウ中心とウィンドウ幅を取得します。画像の内部に格納されているルックアップテーブルが線形でない場合、このコマンドは失敗します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>符号付き画像のルックアップテーブルでは注意が必要です。
             この場合、ルックアップテーブルの上半分には負の値が、下半分には正の値が格納されています。</description></item>
             <item><description>このクラスは12ビットと16ビットのグレースケール画像をサポートしています。12ビットと16ビットのグレースケール画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand"/>を実行し、ルックアップテーブルの線形性を調べてそのウィンドウ幅と中心を計算します。
             <!--ImageProcessing.Core.GetLinearVoiLookupTableCommand-->
             </example>
            <seealso cref="M:Leadtools.ImageProcessing.Effects.EffectsUtilities.GetUserLookupTable(System.Int32[],System.Drawing.Point[])"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいGetLinearVoiLookupTableCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.#ctor(Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しいGetLinearVoiLookupTableCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="flags">将来のために予約。０を渡します。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand"/>を実行し、ルックアップテーブルの線形性を調べてそのウィンドウ幅と中心を計算します。
            <!--ImageProcessing.Core.GetLinearVoiLookupTableCommand.GetLinearVoiLookupTableConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.ToString">
            <summary>
            オーバーライドされます。このクラスの意味のある名前を返します。
            </summary>
            <returns>このクラスの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.Center">
            <summary>
            対象のウィンドウを定義する明度の範囲の中心によって更新される変数。
            </summary>
            <value>対象のウィンドウを定義する明度の範囲の中心によって更新される変数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.Width">
            <summary>
            対象のウィンドウを定義する明度の範囲によって更新される変数。
            </summary>
            <value>対象のウィンドウを定義する明度の範囲によって更新される変数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.Flags">
            <summary>
            将来のために予約。０を使用します。
            </summary>
            <value>将来のために予約。０を使用します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed</reviewed>
             <summary>
             <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"/>を使用した場合に画像のトリミングに使用される長方形を取得します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、トリミング長方形を変更したい場合に、<see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"/>の代わりに<see cref="T:Leadtools.ImageProcessing.CropCommand"/>と組み合わせて使用します。たとえば、ユーザーにトリミング長方形のプレビュー機能を提供したり、マージンを追加したりできます。</description></item>
             <item><description>このコマンドは、トリミングする領域を指定するのに画像座標を使用します。したがって、画像のビューの視点と方向を考慮する必要があります。画像座標についての詳細は、<see cref="T:Leadtools.RasterViewPerspective"/>を参照してください。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"/>を実行します。
             <!--ImageProcessing.Core.AutoCropRectangleCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.CropCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.CopyRectangleCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいAutoCropRectangleCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.#ctor(System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいAutoCropRectangleCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="threshold">余白を検出するためのデルタ値。
            余白の検出は画像の端から中心に向かって行われます。明度の変化がこのパラメータ以下の領域が、余白とみなされます。有効な値の範囲は0～255です。</param>
            <remarks>
            詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」を参照してください。<br/>
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"/>を実行して、自動トリミング長方形を取得します。
            <!--ImageProcessing.Core.AutoCropRectangleCommand.AutoCropRectangleConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.ToString">
            <summary>
            オーバーライドされます。このメソッドの意味のある名前を返します。
            </summary>
            <returns>このメソッドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.Threshold">
            <summary>
            余白を検出するためのデルタ値を取得または設定します。
            </summary>
            <value>余白を検出するためのデルタ値。余白の検出は画像の端から中心に向かって行われます。明度の変化がこのプロパティ以下の領域が、余白とみなされます。有効な値の範囲は0～255です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.Rectangle">
            <summary>
            自動トリミング長方形で更新されるRectangleオブジェクト。
            </summary>
            <value>自動トリミング長方形で更新されるRectangleオブジェクト。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.CorrelationListCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.Sep.06:reviewed.</reviewed>
             <summary>
             リスト内の画像を画像内の同じサイズの領域すべてと照合し、相関度に基づいて一致する部分を検出します。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description> このメソッドは、リスト内の画像を画像内の同じサイズの領域すべてと照合し、相関度に基づいて一致する領域を検出します。 </description></item>
             <item><description> リストの画像はすべて同じサイズである必要があります。そのサイズは、画像のサイズと等しいか、またはそれより小さい必要があります。</description></item>
             <item><description> 相関度とは２つの画像がどれだけ類似しているかを示す尺度で、有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。 </description></item>
             <item><description> リスト内の画像との相関度が<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold"/>よりも大きい領域が検出されると、それらの領域の原点が<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Points"/>パラメータに設定されます。
             また、その画像のインデックスが<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.ListIndex"/>に設定されます。  </description></item>
             <item><description> たとえば、次のようにします。 
             <list type="number">
             <item><description> 検索対象のオブジェクトの画像を選択し、リストに格納します。
             <br/>例：<br/><img src="CorList_a.gif"/><br/><img src="CorList_d.gif"/> </description></item>
             <item><description> 検索対象のオブジェクトを含む画像を選択します。
             <br/>例：<br/><img src="CorList_Org.gif"/> </description></item>
             <item><description> <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.XStep"/> = 1、<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.YStep"/> = 1、<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold"/> = 90にそれぞれ設定し、コマンドを実行します。 </description></item>
             <item><description> リスト内の画像との相関度が<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold"/>よりも大きい領域が検出されると、その領域ごとに原点（左上）が<see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Points"/>配列に設定されます。領域の高さと幅はリスト画像と同じです。 </description></item>
             <item><description> 結果： <br/><img src="CorList_Res.gif"/></description></item>
             </list></description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>画像にリージョンがある場合、このメソッドはリージョンに対してのみ作用します。画像にリージョンがない場合は、画像全体に対して作用します。</description></item>
             <item><description>このメソッドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>を実行します。
             <!--ImageProcessing.Core.CorrelationListCommand-->
             </example>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>を初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.#ctor(Leadtools.RasterImage,System.Drawing.Point[],System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>を初期化します。
            </summary>
            <reviewed>Safwan 12.Apr.07: I have added this member.</reviewed>
            <param name="correlationImage">検索する画像を参照するRasterImageオブジェクト。</param>
            <param name="points">相関領域の始点で更新される<see cref="T:System.Drawing.Point"/>オブジェクトの配列。</param>
            <param name="listIndex">相関領域と一致する画像のインデックスで更新される整数の配列。</param>
            <param name="xStep">X方向（画像の幅方向）のステップサイズ（ピクセル単位）。最良の結果を得るには、１を指定します。</param>
            <param name="yStep">Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）。最良の結果を得るには、１を指定します。</param>
            <param name="threshold">相関性のしきい値を示す値。２つの領域が相関（類似）していると判断されるために必要な相関度を指定します。リスト内の画像と参照画像内の領域との相関度がこのしきい値より低い場合、両者は相関していないとみなされます。
            有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>を実行します。
            <!--ImageProcessing.Core.CorrelationListCommand.CorrelationListConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.#ctor(System.Drawing.Point[],System.Int32[],System.Int32,System.Int32,System.Int32)">
            <review>
            Malek 08.Aug.07: Adding a new constructor.
            </review>
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>を初期化します。
            </summary>
            <param name="points">相関領域の始点で更新される<see cref="T:System.Drawing.Point"/>オブジェクトの配列。</param>
            <param name="listIndex">相関領域と一致する画像のインデックスで更新される整数の配列。</param>
            <param name="xStep">X方向（画像の幅方向）のステップサイズ（ピクセル単位）。最良の結果を得るには、１を指定します。</param>
            <param name="yStep">Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）。最良の結果を得るには、１を指定します。</param>
            <param name="threshold">相関性のしきい値を示す値。２つの領域が相関（類似）していると判断されるために必要な相関度を指定します。リスト内の画像と参照画像内の領域との相関度がこのしきい値より低い場合、両者は相関していないとみなされます。
            有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>を実行します。
            <!--ImageProcessing.Core.CorrelationListCommand.CorrelationListConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.ToString">
            <summary>
            オーバーライドされます。このメソッドの意味のある名前を返します。
            </summary>
            <returns>このメソッドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Points">
            <summary>
            相関領域の始点で更新される<see cref="T:System.Drawing.Point"/>オブジェクトの配列を取得または設定します。
            </summary>
            <value>相関領域の始点で更新される<see cref="T:System.Drawing.Point"/>の配列。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.CorrelationImage">
            <reviewed>Safwan 12.Apr.07: I have added this property.</reviewed>
            <summary>
            検索する画像を参照するRasterImageオブジェクトを取得または設定します。
            </summary>
            <value>検索する画像を参照するRasterImage。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.ListIndex">
            <summary>
            相関領域と一致する画像のインデックスで更新される整数の配列を取得または設定します。
            </summary>
            <value>相関領域と一致する画像のインデックスで更新される整数の配列。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.XStep">
            <summary>
            X方向（画像の幅方向）のステップサイズ（ピクセル単位）を表す値を取得または設定します。
            </summary>
            <value>X方向（画像の幅方向）のステップサイズ（ピクセル単位）を表す値。最良の結果を得るには、１を指定します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.YStep">
            <summary>
            Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）を表す値を取得または設定します。
            </summary>
            <value>Y方向（画像の高さ方向）のステップサイズ（ピクセル単位）を表す値。最良の結果を得るには、１を指定します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold">
            <summary>
            相関性のしきい値を示す値を取得または設定します。
            </summary>
            <value>相関性のしきい値を示す値。２つの領域が相関（類似）していると判断されるために必要な相関度を指定します。リスト内の画像と画像内の領域との相関度がこのしきい値より低い場合、両者は相関していないとみなされます。
            有効な値の範囲は0（まったく類似していない）～100（完全に一致している）です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.NumberOfPoints">
            <summary>
            １つまたは複数のリスト画像と相関していると実際に判断された、比較画像内の領域の数を示す値を取得します。
            </summary>
            <value>１つまたは複数のリスト画像と相関していると実際に判断された、比較画像内の領域の数を示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType">
            <summary>
            精度をほとんど落とすことなく速度を向上させるため、画像を内部で最小化するときに使用する縮小率を表す列挙値。
            </summary>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.DependOnRollingBallSize">
            <summary>
            ボールのサイズに従って縮小サイズを決定します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.NoShrinking">
            <summary>
            リサイズしません（最高の精度）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.OneToTwo">
            <summary>
            高さと幅を1/2にリサイズします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.OneToFour">
            <summary>
            高さと幅を1/4にリサイズします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.OneToEight">
            <summary>
            高さと幅を1/8にリサイズします（高速）。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags">
            <summary>
            背景が前景より暗いかどうか、および背景なしでオブジェクトを表示するかどうかを示すフラグ。各グループから１つずつフラグを選択する必要があります。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>背景が前景より暗いかどうかを示すフラグ</td>
                 <td>BackgroundIsDarker、BackgroundIsBrighter</td>
              </tr>
              <tr>
                 <td>背景なしでオブジェクトを表示するかどうかを示すフラグ</td>
                 <td>SubtractedImage、TheBackground</td>
              </tr>
             </table>
             </remarks>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.BackgroundIsDarker">
            <summary>
            現在の画像の背景が前景より暗いことを示します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.BackgroundIsBrighter">
            <summary>
            現在の画像の背景が前景より明るいことを示します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.SubtractedImage">
            <summary>
            背景と元の画像との減算結果を出力します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.TheBackground">
            <summary>
            背景のみを出力します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             画像から背景を取り除きます。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、特に医用画像とグレースケール画像で、不均一な明度を補正するときに役立ちます。</description></item>
             <item><description>ボール回転アルゴリズムは以下のように動作します。<br/>
             <list type="number">
             <item><description>画像を3D面、画像の明度（HSVカラースペースのV成分）をZ軸とみなします。</description></item>
             <item><description>ボールのすべての点を3D面の下に保ち、なおかつボールの１個以上の点が3D面と接するようにしながら、3D面の下で3Dボールを転がします。</description></item>
             <item><description>転がるボールに接する点が背景とみなされます。</description></item>
             <item><description>元の画像から背景を減算します。</description></item>
             </list></description></item>
             <item><description>背景をオブジェクトから確実に分離するため、ボールの半径は、背景に含まれない画像内の最大のオブジェクトの半径より大きくします。</description></item>
             <item><description>半径を小さくすると、小さいオブジェクトが検出され、半径を大きくすると、小さいオブジェクトと大きいオブジェクトがどちらも検出されます。</description></item>
             <item><description>背景を減算すると、結果が薄暗くなることがあります。このような場合は明度係数を使用して、背景の減算後に明度を強調できます。この係数は<see cref="T:Leadtools.ImageProcessing.Color.MultiplyCommand"/>と同じように働きます。明度係数に100を指定すると、明度は変更されません。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">明度とコントラストの変更</see>」を参照してください。
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>を実行します。
             <!--ImageProcessing.Core.SubtractBackgroundCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">明度とコントラストの変更</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorReplaceCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.#ctor(System.Int32,Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType,System.Int32,Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="rollingBall">背景を決定するために画像全体の上を転がるボールの半径（ピクセル単位）。推奨値は50です。このパラメータは正の値のみを受け入れます。</param>
            <param name="shrinkingSize">精度をほとんど落とすことなく速度を向上させるため、画像を内部で最小化するときに使用する縮小率。</param>
            <param name="brightnessFactor">画像の明度を増減するための明度係数。有効な値の範囲は0～400です。100を指定した場合、明度は変更されません。値が低いほど画像が暗くなり、高いほど明るくなります。</param>
            <param name="flags">背景が前景より暗いかどうか、および背景なしでオブジェクトを表示するかどうかを示すフラグ。各グループから１つずつフラグを選択する必要があります。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>を実行します。
            <!--ImageProcessing.Core.SubtractBackgroundCommand.SubtractBackgroundConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.RollingBall">
            <summary>
            背景を決定するために画像全体の上を転がるボールの半径（ピクセル単位）を取得または設定します。
            </summary>
            <value>背景を決定するために画像全体の上を転がるボールの半径（ピクセル単位）。推奨値は50です。このプロパティは正の値のみを受け入れます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.ShrinkingSize">
            <summary>
            精度をほとんど落とすことなく速度を向上させるため、画像を内部で最小化するときに使用する縮小率を取得または設定します。
            </summary>
            <value>精度をほとんど落とすことなく速度を向上させるため、画像を内部で最小化するときに使用する縮小率。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.BrightnessFactor">
            <summary>
            画像の明度を増減するための明度係数を取得または設定します。
            </summary>
            <value>画像の明度を増減するための明度係数。有効な値の範囲は0～400です。100を指定した場合、明度は変更されません。値が低いほど画像が暗くなり、高いほど明るくなります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.Flags">
            <summary>
            背景が前景より暗いかどうか、および背景なしでオブジェクトを表示するかどうかを示すフラグを取得または設定します。
            </summary>
            <value>背景が前景より暗いかどうか、および背景なしでオブジェクトを表示するかどうかを示すフラグ。各グループから１つずつフラグを選択する必要があります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             強調された画像（KaufmannProcessedImage）内の指定した点の色値に基づいて、Kaufmannリージョンを設定します。
             </summary>
             <remarks>
             このクラスはKaufmann比（脳梁のサイズと脳球のサイズとの比率）の計算に使用します。脳梁は、脳の左半球と右半球をつなぐ神経線維から成る白質構造です。
             <br/>
             このコマンドは、Kaufmannリージョンを作成する前に、ガウスぼかしなどの強調処理によって画像のノイズを除去します。次に、マジックワンド手法を使用してKaufmannリージョンを作成します。このリージョンは<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart"/>で指定した点の色値から<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold"/>で指定した値までの範囲にあり、
             <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage"/>に格納されます。<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage"/>には、<b>Image</b>のデータ（内部強調処理によって強調されます）と、結果リージョンが含まれます。画像そのものは変更されません。結果リージョンの領域を使用することで、Kaufmann比を計算できます。<br/>
             Kaufmann比を計算するには次の手順に従います。
             <list type="number">
             <item><description>
             次のプロパティを適切に調整してコマンドを呼び出し、脳梁の周りにリージョンを作成します。そして、<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.PixelsCount"/>の値を保存します。
             <list type="bullet">
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.CombineMode"/>プロパティ - 追加する領域の結合方法を指定する<see cref="T:Leadtools.RasterRegionCombineMode"/>の値。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage"/>プロパティ - リージョンを格納する<see cref="T:Leadtools.RasterImage"/>。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MaximumInput"/>プロパティ - ハイライトとみなす値を指定する整数。この値は、ハイライトを明るくしてリージョンの選択を容易にするために内部で使用されます。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MinimumInput"/>プロパティ - シャドウとみなす値を指定する整数。この値は、シャドウを暗くしてリージョンの選択を容易にするために内部で使用されます。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.Radius"/>プロパティ - 内部のぼかし処理で使用される近傍領域のサイズ。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart"/>プロパティ - 作成するリージョンの始点。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold"/>プロパティ - マジックワンドによるリージョンの拡張の終点。新しいピクセルの色とRegionが指し示すピクセルの色との差が、<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold"/>と、<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart"/>が指し示すピクセルの色との差よりも大きい場合、そのピクセルは追加されません。</description></item>
             <item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RemoveHoles"/>プロパティ - 作成するリージョンからすべての穴を除去するかどうかを指定する値。</description></item>
             </list>
             </description></item>
             <item><description>
             プロパティを適切に調整した後、もう一度コマンドを呼び出して脳球の周りにリージョンを作成し、<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.PixelsCount"/>の値を保存します。
             </description></item>
             <item><description>
             比率を計算します。
             </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             脳の比率の計算方法については、下のサンプルを参照してください。<br/>
             このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。<br/>
             </remarks>
             <example>
             渡された画像に対して<see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>を適用します。ここでは、渡された画像の名前を"Image3.dic"としています。
             <!--ImageProcessing.Core.KaufmannRegionCommand-->
             </example>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeIntensityCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeContrastCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.StretchIntensityCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeSaturationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramEqualizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramContrastCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.GaussianCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいKaufmannRegionCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Point,System.Boolean,Leadtools.RasterRegionCombineMode)">
            <summary>
            明示的なパラメータを使用して、新しいKaufmannRegionCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="radius">画像の各ピクセルをぼかすために使用する近傍領域のサイズを示す値。</param>
            <param name="minimumInput">マップするシャドウを指定する値。有効な値の範囲は、８ビット画像では0～255、12ビット画像では0～4095、16ビット画像では0～65535です。</param>
            <param name="maximumInput">マップするハイライトを指定する値。有効な値の範囲は、８ビット画像では0～255、12ビット画像では0～4095、16ビット画像では0～65535です。</param>
            <param name="regionThreshold">リージョンの終点を設定する値。</param>
            <param name="regionStart">内部で作成されたリージョンからすべての穴を除去するかどうかを示す値。</param>
            <param name="combineMode">既存の画像リージョン（すでに定義されている場合）に対する操作を表す値。</param>
            <param name="removeHoles">内部で作成されたリージョンからすべての穴を除去するかどうかを示す値。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.Radius">
            <summary>
            画像の各ピクセルをぼかすために使用する近傍領域のサイズを示す値を取得または設定します。
            </summary>
            <value> 画像の各ピクセルをぼかすために使用する近傍領域のサイズを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MinimumInput">
            <summary>
            シャドウとみなす値を指定する整数を取得または設定します。
            </summary>
            <value>シャドウとみなす値を指定する整数。
            有効な値の範囲は、８ビット画像では0～255、12ビット画像では0～4095、16ビット画像では0～65535です。</value>
            <remarks>
            この値は、シャドウを暗くしてリージョンの選択を容易にするために内部で使用されます。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MaximumInput">
            <summary>
            ハイライトとみなす値を指定する整数を取得または設定します。
            </summary>
            <value>ハイライトとみなす値を指定する整数。
            有効な値の範囲は、８ビット画像では0～255、12ビット画像では0～4095、16ビット画像では0～65535です。</value>
            <remarks>
            この値は、ハイライトを明るくしてリージョンの選択を容易にするために内部で使用されます。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold">
            <summary>
            リージョンの終点を示す値を取得または設定します。
            </summary>
            <value>リージョンの終点。</value>
            <remarks>
            リージョンはマジックワンド手法によって作成されます。マジックワンドは、特定の点を始点とし、そこから周囲の領域に選択範囲を拡張するツールです。新しいピクセルの色と<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart"/>が指し示すピクセルの色との差が、<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold"/>と、<see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart"/>が指し示すピクセルの色との差よりも大きい場合、そのピクセルは追加されません。詳細は、<see cref="M:Leadtools.RasterImage.AddMagicWandToRegion(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)"/>メソッドを参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart">
            <summary>
            リージョンの始点を示す値を取得または設定します。
            </summary>
            <value>リージョンの始点。 </value>
            <remarks>
            リージョンはマジックワンド手法によって作成されます。マジックワンドは、特定の点を始点とし、そこから周囲の領域に選択範囲を拡張するツールです。詳細は、<see cref="M:Leadtools.RasterImage.AddMagicWandToRegion(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)"/>メソッドを参照してください。
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RemoveHoles">
            <summary>
            内部で作成されたリージョンからすべての穴を除去するかどうかを示す値を取得または設定します。
            </summary>
            <value>内部で作成されたリージョンからすべての穴を除去するかどうかを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.PixelsCount">
            <summary>
            内部で作成されたリージョンのピクセル数を取得します。
            </summary>
            <value>内部で作成されたリージョンのピクセル数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.CombineMode">
            <summary>
            リージョンがすでに定義されている場合に、その作成方法を示す値を取得または設定します。
            </summary>
            <value>リージョンがすでに定義されている場合に、その作成方法を示す<see cref="T:Leadtools.RasterRegionCombineMode"/>の値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage">
            <summary>
            処理された画像を参照するインスタンスを取得します。
            </summary>
            <value>処理されたKaufmann画像を参照します（リージョンの指定に使用される強調された画像）。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags">
            <summary>
            変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、クリッピングタイプ、使用または計算する周波数範囲、指定したX調波範囲に対する操作、および指定したY調波範囲に対する操作を示すフラグ。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>変換タイプを示すフラグ</td>
                 <td>DiscreteFourierTransform、InverseDiscreteFourierTransform</td>
              </tr>
              <tr>
                 <td>操作チャネルを示すフラグ</td>
                 <td>Blue、Green、Red、Gray</td>
              </tr>
              <tr>
                 <td>画像の再構築に使用する周波数データのタイプを示すフラグ。このフラグはInverseDiscreteFourierTransformを設定した場合のみ使用されます。DiscreteFourierTransformを設定した場合は無視されます。</td>
                 <td>Magnitude、Phase、Both</td>
              </tr>
              <tr>
                 <td>クリッピングタイプを示すフラグ。このフラグはInverseDiscreteFourierTransformを設定した場合のみ使用されます。DiscreteFourierTransformを設定した場合は無視されます。</td>
                 <td>Clip、Scale</td>
              </tr>
              <tr>
                 <td>使用する調波を示すフラグ</td>
                 <td>All、Range</td>
              </tr>
              <tr>
                 <td>X調波範囲に対する操作を示すフラグ</td>
                 <td>InsideX、OutsideX</td>
              </tr>
              <tr>
                 <td>Y調波範囲に対する操作を示すフラグ</td>
                 <td>InsideY、OutsideY</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.None">
            <summary>
            変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.DiscreteFourierTransform">
            <summary>
            画像を周波数ドメインに変換し、結果をFourierTransformInformationオブジェクトのDataプロパティに格納します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.InverseDiscreteFourierTransform">
            <summary>
            FourierTransformInformationオブジェクトのDataプロパティに設定された周波数成分を使用して画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Blue">
            <summary>
            青チャネルを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Green">
            <summary>
            緑チャネルを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Red">
            <summary>
            赤チャネルを使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Gray">
            <summary>
            マスターチャネルを使用します。このフラグをInverseDiscreteFourierTransformと組み合わせた場合、再構築された画像はグレーになります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Magnitude">
            <summary>
            周波数の振幅データのみから画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Phase">
            <summary>
            周波数の位相データのみから画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Both">
            <summary>
            振幅データと位相データの両方から画像を構築します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Clip">
            <summary>
            構築された画像の値が0～255の範囲になるようにクリッピングします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Scale">
            <summary>
            構築された画像の値が0～255の範囲になるようにスケーリングします。 
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.All">
            <summary>
            すべての調波を使用または計算します。このフラグを使用した場合、範囲長方形と範囲フラグは無視されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Range">
            <summary>
            範囲長方形で指定した調波を使用または計算します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.InsideX">
            <summary>
            X範囲内のX調波のみを使用または計算し、範囲外のX調波を無視します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.OutsideX">
            <summary>
            X範囲外のX調波のみを使用または計算し、範囲内のX調波を無視します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.InsideY">
            <summary>
            Y範囲内のY調波のみを使用または計算し、範囲外のY調波を無視します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.OutsideY">
            <summary>
            Y範囲外のY調波のみを使用または計算し、範囲内のY調波を無視します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.Sep.06: reviewed.</reviewed>
             <summary>
             指定したフラグに従って、画像の離散フーリエ変換または逆離散フーリエ変換を計算します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、離散フーリエ変換アルゴリズムを使用して、画像を時間ドメインから周波数ドメイン、またはその逆に変換します。画像に対して高速フーリエ変換を使用する場合は、<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>を使用します。ただし、高速フーリエ変換メソッドの<see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"/>にはサイズの制約（幅と高さが２の累乗でなければならない）がありますが、このコマンドにはそのような制約はありません。</description></item>
             <item><description>このコマンドを使用する前に、<see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>のインスタンスを作成する必要があります。</description></item>
             <item><description>このコマンドはリージョンに対応していません。画像にリージョンがある場合でも、リージョンは無視されて画像全体が処理されます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像の場合、このメソッドは例外をスローしません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>を実行します。
             <!--ImageProcessing.Core.DiscreteFourierTransformCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,System.Drawing.Rectangle,Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags)">
             <reviewed>Mutasem 8.Sep.06: I changed the name and return type of the first argument from fourierTransformInformation into FourierTransformInformation.
             Samah 28.Sep.06: Reviewed.</reviewed>
             <summary>
             明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>クラスオブジェクトを初期化します。
             </summary>
             <param name="FourierTransformInformation"><see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>構造体。<see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。このプロパティのサイズは画像のサイズと同じであることが必要です。この配列は、<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.DiscreteFourierTransformが設定されている場合、このコマンドによって値が格納されます。<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformが設定されている場合は、画像を構築するためにこのコマンドに送信されます。</param>
             <param name="range"><see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformフラグが設定されている場合は、計算する周波数範囲を指定します。<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformフラグが設定されている場合は、画像の構築に使用する周波数範囲を指定します。左辺の値は最小のX調波、右辺の値は最大のX調波、上辺の値は最小のY調波、下辺の値は最大のY調波をそれぞれ表します。最大のX調波は（幅 - 1）に一致し、最大のY調波は（高さ - 1）に一致します。最小のX調波とY調波はどちらも０です。</param>
             <param name="flags">変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、クリッピングタイプ、使用または計算する周波数範囲、指定したX調波範囲に対する操作、および指定したY調波範囲に対する操作を示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</param>
             <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>を実行します。
             <!--ImageProcessing.Core.DiscreteFourierTransformCommand.DiscreteFourierTransformConstructor-->
             </example>
             <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.Flags">
            <summary>
            変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、クリッピングタイプ、使用または計算する周波数範囲、指定したX調波範囲に対する操作、および指定したY調波範囲に対する操作を示すフラグを取得または設定します。
            </summary>
            <value>変換タイプ、操作チャネル、画像の再構築に使用する周波数データのタイプ、クリッピングタイプ、使用または計算する周波数範囲、指定したX調波範囲に対する操作、および指定したY調波範囲に対する操作を示すフラグ。ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.Range">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformフラグが設定されている場合、計算する周波数範囲を取得または設定します。
            </summary>
            <value><see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformフラグが設定されている場合は、計算する周波数範囲を指定します。<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformフラグが設定されている場合は、画像の構築に使用する周波数範囲を指定します。左辺の値は最小のX調波、右辺の値は最大のX調波、上辺の値は最小のY調波、下辺の値は最大のY調波をそれぞれ表します。最大のX調波は（幅 - 1）に一致し、最大のY調波は（高さ - 1）に一致します。最小のX調波とY調波はどちらも０です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation">
            <reviewed>Mutasem 8.Sep.06: I changed the return type and the name of this property from fourierTransformInformation to FourierTransformInformation.
            Samah 28.Sep.06: Reviewed.</reviewed>
            <summary>
            FourierTransformCommandに関する情報を含む<see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>オブジェクトを取得または設定します。<see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。
            </summary>
            <value><see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>オブジェクト。<see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation"/>オブジェクトのDataプロパティは、画像の周波数成分を保持する２次元配列です。このプロパティのサイズは画像のサイズと同じであることが必要です。この配列は、<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.DiscreteFourierTransformフラグが設定されている場合、このコマンドによって値が格納されます。<see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags"/>.InverseDiscreteFourierTransformフラグが設定されている場合は、画像を構築するためにこのコマンドに送信されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.TransformationParameters">
            <summary>
            <para> 変換する画像の、基準画像に対する回転角度、XY方向の拡大縮小率、およびXY方向の移動量を格納する構造体。 </para>
            </summary>
            <example>
            詳細については、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>を参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.XTranslation">
            <reviewed>Mutasem 8.Sep.06: I added a "set" method to this property.
            Samah 27.sep.06:reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: changed the summary</reviewed>
            <summary>
            画像のX方向の移動量（1/100ピクセル単位）を取得または設定します。
            </summary>
            <value> 画像のX方向の移動量（1/100ピクセル単位）。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.YTranslation">
            <reviewed>Mutasem 8.Sep.06: I added a "set" method to this property.
            Samah 27.sep.06:reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: changed the summary</reviewed>
            <summary>
            画像のY方向の移動量（1/100ピクセル単位）を取得または設定します。
            </summary>
            <value> 画像のY方向の移動量（1/100ピクセル単位）。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.Angle">
            <reviewed>Mutasem 8.Sep.06: I added a "set" method to this property.
            Samah 27.sep.06:reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: changed the summary</reviewed>
            <summary>
            画像の回転角度（1/100度単位）を取得または設定します。
            </summary>
            <value> 画像の回転角度（1/100度単位）を表す値。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.XScale">
            <reviewed>Mutasem 8.Sep.06: I added a "set" method to this property.
            Samah 27.sep.06:reviewed.</reviewed>
            <reviewed>Mohammed 13.10.06: changed the summary</reviewed>
            <summary>
            画像のX方向の拡大縮小率（％単位）を取得または設定します。
            </summary>
            <value> 画像のX方向の拡大縮小率（％単位）を表す値。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.YScale">
            <reviewed>Mutasem 8.Sep.06: I added a "set" method to this property.
            Samah 27.sep.06:reviewed.</reviewed>
            <summary>
            画像のY方向の拡大縮小率（％単位）を取得または設定します。
            </summary>
            <value> 画像のY方向の拡大縮小率（％単位）を表す値。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
            </example> 
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.CountLookupTableColorsType">
            <summary>
            ルックアップテーブルに符号付きデータと符号なしデータのどちらが格納されているかを示すフラグ。
            </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.CountLookupTableColorsType.Unsigned">
            <summary>
            ルックアップテーブルは符号付きデータを含みます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.CountLookupTableColorsType.Signed">
            <summary>
            ルックアップテーブルは符号なしデータを含みます。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.CountLookupTableColorsResult">
            <summary>
            ColorUtilitiesクラスで使用されるルックアップテーブル情報を含む構造体。
            </summary>
            <example>
            詳細については、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">CoreUtilities.CountLookupTableColors メソッド</see>を参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CountLookupTableColorsResult.NumberOfEntries">
            <summary>
            開始色から終了色までのエントリの総数で更新される変数。開始色と終了色は内部で決定されます。
            </summary>
            <value>開始色から終了色までのエントリの総数で更新される変数。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">CoreUtilities.CountLookupTableColors</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.CountLookupTableColorsResult.FirstIndex">
            <summary>
            開始色が最後に現れた位置のインデックスで更新される変数。
            </summary>
            <value>開始色が最後に現れた位置のインデックスで更新される変数。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">CoreUtilities.CountLookupTableColors</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.CoreUtilities">
            <reviewed>Mutasem 9.5.06: This is a new class, but its contents are taken from the old EffectsUtilities class. If you didnt understand please ask me about it.
            Samah 27.Sep.06:reviewed.</reviewed>
            <summary>
            コアユーティリティクラス。
            </summary>
            <example>
            以下のサンプルは、変換パラメーターを計算します。ここでは、基準画像のレジスターマークの位置をすでにファイルに保存していると仮定します。このサンプルをテストする場合は、rmDataを手動で割り当てている箇所を、基準レジスターマークのデータをロードするコードに置き換えてください。
            <!--ImageProcessing.Core.CoreUtilities.GetTransformationParameters-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])">
             <summary>
             変換する画像を基準画像と比較して、変換する画像の回転角度、XY方向の拡大縮小率、およびXY方向の移動量を計算します。これらは、基準画像をカレント画像に合わせる場合に基準画像に対して実行される変換操作です。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <param name="image">変換する画像を参照するRasterImageオブジェクト。</param>
             <param name="referencePoints">基準点の配列へのポインタ。これらの点は、基準画像におけるレジスタマークの重心点を表します。この情報はプログラマが設定する必要があります。</param>
             <param name="transformedPoints">変換する点の配列へのポインタ。これらの点は、変換する画像における重心点を表します。この情報はプログラマが設定する必要があります。</param>
             <returns><see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/></returns>
             <remarks>
             <list type="bullet">
             <item><description>このメソッドは、変換する画像を基準画像と比較して、変換する画像の変換パラメータを検出します。基準点と検出された点はどちらも必ず３個にします。</description></item>
             <item><description><see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"/>を使用して、基準画像の各基準マークの重心を表す点をreferencePoints配列に設定します。</description></item>
             <item><description>transformedPoints配列の値を設定するには、以下の手順に従います。<br/><br/>
             <list type="bullet">
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>を使用して、基準マークの新しい位置を検出します。</description></item>
             <item><description><see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"/>を使用して、変換する各基準マークの重心を表す点をtransformedPoints配列に設定します。</description></item>
             </list></description></item>
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/>のプロパティ（XTranslation、YTranslation、Angle、XScale、YScale）は内部で100で除算されます。たとえば、Angleが500の場合は、画像を時計回りに５度回転させることを意味します。</description></item>
             <item><description>画像を補正するためには、このメソッドの結果を一切変更せずにApplyTransformationParametersメソッドに渡す必要があります。</description></item>
             <item><description>画像を自分で補正する場合は、以下の順序で逆演算を行います。<br/><br/>
             <list type="bullet">
             <item><description><see cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"/>を使用して、画像を（-<see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/>.XTranslation / 100, -<see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/>.YTranslation / 100）ピクセル移動します。</description></item>
             <item><description>リサイズせずに-（<see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/>.Angle）度回転させます。</description></item>
             <item><description><see cref="T:Leadtools.ImageProcessing.SizeCommand"/>または<see cref="T:Leadtools.ImageProcessing.ResizeCommand"/>を使用して、（100 / <see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/>.XScale, 100 / <see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters"/>.YScale）％の拡大縮小率でリサイズします。</description></item>
             </list></description></item>
             <item><description>単に画像の傾きを自動的に補正するだけの場合は、<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を使用します。</description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは符号付き画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
             </remarks>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
             <example>
             以下のサンプルは、変換パラメーターを計算します。ここでは、基準画像のレジスターマークの位置をすでにファイルに保存していると仮定します。このサンプルをテストする場合は、rmDataを手動で割り当てている箇所を、基準レジスターマークのデータをロードするコードに置き換えてください。
             <!--ImageProcessing.Core.CoreUtilities.GetTransformationParameters-->
             </example>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)">
             <reviewed>Mutasem 10.Sep.06: I changed the name of the two arguments from minimumScale and maximumScale to minScale and maxScale, respectively.
             Samah 27.Sep.06:reviewed.</reviewed>
             <summary>
             画像内にあるオブジェクトがレジスタマークかどうかを判定します。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <param name="image">レジスタマークを含む画像を参照するRasterImageオブジェクト。</param>
             <param name="type">検証するレジスタマークの種類を示すフラグ。現時点では、レジスタマークは１種類（T型）しか定義されていません。詳細は下記の解説を参照してください。今後、他の形状が追加される予定です。</param>
             <param name="minScale">検出するマークの最小の拡大縮小率。これはパーセントで表します。maxScaleより大きい値を指定すると、エラーが返されます。このパラメータは正の値のみを受け入れます。</param>
             <param name="maxScale">検出するマークの最大の拡大縮小率。これはパーセントで表します。minScaleより小さい値を指定すると、エラーが返されます。このパラメータは正の値のみを受け入れます。</param>
             <param name="width">レジスタマークの幅（ピクセル単位）。このパラメータは正の値のみを受け入れます。</param>
             <param name="height">レジスタマークの高さ（ピクセル単位）。このパラメータは正の値のみを受け入れます。</param>
             <returns>指定したオブジェクトがレジスタマークかどうかを示すブール値。</returns>
             <remarks>
             <list type="bullet">
             <item><description>このメソッドは、画像内にあるオブジェクトがレジスタマークかどうかを検証します。オブジェクトは白で、背景は黒であることが必要です。白以外のオブジェクトは検出されません。このメソッドが正しく機能するためには、画像内にオブジェクトが１つだけ存在する必要があります。</description></item>
             <item><description>現時点で定義されているtypeは１種類のみで、下の図のようにT型の形状をしています。これは反時計回りに90度回転させた"T"です。P4点は線分P1P2の中心点である（つまり、P1からP4の距離とP2からP4の距離が等しい）ことが必要です。線の幅は２ピクセルより太くします（３ピクセルが推奨されます）。線の長さには条件はなく、width、height、maxScale、およびminScaleに値を指定できます。<br/><br/> <img src="T_Shape_Fig.jpg"/></description></item>
             <item><description>画像内でレジスタマークを検索する場合は、このコマンドではなく<see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>を使用してください。</description></item>
             <item><description>単に画像の傾きを自動的に補正するだけの場合は、<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を使用します。</description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このメソッドは符号付きデータ画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
             </remarks>
             <example>
             以下のサンプルは、オブジェクトがレジスターマークかどうかを判定します。
             <!--ImageProcessing.Core.CoreUtilities.IsRegistrationMark-->
             </example>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])">
             <summary>
             markPointsで指定した各レジスタマークの重心を求めます。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <param name="image">変換する画像を参照するRasterImageオブジェクト。</param>
             <param name="markPoints">マークの位置を含む点の<see cref="T:System.Drawing.Point"/>構造体の配列。</param>
             <returns>指定した各レジスタマークの重心を表す点が格納された<see cref="T:System.Drawing.Point"/>構造体の配列。最初の重心点はmarkPoints配列の最初のレジスタマークに対応し、その後、２番目の重心点は２番目のレジスタマークのように続きます。</returns>
             <remarks>
             <list type="bullet">
             <item><description>このメソッドは、指定した各レジスタマークの重心を求めるために使用します。これは、画像の回転、拡大縮小、および位置の移動を検出する際に使用されます。</description></item>
             <item><description>このメソッドから返される結果（つまり、各重心を表す点）は、精度を向上させるために100倍されています（00.00）。実際の結果を得るためには、結果を100で割ります。</description></item>
             <item><description>このメソッドは内部で100で割った値を使用します。</description></item>
             <item><description>このメソッドは以下のように使用します。<br/><br/>
             <list type="bullet">
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"/>を使用してレジスタマークを検出します。</description></item>
             <item><description>MarkDetectedPointsのデータをこのメソッドに渡して、各レジスタマークの重心を表す点を求めます。</description></item>
             <item><description>これらの点を<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>に渡して、画像の回転、拡大縮小、および位置の移動を検出します。</description></item>
             </list></description></item>
             <item><description>単に画像の傾きを自動的に補正するだけの場合は、<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を使用します。</description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このメソッドは符号付きデータ画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
             </remarks>
             <example>
             <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
             </example>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">
             <summary>
             開始色から終了色までのエントリの総数と、開始色が最後に現れた位置のインデックスを取得します。開始色と終了色は内部で決定されます。
             </summary>
             <param name="lookupTable">このメソッドによって値を設定するルックアップテーブルの配列。</param>
             <param name="type">ルックアップテーブルに符号付きデータと符号なしデータのどちらが格納されているかを示すフラグ。</param>
             <remarks>
             <list type="bullet">
             <item><description>4096色のルックアップテーブルがあり、その最初の200色が黒、最後の30色が白で、黒と白の間はグレーであるとします。この場合、このメソッドの結果は以下のようになります。
             <br/>
             <br/>NumberOfEntries（CountLookupTableColorsResultのプロパティ）：3868
             <br/>
             <br/>FirstIndex（CountLookupTableColorsResultのプロパティ）：199
             </description></item>
             <item><description>これをもう少し詳しく説明すると、以下のようになります。<br/>
             <br/>エントリの総数：4096（0～4095）<br/>
             <br/>終了色の最初のインデックス：4095 - 30 + 1（終了色の最初のインデックスを範囲に含めるため、１加算します）<br/>
             <br/>開始色の出現数：200（0～199）<br/>
             <br/>開始色の最後のインデックス：199<br/>
             <br/>エントリの総数：(4095 - 30 + 1) - 199 + 1<br/>
             </description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像をサポートしています。12ビットと16ビットのグレースケール画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             </list>
             </remarks>
             <example>
             <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)"/>メソッドを実行して、画像のルックアップテーブルのエントリ数と開始インデックスを取得します。
             <!--ImageProcessing.Core.CoreUtilities.CountLookupTableColors-->
             </example>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Effects.EffectsUtilities.GetUserLookupTable(System.Int32[],System.Drawing.Point[])"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             ユーザーが指定した量だけ画像データを負の側にシフトすることにより、グレースケールの符号なし画像を符号付き画像に変換します。
             </summary>
             <remarks>
             このコマンドは<see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"/>に似ていますが、<see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>を実行すると、シフトされた明度値を示す値が<see cref="P:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ShiftAmount"/>に設定されます。12ビットまたは16ビットの符号なしグレースケール画像をサポートする画像処理コマンドを使用した後、MinimumToZeroCommandで設定された<see cref="P:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ShiftAmount"/>の値をZeroToNegativeCommandに渡して、画像を符号付きに戻すことができます。<br/>
             <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>と<b>ZeroToNegativeCommand</b>はほとんどの場合、画像処理コマンドや画像分析コマンドと一緒に使用します。
             <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>は、符号なし画像データをサポートする画像処理コマンドや画像分析コマンドを符号付き画像に適用するため、符号付きデータを符号なしデータに変換します。画像処理や画像分析を実行した後、<b>ZeroToNegativeCommand</b>を使用して符号なしデータを符号付きデータに戻すことができます。
             <br></br>通常、このコマンドは<see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"/>コマンドの後に使用します。
             <br></br>このコマンドによって、<see cref="T:Leadtools.RasterImage"/>の<see cref="P:Leadtools.RasterImage.Signed"/>プロパティが更新されます。
             <br></br>また、このコマンドによって、<see cref="T:Leadtools.RasterImage"/>の<see cref="P:Leadtools.RasterImage.MinValue"/>プロパティと<see cref="P:Leadtools.RasterImage.MaxValue"/>プロパティも更新されます。
             <br></br>このコマンドは符号付きデータ画像をサポートしており、12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。
             ただし、このコマンドは８ビットの画像をサポートしていません。
             <br></br>このコマンドは32ビットのグレースケール画像をサポートしていません。
             </remarks>
             <example>
             このコマンドは符号付き画像に対してMultiscaleEnhancementCommandを適用しますが、MultiscaleEnhancementCommandは符号付き画像をサポートしていないため、画像をいったん符号なし画像に変換し、エフェクトを適用した後、元の符号付き画像に戻します。
             <!--ImageProcessing.Core.ZeroToNegativeCommand-->
             </example>
            <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="shiftAmount">画像データを負の側にシフトするために使用する値。</param>
            <param name="minimumInput">画像の最小値。この値はMinMaxValuesCommandを使用して取得できます。</param>
            <param name="maximumInput">画像の最大値。この値はMinMaxValuesCommandを使用して取得できます。</param>
            <param name="minimumOutput">最小許容値。コマンドを適用した後の画像データの値はこの値より小さくなりません。</param>
            <param name="maximumOutput">最大許容値。コマンドを適用した後の画像データの値はこの値を超えません。</param>
            <example>
            このコマンドは符号付き画像に対してMultiscaleEnhancementCommandを適用しますが、MultiscaleEnhancementCommandは符号付き画像をサポートしていないため、画像をいったん符号なし画像に変換し、エフェクトを適用した後、元の符号付き画像に戻します。
            <!--ImageProcessing.Core.ZeroToNegativeCommand.ZeroToNegativeConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.ShiftAmount">
            <summary>
            画像データを負の側にシフトするために使用する値を取得または設定します。
            </summary>
            <value>画像データを負の側にシフトするために使用する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MinimumInput">
            <summary>
            画像の最小値を取得または設定します。
            </summary>
            <value>画像の最小値。この値はMinMaxValuesCommandを使用して取得できます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MaximumInput">
            <summary>
            画像の最大値を取得または設定します。
            </summary>
            <value>画像の最大値。この値はMinMaxValuesCommandを使用して取得できます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MinimumOutput">
            <summary>
            最小許容値を取得または設定します。
            </summary>
            <value>最小許容値。コマンドを適用した後の画像データの値はこの値より小さくなりません。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MaximumOutput">
            <summary>
            最大許容値を取得または設定します。
            </summary>
            <value>最大許容値。コマンドを適用した後の画像データの値はこの値を超えません。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">
            <summary>
             <para>パンチ穴削除処理の動作を決定する値。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseDpi">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のすべてのプロパティの単位を1/1000インチにします。画像のDPIを使用してピクセルに変換することで、DPIの異なる複数の画像を処理できます。このフラグを設定しない場合、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のプロパティの単位はすべてピクセルになります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.SingleRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>によって検出された各パンチ穴について、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>に設定された場合、削除されたパンチ穴を内部シングルリージョンに追加します。<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>に設定された場合は、パンチ穴をシングルリージョンに追加しません。<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>が戻るとき、削除されたすべてのパンチ穴を含むリージョンが、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region"/>のどちらかに設定されます。LeadRegionが同時に設定されている場合、削除されたすべてのパンチ穴をLEADリージョンとして持つ画像のシャローコピーが<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>に設定されます。LeadRegionが同時に設定されていない場合、削除されたすべてのパンチ穴を含むWindowsリージョンが<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region"/>に設定されます。
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region"/>に割り当てられたLEADリージョンまたはWindowsリージョンは、不要になったときに破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.LeadRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>が戻るとき、削除されたすべてのパンチ穴をリージョンとして持つRunメソッド画像のシャローコピーを<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>に設定します。
            このフラグはSingleRegionと組み合わせる必要があります。そのため、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Flags"/>をSingleRegion | LeadRegionに設定します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.CallBackRegion">
            <summary>
            削除しようとしているパンチ穴を含むWindowsリージョンを<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Region"/>プロパティに設定します。このフラグを設定すると、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったリージョンを結合することによって、削除されたパンチ穴を含む独自のリージョンを作成できます。リージョンは論理OR演算子を使用して結合できます。
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったすべてのリージョンを結合すると、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Flags"/>にSingleRegionを設定した場合に作成されるリージョンと結果的に同じになります。
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Region"/>プロパティで受け取ったリージョンが不要になったときは、破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.ImageUnchanged">
            <summary>
            Runメソッドの画像を変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseSize">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>の<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleWidth"/>、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleHeight"/>、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleWidth"/>、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleHeight"/>の各プロパティを使用して、削除するパンチ穴のサイズを指定します。
            このフラグを設定しない場合、これら４つのサイズについてデフォルト値が使用されます。
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>が設定されている場合、デフォルトは画像のDPIに基づいて計算されます。UseDpiが設定されていない場合、デフォルトは画像の幅と高さに基づいて計算されます。
            </summary>,
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseCount">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>の<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleCount"/>プロパティと<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleCount"/>プロパティを使用して、削除するパンチ穴の数を指定します。
            このフラグを設定しない場合、これら２つの数についてデフォルト値が使用されます。
            デフォルト値は、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleCount"/> = 3、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleCount"/> = 3です。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseLocation">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>の<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Location"/>プロパティを使用して、削除するパンチ穴の位置を指定します。
            このフラグを設定しない場合、デフォルト値として<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation">HolePunchRemoveCommandLocation.Left</see>が使用されます。 
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation">
            <summary>
             <para>削除するパンチ穴の文書上での位置を示すフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Left">
            <summary>
            ドキュメントの左側にあるパンチ穴パターンを検索します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Right">
            <summary>
            ドキュメントの右側にあるパンチ穴パターンを検索します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Top">
            <summary>
            ドキュメントの上側にあるパンチ穴パターンを検索します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Bottom">
            <summary>
            ドキュメントの下側にあるパンチ穴パターンを検索します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>によって検出された各パンチ穴を処理します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.HolePunchRemoveCommandEventArgs.HolePunchRemoveCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいHolePunchRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="image">対象の画像を含むRasterImageオブジェクト。</param>
            <param name="region">パンチ穴パターンの穴の１つを表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</param>
            <param name="boundingRectangle">パンチ穴パターンの穴の１つのバウンディング長方形。</param>
            <param name="holeIndex">パンチ穴パターン内の穴のインデックス。穴の番号は1～nです。nはパンチ穴パターンの穴の総数を示します。</param>
            <param name="holeTotalCount">パンチ穴パターンを構成する穴の総数。
            この値は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>の１回の呼び出しにおいて変更されることはありません。</param>
            <param name="whiteCount">パンチ穴パターンの穴の１つに含まれる白ピクセルの総数。</param>
            <param name="blackCount">パンチ穴パターンの穴の１つに含まれる黒ピクセルの総数。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.HolePunchRemoveCommandEventArgs.HolePunchRemoveCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Image">
            <summary>
            対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクトを取得します。
            </summary>
            <value>対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクト。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">HolePunchRemoveCommandEventArgs(Leadtools.RasterImage, System.Drawing.Region, System.Drawing.Rectangle, int, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Region">
            <summary>
            パンチ穴パターンの穴の１つを表すWindowsリージョンを取得します。
            </summary>
            <value>パンチ穴パターンの穴の１つを表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">HolePunchRemoveCommandEventArgs(RasterImage, Region, Rectangle, int, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.BoundingRectangle">
            <summary>
            パンチ穴パターンの穴の１つのバウンディング長方形を含むRectangle構造体を取得します。
            </summary>
            <value>パンチ穴パターンの穴の１つのバウンディング長方形。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.HoleIndex">
            <summary>
            パンチ穴パターン内の穴のインデックスを取得します。
            </summary>
            <value>パンチ穴パターン内の穴のインデックス。穴の番号は1～nです。nはパンチ穴パターンの穴の総数を示します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.HoleTotalCount">
            <summary>
            パンチ穴パターンを構成する穴の総数を取得します。
            </summary>
            <value>パンチ穴パターンを構成する穴の総数。
            この値は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>の１回の呼び出しにおいて変更されることはありません。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.WhiteCount">
            <summary>
            パンチ穴パターンの穴の１つに含まれる白ピクセルの総数を取得します。
            </summary>
            <value>パンチ穴パターンの穴の１つに含まれる白ピクセルの総数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.BlackCount">
            <summary>
            パンチ穴パターンの穴の１つに含まれる黒ピクセルの総数を取得します。
            </summary>
            <value>パンチ穴パターンの穴の１つに含まれる黒ピクセルの総数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status">
            <summary>
            パンチ穴削除処理のステータスを取得または設定します。
            </summary>
            <value>パンチ穴削除処理のステータスを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventHandler">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>によって検出された各パンチ穴を処理するメソッドを表します。
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>
            <b>HolePunchRemoveCommandEventHandler</b>デリゲートを作成するときは、イベントを処理するメソッドを指定します。
            イベントにイベントハンドラを関連付けるには、デリゲートのインスタンスをイベントに追加します。デリゲートを削除しない限り、そのイベントが発生するたびに、指定したイベントハンドラが呼び出されます。
            デリゲートはC++のメソッドポインタとよく似ており、主にコールバックの実行とイベントの定義に使用されます。デリゲートは実行時に定義されます。
            コールバックメソッドでは非同期処理が可能で、この場合、呼び出されたメソッドはスレッドを開始してすぐに呼び出し元に戻ります。その後はスレッドがほとんどの処理を実行し、必要に応じてコールバックを呼び出します。
            イベントはパブリッシュ／サブスクライブ型の通信方式を使用します。クラスはイベントをパブリッシュし、任意の数のクラスがそのイベントにサブスクライブできます。イベントが発生すると、ランタイムがサブスクライバに通知します。
            イベントの定義に使用するデリゲートは、パブリッシャオブジェクトとイベント情報オブジェクト（.NET EventArgsクラスから派生）の２つの引数を受け取る必要があります。</description></item>
            <item><description>
            このデリゲートメソッドは、パンチ穴パターンを構成する穴が検出されるたびに呼び出されます。たとえば、パンチ穴パターンが３つの穴から構成される場合は、このデリゲートが３回呼び出されます。
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status"/>を<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>に設定すると、その穴は削除され、<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>に設定すると、穴は削除されません。また、<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Cancel</see>に設定すると、処理が中止されます。
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.ImageUnchanged</see>と<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see>を設定した場合、<see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status"/>の値は、すべての変更を含む内部シングルリージョンに対してのみ作用します。</description></item>
             </list>
            </remarks>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベントデータを格納している<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs"/>。</param>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             パンチ穴を検出して削除します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <keywords>ドキュメントのクリーンアップ|削除|パンチ穴|クリーンアップ|１ビット画像</keywords>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、スキャンした文書によく見られるパンチ穴を検出して削除します。
             このコマンドの動作は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventHandler"/>デリゲートメソッドを使用して変更できます。 </description></item>
             <item><description>このコマンドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>パンチ穴は２つ以上の穴から構成されます。</description></item>
             <item><description>リージョンが選択されている場合は、そのリージョンのみが処理対象となります。リージョンが選択されていない場合は、画像全体が処理されます。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。 </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             <item><description>この関数を呼び出す前に、パンチ穴が他の汚れから離れていることを確認してください。他の汚れと接触していると、穴が認識されません。画像から水平または垂直のラインを除去するには、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>コマンドを使用します。点、しみ、境界線、反転したテキスト、突起、裂け目などを画像から除去するには、その他の<see cref="T:Leadtools.Topics.CleaningUp1bitImages">ドキュメントクリーンアップ</see>関数を使用します。
             このようにドキュメントをクリーンアップすると、圧縮時に画像サイズが小さくなるという利点も得られます。</description></item>
             </list>
             <para>
             たとえば次の画像では、パンチ穴を除去する必要があります。</para>
             <img src="LineRemoveCommand_before.jpg"/>
             <para></para>
             <para>次の図のように画像をクリーンアップすると、パンチ穴が除去できます。</para>
             <img src="HolePunchRemoveCommand_after.jpg"/>
             <para>詳細は、「<see cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</see>」を参照してください。</para>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>を実行します。
             <!--ImageProcessing.Core.HolePunchRemoveCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいHolePunchRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags,Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいHolePunchRemoveCommandを初期化します。
            </summary>
            <param name="flags">パンチ穴削除処理の動作を決定するフラグ。</param>
            <param name="location">削除するパンチ穴の文書上での位置を示すフラグ。</param>
            <param name="minimumHoleCount">検出する穴の最小数。このメンバは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see>フラグを設定した場合のみ有効です。</param>
            <param name="maximumHoleCount">検出する穴の最大数。このメンバは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see>フラグを設定した場合のみ有効です。</param>
            <param name="minimumHoleWidth">削除するパンチ穴パターンの穴の１つの最小の幅。
            単位は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。このパラメータは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</param>
            <param name="minimumHoleHeight">削除するパンチ穴パターンの穴の１つの最小の高さ。
            単位は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。このパラメータは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</param>
            <param name="maximumHoleWidth">削除するパンチ穴パターンの穴の１つの最大の幅。
            単位は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。このパラメータは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</param>
            <param name="maximumHoleHeight">削除するパンチ穴パターンの穴の１つの最大の高さ。
            単位は、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。このパラメータは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.HolePunchRemoveCommand.HolePunchRemoveConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Flags">
            <summary>
            パンチ穴削除処理の動作を決定するフラグを取得または設定します。
            </summary>
            <value>パンチ穴削除処理の動作を決定する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleCount">
            <summary>
            検出する穴の最小数を取得または設定します。
            </summary>
            <value>検出する穴の最小数。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see>フラグを設定した場合のみ有効です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleCount">
            <summary>
            検出する穴の最大数を取得または設定します。
            </summary>
            <value>検出する穴の最大数。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see>フラグを設定した場合のみ有効です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleWidth">
            <summary>
            削除するパンチ穴パターンの穴の１つの最小の幅を取得または設定します。
            </summary>
            <value>削除するパンチ穴パターンの穴の１つの最小の幅。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleHeight">
            <summary>
            削除するパンチ穴パターンの穴の１つの最小の高さを取得または設定します。 
            </summary>
            <value>削除するパンチ穴パターンの穴の１つの最小の高さ。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleWidth">
            <summary>
            削除するパンチ穴パターンの穴の１つの最大の幅を取得または設定します。 
            </summary>
            <value>削除するパンチ穴パターンの穴の１つの最大の幅。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>を設定した場合は1/1000インチで、設定していない場合はピクセルです。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleHeight">
            <summary>
            削除するパンチ穴パターンの穴の１つの最大の高さを取得または設定します。
            </summary>
            <value>削除するパンチ穴パターンの穴の１つの最大の高さ。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see>を設定した場合は1/1000インチで、設定していない場合はピクセルです。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see>を設定した場合のみ有効です。</value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Location">
            <summary>
            削除するパンチ穴の文書上での位置を示す値を取得または設定します。
            </summary>
            <value>削除するパンチ穴の文書上での位置を示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region">
            <summary>
            Windowsリージョンのハンドルを取得します。
            </summary>
            <value>
            Windowsリージョンのハンドル。
            </value>
            <remarks>
            Flagsに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see>のみが設定されていて、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.LeadRegion</see>が設定されていない場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>が戻るときに、すべての変更を含む１つのWindowsリージョンで更新されます。これを使用するには、Flagsプロパティを<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see>に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">HolePunchRemoveCommandEventArgs(RasterImage, Region, Rectangle, int, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion">
            <summary>
            このプロパティは、パンチ穴をリージョンとして持つ画像のシャローコピーで更新されます。
            </summary>
            <value>
            パンチ穴をリージョンとして持つ画像のシャローコピー。
            </value>
            <remarks>
            Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.LeadRegion</see>が設定されている場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>が戻るときに、パンチ穴をリージョンとして持つ画像のシャローコピーで更新されます。そのため、Flagsを<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.LeadRegion</see>に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion-->
            </example>
            <noremarks/>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.HolePunchRemove">
            <reviewed>Mutasem 10.Sep.06: I modified this method to accommodate new v15 changes, I also updated the "summary" and "value" tags, to accommodate the change happened here.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            追加処理のためのオプションのデリゲートメソッド。
            </summary>
            <value>追加処理のためのオプションのデリゲートメソッド。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HalfToneCommandType">
            <summary>
            作成するハーフトーンのタイプを示す列挙体。
            </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Print">
            <summary>
            印刷用のハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.View">
            <summary>
            表示用のハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Rectangular">
            <summary>
            四角状のハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Circular">
            <summary>
            円状のハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Elliptical">
            <summary>
            楕円状のハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Random">
            <summary>
            ランダムなハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Linear">
            <summary>
            線状のハーフトーン
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.UserDefined">
            <summary>
            ユーザー定義のハーフトーン
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.HalfToneCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             １、４、８、16、24、または32ビットの画像を、指定したパターンと角度を使用してハーフトーン画像に変換します。ハーフトーン画像とは、白黒の印刷または表示用にディザリングされた１ビットの画像です。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description><see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.UserDefinedフラグを選択した場合、リストには（Dimension * Dimension + 1）個以上の画像が必要です。画像のインデックスが大きいほど、高い明度値に対応します。</description></item>
             <item><description>このコマンドは、画像全体または画像のリージョンを処理できます。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていません。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしています。</description></item>
             <item><description>例：効果適用前の画像<p></p>
             <img src="Basic_before.jpg"/><p></p>
             効果適用後の画像<p></p>
             <img src="HalfToneCommand_after.jpg"/><p></p>
             </description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」を参照してください。<br/>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>を実行します。
             <!--ImageProcessing.Core.HalfToneCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.Topics.ColorHalftoneandHalftoneImages">カラーハーフトーンおよびハーフトーン画像</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.GrayscaleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleExtendedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.AutoColorLevelCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.#ctor(Leadtools.ImageProcessing.Core.HalfToneCommandType,System.Int32,System.Int32,Leadtools.RasterImage)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="type">作成するハーフトーンのタイプを示す値。</param>
            <param name="angle">回転角度（1/100度単位）。０を指定すると、水平のハーフトーンパターンになります。このパラメータは、パターンを回転させる角度を指定します。正の値を指定するとパターンが時計回りに回転し、負の値を指定すると反時計回りに回転します。この値は、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Rectangle、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Circle、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Random、または<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.UserDefinedのハーフトーンパターンを選択した場合は無視されます。</param>
            <param name="dimension">グレインのサイズを示す値。この値は、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Viewまたは<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Printのハーフトーンパターンを選択した場合は無視されます。パターンが<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Viewまたは<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Print以外の場合は、dimension &gt;= 1であることが必要です。このパラメータに１未満を指定すると、ERROR_INV_PARAMETERが返されます。</param>
            <param name="userDefinedImage"><see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.UserDefinedオプションを選択した場合にハーフトーンの作成に使用する画像のリスト。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>を実行します。
            <!--ImageProcessing.Core.HalfToneCommand.HalfToneConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.UserDefinedImage">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.UserDefinedオプションを選択した場合にハーフトーンの作成に使用する画像のリストを取得または設定します。
            </summary>
            <value><see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.UserDefinedオプションを選択した場合にハーフトーンの作成に使用する画像のリスト。</value>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>を実行します。
            <!--ImageProcessing.Core.HalfToneCommand.UserDefinedImage-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.Type">
            <summary>
            作成するハーフトーンのタイプを示す値を取得または設定します。
            </summary>
            <value>作成するハーフトーンのタイプを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.Angle">
            <summary>
            回転角度を取得または設定します。
            </summary>
            <value>回転角度（1/100度単位）。０を指定すると、水平のハーフトーンパターンになります。
            このプロパティは、パターンを回転させる角度を指定します。正の値を指定するとパターンが時計回りに回転し、負の値を指定すると反時計回りに回転します。この値は、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Rectangle、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Circle、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Random、または<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.UserDefinedのハーフトーンパターンを選択した場合は無視されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.Dimension">
            <summary>
            グレインのサイズを示す値を取得または設定します。
            </summary>
            <value>グレインのサイズを示す値。この値は、<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Viewまたは<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Printのハーフトーンパターンを選択した場合は無視されます。パターンが<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Viewまたは<see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType"/>.Print以外の場合は、Dimension &gt;= 1であることが必要です。このプロパティに１未満を指定すると、ERROR_INV_PARAMETERが返されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags">
            <summary>
            画像をリサイズするときの動作を示す列挙体。
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>リサイズ方法を示すフラグ</td>
                 <td>Normal、Resample、Bicubic</td>
              </tr>
              <tr>
                 <td>画像を縮小するときに残す色を示すフラグ</td>
                 <td>FavorBlack、FavorWhite</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.None">
            <summary>
            変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.Normal">
            <summary>
            普通にリサイズします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.Resample">
            <summary>
            線形補間と平均化を使用して高品質の画像を生成します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.Bicubic">
            <summary>
            バイキュービック補間と平均化を使用して高品質の画像を生成します。処理速度はResampleより遅くなります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.FavorBlack">
            <summary>
            （<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみ）画像を縮小するときに黒いオブジェクトを残します。このフラグは１ビット（白黒）画像に対してのみ有効で、細い線が消失するのを防ぎます。このフラグは、ビットごとのOR（|）を使用して別のフラグと結合できます。たとえば、Resample | FavorBlackと指定すると、カラー画像はリサンプルされますが、１ビットの白黒画像にはFavorBlackオプションが適用されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.FavorWhite">
            <summary>
            （<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみ）画像を縮小するときに白いオブジェクトを残します。このフラグは１ビット（白黒）画像に対してのみ有効で、細い線が消失するのを防ぎます。このフラグは、ビットごとのOR（|）を使用して別のフラグと結合できます。たとえば、Resample | FavorWhiteと指定すると、カラー画像はリサンプルされますが、１ビットの白黒画像にはFavorWhiteオプションが適用されます。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed</reviewed>
             <summary>
             画像に加えられた移動、回転、および拡大縮小による変形を取り除いて画像を補正します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、画像に加えられた移動、回転、および拡大縮小による変形を取り除いて画像を補正します。これらの変換は、対象の画像を基準画像に合わせる場合に役立ちます。</description></item>
             <item><description>このコマンドは、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>とともに使用します。</description></item>
             <item><description><see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>を使用して移動、回転、および拡大縮小パラメータを取得し、戻り値をそのままApplyTransformationParametersCommandメソッドに渡します。</description></item>
             <item><description>まず移動操作が実行され、続いて回転、リサイズの順に操作が実行されます。</description></item>
             <item><description>単に画像の傾きを自動的に補正するだけの場合は、<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"/>を使用します。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
             </remarks>
             <example>
             <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>のサンプルを参照してください。
             </example>
             詳細は、「<see cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</see>」を参照してください。
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            以下のサンプルは、変換パラメーターを計算します。ここでは、基準画像のレジスターマークの位置をすでにファイルに保存していると仮定します。このサンプルをテストする場合は、rmDataを手動で割り当てている箇所を、基準レジスターマークのデータをロードするコードに置き換えてください。
            <!--ImageProcessing.Core.ApplyTransformationParametersCommand.ApplyTransformationParametersConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="xTranslation">画像のX軸方向（幅）の移動量（ピクセル単位）。この値は内部で100で除算されます。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。</param>
            <param name="yTranslation">画像のY軸方向（高さ）の移動量（ピクセル単位）。この値は内部で100で除算されます。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。</param>
            <param name="angle">回転角度（+/-方向に1/100度単位）。1～36,000の値を指定できます。この値は内部で100で除算されます。正の値を指定すると画像が時計回りに回転し、負の値を指定すると反時計回りに回転します。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。</param>
            <param name="xScale">画像のX軸方向（幅）の拡大縮小率。これはパーセントで表します（内部で100で除算されます）。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。このパラメータは正の値のみを受け入れます。</param>
            <param name="yScale">画像のY軸方向（高さ）の拡大縮小率。これはパーセントで表します（内部で100で除算されます）。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。このパラメータは正の値のみを受け入れます。</param>
            <param name="flags">画像をリサイズするときの動作を示すフラグ。</param>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])">GetTransformationParameters</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.ToString">
            <summary>
            オーバーライドされます。このメソッドの意味のある名前を返します。
            </summary>
            <returns>このメソッドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.XTranslation">
            <summary>
            画像のX軸方向（幅）の移動量（ピクセル単位）を取得または設定します。
            </summary>
            <value>画像のX軸方向（幅）の移動量（ピクセル単位）。この値は内部で100で除算されます。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.YTranslation">
            <summary>
            画像のY軸方向（高さ）の移動量（ピクセル単位）を取得または設定します。
            </summary>
            <value>画像のY軸方向（高さ）の移動量（ピクセル単位）。この値は内部で100で除算されます。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.Angle">
            <summary>
            回転角度（+/-方向に1/100度単位）を取得または設定します。
            </summary>
            <value>回転角度（+/-方向に1/100度単位）。1～36,000の値を指定できます。この値は内部で100で除算されます。正の値を指定すると画像が時計回りに回転し、負の値を指定すると反時計回りに回転します。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.XScale">
            <summary>
            画像のX軸方向（幅）の拡大縮小率を取得または設定します。
            </summary>
            <value>画像のX軸方向（幅）の拡大縮小率。これはパーセントで表します（内部で100で除算されます）。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。このプロパティは正の値のみを受け入れます。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.YScale">
            <summary>
            画像のY軸方向（高さ）の拡大縮小率を取得または設定します。
            </summary>
            <value>画像のY軸方向（高さ）の拡大縮小率。これはパーセントで表します（内部で100で除算されます）。この値は、<see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"/>から返された値と一致する必要があります。このパラメータは正の値のみを受け入れます。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.Flags">
            <summary>
            画像をリサイズするときの動作を示す値を取得または設定します。
            </summary>
            <value>画像をリサイズするときの動作を示す列挙値。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.MedianCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             画像の各ピクセルの色を近傍領域のピクセルの中央色に変更します。これは<see cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"/>と似ていますが、ぼかし効果ではなくノイズ除去のために使用します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>効果を調節するには、中央値の計算に使用する近傍領域のサイズを変更します。たとえば、8×8の近傍領域を使用する場合は、Dimensionプロパティ（またはコンストラクタのdimensionパラメータ）に８を設定します。</description></item>
             <item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>画像にリージョンがある場合、このコマンドはリージョンに対してのみ作用します。画像にリージョンがない場合は、画像全体に対して作用します。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.MedianCommand"/>を実行して、画像にメディアンフィルタを適用します。
             <!--ImageProcessing.Core.MedianCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MosaicCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EmbossCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.OilifyCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.SolarizeCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.GlowCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいMedianCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MedianCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.#ctor(System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいMedianCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="dimension">フィルタリングに使用する近傍領域のサイズ（dimension×dimension、ピクセル単位）。設定できるのは正の値のみです。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MedianCommand"/>を実行して、画像にメディアンフィルタを適用します。
            <!--ImageProcessing.Core.MedianCommand.MedianConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.MedianCommand.Dimension">
            <summary>
            フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）を取得または設定します。
            </summary>
            <value>フィルタリングに使用する近傍領域のサイズ（Dimension×Dimension、ピクセル単位）。設定できるのは正の値のみです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.MedianCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">
            <summary>
             <para>点削除処理の動作を決定するフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.UseDpi">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のすべてのプロパティの単位を1/1000インチにします。画像のDPIを使用してピクセルに変換することで、DPIの異なる複数の画像を処理できます。このフラグを設定しない場合、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のプロパティの単位はすべてピクセルになります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.SingleRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>によって検出された各点について、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>に設定された場合、削除された点を内部シングルリージョンに追加します。<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>に設定された場合は、点をシングルリージョンに追加しません。<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>が戻るとき、削除されたすべての点を含むリージョンが、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region"/>のどちらかに設定されます。LeadRegionが同時に設定されている場合、削除されたすべての点をLEADリージョンとして持つ画像のシャローコピーが<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion"/>に設定されます。LeadRegionが同時に設定されていない場合、削除されたすべての点を含むWindowsリージョンが<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region"/>に設定されます。
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region"/>に割り当てられたLEADリージョンまたはWindowsリージョンは、不要になったときに破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.LeadRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>が戻るとき、削除されたすべての点をリージョンとして持つ画像のシャローコピーを<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion"/>プロパティに設定します。
            このフラグはSingleRegionと組み合わせる必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.CallBackRegion">
            <summary>
            削除しようとしている点を含むWindowsリージョンを<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Region"/>プロパティに設定します。このフラグを設定すると、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったリージョンを結合することによって、削除された点を含む独自のリージョンを作成できます。リージョンは論理OR演算子を使用して結合できます。
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったすべてのリージョンを結合すると、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Flags"/>にSingleRegionを設定した場合に作成されるリージョンと結果的に同じになります。
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Region"/>プロパティで受け取ったリージョンが不要になったときは、解放する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.ImageUnchanged">
            <summary>
            画像を変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.UseSize">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>の<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotWidth"/>、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotHeight"/>、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotWidth"/>、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotHeight"/>の各プロパティを使用して、削除する点のサイズを指定します。
            このフラグを設定しない場合、これら４つのサイズについてデフォルト値が使用されます。デフォルト値は、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotWidth"/> = 1、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotHeight"/> = 1、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotWidth"/> = 2、<see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotHeight"/>= 2です。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.UseDiagonals">
            <summary>
            点に含まれる斜線のピクセルを考慮します。９ピクセルで構成される次の斑点の場合を考えます。
            <br><img src="DotDiag.jpg"/></br>
            <br>このフラグを設定した場合、この斑点は5×5ピクセルの１つの点とみなされます。このフラグを設定しない場合は、2×2、1×1、2×2の３つの点とみなされます。</br>
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>によって検出された各点を処理します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.DotRemoveCommandEventArgs.DotRemoveCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいDotRemoveCommandを初期化します。
            </summary>
            <param name="image">変更する画像を参照するRasterImageオブジェクト。</param>
            <param name="region">削除される点を表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</param>
            <param name="boundingRectangle">処理される点のバウンディング長方形。</param>
            <param name="whiteCount">処理される点に含まれる白ピクセルの総数。</param>
            <param name="blackCount">処理される点に含まれる黒ピクセルの総数。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.DotRemoveCommandEventArgs.DotRemoveCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Image">
            <summary>
            変更する画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクトを取得します。
            </summary>
            <value>変更する画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクト。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">DotRemoveCommandEventArgs(RasterImage,Region,Rectangle,int,int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Region">
            <summary>
            削除される点を表すWindowsリージョンを取得します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </summary>
            <value>削除される点を表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">DotRemoveCommandEventArgs(RasterImage,Region,Rectangle,int,int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.BoundingRectangle">
            <summary>
            処理される点のバウンディング長方形を取得します。
            </summary>
            <value>処理される点のバウンディング長方形。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.WhiteCount">
            <summary>
            処理される点に含まれる白ピクセルの総数を取得します。
            </summary>
            <value>処理される点に含まれる白ピクセルの総数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.BlackCount">
            <summary>
            処理される点に含まれる黒ピクセルの総数を取得します。
            </summary>
            <value>処理される点に含まれる黒ピクセルの総数。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status">
            <summary>
            点削除処理のステータスを示す値を取得または設定します。
            </summary>
            <value>点削除処理のステータスを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DotRemoveCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.Sep.06: reviewed.</reviewed>
             <summary>
             さまざまなサイズの点やしみを検出して削除します。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <keywords>ドキュメントのクリーンアップ|削除|点|クリーンアップ|１ビット画像|しみ</keywords>
             <remarks>
             <list type="bullet">
             <item><description>このメソッドは、１ビット文書に含まれるさまざまなサイズの点やしみを検出して削除します。
             点やしみは必ずしもすべて黒である必要はありません。このメソッドの動作は、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs"/>を使用して変更できます。</description></item>
             <item><description>このメソッドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>リージョンが選択されている場合は、そのリージョンのみが処理対象となります。リージョンが選択されていない場合は、画像全体が処理されます。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。 </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             <para>
             たとえば次の画像では、点を除去する必要があります。</para>
             <img src="LineRemoveCommand_before.jpg"/>
             <para></para>
             <para>次の図のように画像をクリーンアップすると、点が除去できます。</para>
             <img src="DotRemoveCommand_after.jpg"/>   
             <para>詳細は、「<see cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</see>」を参照してください。</para>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>を実行します。
             <!--ImageProcessing.Core.DotRemoveCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</seealso>      
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいDotRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.DotRemoveCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいDotRemoveCommandを初期化します。
            </summary>
            <param name="flags">点削除処理の動作を決定するフラグ。</param>
            <param name="minimumDotWidth">削除する点の幅の最小値。単位は、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。</param>
            <param name="minimumDotHeight">削除する点の高さの最小値。単位は、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。</param>
            <param name="maximumDotWidth">削除する点の幅の最大値。単位は、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。 </param>
            <param name="maximumDotHeight">削除する点の高さの最大値。単位は、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>フラグを設定した場合は1/1000インチで、設定していない場合はピクセルです。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.DotRemoveCommand.DotRemoveConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Flags">
            <summary>
            点削除処理の動作を決定するフラグを取得または設定します。
            </summary>
            <value>点削除処理の動作を決定するフラグ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotWidth">
            <summary>
            削除する点の幅の最小値を取得または設定します。
            </summary>
            <value>削除する点の幅の最小値。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>を設定した場合は1/1000インチで、設定していない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotHeight">
            <summary>
            削除する点の高さの最小値を取得または設定します。
            </summary>
            <value>削除する点の高さの最小値。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>を設定した場合は1/1000インチで、設定していない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotWidth">
            <summary>
            削除する点の幅の最大値を取得または設定します。
            </summary>
            <value>削除する点の幅の最大値。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>を設定した場合は1/1000インチで、設定していない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotHeight">
            <summary>
            削除する点の高さの最大値を取得または設定します。
            </summary>
            <value>削除する点の高さの最大値。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see>を設定した場合は1/1000インチで、設定していない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion">
            <summary>
            このプロパティは、削除された点をリージョンとして持つ画像のシャローコピーで更新されます。
            </summary>
            <value>
            削除された点をリージョンとして持つ画像のシャローコピー。
            </value>
            <remarks>
            Flagsに<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.LeadRegion</see>が設定されている場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>が戻るときに、削除された点をリージョンとして持つ画像のシャローコピーで更新されます。そのため、Flagsを(<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.LeadRegion</see>に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.DotRemoveCommand.ImageRegion-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region">
            <summary>
            Windowsリージョンのハンドルを取得します。
            </summary>
            <value>Windowsリージョンのハンドル。</value>
            <remarks>
            Flagsに<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see>のみが設定されていて、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.LeadRegion</see>が設定されていない場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>が戻るときに、すべての変更を含む１つのWindowsリージョンで更新されます。このプロパティを使用するには、Flagsを<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see>に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Drawing.Rectangle,System.Int32,System.Int32)">DotRemoveCommandEventArgs(RasterImage,Region,Rectangle,int,int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.DotRemoveCommand.DotRemove">
            <reviewed>Mutasem 10.Sep.06: I modified this method to accommodate new v15 changes, I also updated the "summary" and "value" tags, to accommodate the change happened here.
            Samah 28.Sep.06: reviewed.</reviewed>
            <summary>
            追加処理のためのオプションのデリゲートメソッド。
            </summary>
            <value>追加処理のためのオプションのデリゲートメソッド。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags">
            <summary>
             <para>スムージング処理の動作を決定する列挙値。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.SingleRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>によって検出された個々の突起または裂け目について、<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus"/>.Removeに設定された場合、削除された突起または裂け目を内部シングルリージョンに追加します。<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus"/>.NoRemoveに設定された場合は、突起または裂け目をシングルリージョンに追加しません。<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>が戻るとき、削除されたすべての突起または裂け目を含むリージョンが、<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region"/>のどちらかに設定されます。LeadRegionが同時に設定されている場合、削除されたすべての突起または裂け目をLEADリージョンとして持つ画像のシャローコピーが<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion"/>に設定されます。LeadRegionが同時に設定されていない場合、削除されたすべての突起または裂け目を含むWindowsリージョンが<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region"/>に設定されます。
            <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region"/>に割り当てられたLEADリージョンまたはWindowsリージョンは、不要になったときに破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.LeadRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>が戻るとき、削除されたすべての突起または裂け目をリージョンとして持つ対象画像のシャローコピーを<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion"/>に設定します。
            このフラグはSingleRegionと組み合わせる必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.ImageUnchanged">
            <summary>
            Runメソッドの画像を変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.FavorLong">
            <summary>
            長い突起や裂け目を、短いものより先に処理します。このフラグを設定しない場合、短い突起や裂け目が先に処理されます。<br/>
            たとえば、次の画像を<see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Length"/> = 3で処理する場合、<br/>
            <pre>
              X   X
            XXXXXXXXXX
            </pre>
            短い突起や裂け目を先に処理すると、次のように２つの突起が削除されます。<br/>
            <pre>
            XXXXXXXXXX
            </pre>
            長い突起や裂け目を先に処理すると、次のように２つの突起の隙間が埋められます。<br/>
            <pre>
              XXXXX
            XXXXXXXXXX
            </pre>
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType">
            <summary>
             <para>突起を削除するか、裂け目を埋めるかのどちらかを示す列挙値。</para>
             </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType.Bump">
            <summary>
            突起を削除します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType.Nick">
            <summary>
            裂け目を埋めます。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandDirectionType">
            <summary>
             <para>平らにならす要素の方向が垂直か水平かを示す列挙値。 </para>
             </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandDirectionType.Horizontal">
            <summary>
            水平方向の突起または裂け目。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandDirectionType.Vertical">
            <summary>
            垂直方向の突起または裂け目。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>によって検出された突起または裂け目を１つずつ処理します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>を実行します。
            <!--ImageProcessing.Core.SmoothCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.SmoothCommandDirectionType)">
            <summary>
            明示的なパラメータを使用して、新しいSmoothCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="image">対象の画像を参照するRasterImageオブジェクト。</param>
            <param name="bumpNick">突起を削除するか、裂け目を埋めるかのどちらかを示す値。</param>
            <param name="startRow">突起または裂け目の開始行。行は０から始まります。</param>
            <param name="startColumn">突起または裂け目の開始列。列は０から始まります。</param>
            <param name="length">突起または裂け目の長さ（ピクセル単位）。</param>
            <param name="direction">平らにならす要素の方向が垂直か水平かを示すフラグ。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>を実行します。
            <!--ImageProcessing.Core.SmoothCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Image">
            <summary>
            対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクトを取得します。
            </summary>
            <value>対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.SmoothCommandDirectionType)">SmoothCommandEventArgs(RasterImage, SmoothCommandBumpNickType, int, int, int, SmoothCommandDirectionType)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.BumpNick">
            <summary>
            突起を削除するか、裂け目を埋めるかのどちらかを示す値を取得します。
            </summary>
            <value>突起を削除するか、裂け目を埋めるかのどちらかを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.StartRow">
            <summary>
            突起または裂け目の開始行を取得します。行は０から始まります。
            </summary>
            <value>突起または裂け目の開始行。行は０から始まります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.StartColumn">
            <summary>
            突起または裂け目の開始列を取得します。列は０から始まります。
            </summary>
            <value>突起または裂け目の開始列。列は０から始まります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Length">
            <summary>
            突起または裂け目の長さ（ピクセル単位）を取得します。
            </summary>
            <value>突起または裂け目の長さ（ピクセル単位）。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Direction">
            <summary>
            平らにならす要素の方向が垂直か水平かを示す値を取得します。
            </summary>
            <value>平らにならす要素の方向が垂直か水平かを示す列挙体。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Status">
            <summary>
            スムージング処理のステータスを示す値を取得または設定します。
            </summary>
            <value>スムージング処理のステータスを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.SmoothCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             １ビットの白黒画像に含まれる突起を平らにならし、裂け目を補修します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
            </summary> 
             <keywords>ドキュメントのクリーンアップ|スムージング|突起|クリーンアップ|１ビット画像|裂け目|テキストのスムージング</keywords>
             <remarks>
             <list type="bullet">
             <item><description>このコマンドは、スキャンしたテキスト文書に含まれる文字の凹凸をならします。このコマンドの動作は、<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs"/>を使用して変更できます。
             このコマンドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>このコマンドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>リージョンが選択されている場合は、そのリージョンのみが処理対象となります。リージョンが選択されていない場合は、画像全体が処理されます。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。 </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             <item><description>例：効果適用前の画像<p></p>
             <img src="SmoothCommand_before.jpg"/><p></p>
             効果適用後の画像<p></p>
             <img src="SmoothCommand_after.jpg"/><p></p>
             </description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</see>」を参照してください。
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>を実行します。
             <!--ImageProcessing.Core.SmoothCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいSmoothCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.#ctor(Leadtools.ImageProcessing.Core.SmoothCommandFlags,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいSmoothCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="flags">スムージング処理の動作を決定するフラグ。</param>
            <param name="length">削除する（または隙間を埋める）突起（または裂け目）の長さ。このサイズ以下の突起と裂け目がすべて処理されます。単位はピクセルです。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>を実行します。
            <!--ImageProcessing.Core.SmoothCommand.SmoothConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.Flags">
            <summary>
            スムージング処理の動作を決定する値を取得または設定します。
            </summary>
            <value>スムージング処理の動作を決定する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.Length">
            <summary>
            削除する（または隙間を埋める）突起（または裂け目）の長さを指定します。このサイズ以下の突起と裂け目がすべて処理されます。単位はピクセルです。
            </summary>
            <value>削除する（または隙間を埋める）突起（または裂け目）の長さ。このサイズ以下の突起と裂け目がすべて処理されます。単位はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion">
            <summary>
            削除された突起と裂け目をリージョンとして持つ画像のシャローコピーで更新される<see cref="T:Leadtools.RasterImage"/>オブジェクトを取得します。
            </summary>
            <value>
            削除された突起と裂け目をリージョンとして持つ画像のシャローコピーで更新される<see cref="T:Leadtools.RasterImage"/>オブジェクト。
            </value>
            <remarks>
            Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.SingleRegion | <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.LeadRegionが設定されている場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>が戻るときに、削除された突起と裂け目をリージョンとして持つ画像のシャローコピーで更新されます。
            そのため、Flagsを<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.SingleRegion | <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.LeadRegionに設定します。
            このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>を実行します。
            <!--ImageProcessing.Core.SmoothCommand.ImageRegion-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region">
            <summary>
            Windowsリージョンのハンドルを取得します。
            </summary>
            <value>
            Windowsリージョンのハンドル。
            </value>
            <remarks>
            Flagsに<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.SIngleRegionのみが設定されていて、<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.LeadRegionが設定されていない場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>が戻るときに、すべての変更を含む１つのWindowsリージョンで更新されます。これを使用するには、Flagsプロパティを<see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags"/>.SingleRegionに設定します。
            このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.SmoothCommand.#ctor(Leadtools.ImageProcessing.Core.SmoothCommandFlags,System.Int32)">Leadtools.ImageProcessing.Effectts. SmoothCommand. SmoothCommand(SmoothCommandFlags,int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.SmoothCommand.Smooth">
            <summary>
            追加処理のためのオプションのデリゲートメソッド。
            </summary>
            <value>追加処理のためのオプションのデリゲートメソッド。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">
            <summary>
             <para>ライン削除処理の動作を決定するフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.None">
            <summary>
            フラグは設定されていません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.UseDpi">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のすべてのプロパティの単位を1/1000インチにします。画像のDPIを使用してピクセルに変換することで、DPIの異なる複数の画像を処理できます。このフラグを設定しない場合、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のプロパティの単位はすべてピクセルになります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.SingleRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>によって検出された各ラインについて、<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>に設定された場合、削除されたラインを内部シングルリージョンに追加します。<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>に設定された場合は、ラインをシングルリージョンに追加しません。<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>が戻るとき、削除されたすべてのラインを含むリージョンが、<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region"/>のどちらかに設定されます。LeadRegionが同時に設定されている場合、削除されたすべてのラインをLEADリージョンとして持つ画像のシャローコピーが<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion"/>に設定されます。LeadRegionが同時に設定されていない場合、削除されたすべてのラインを含むWindowsリージョンが<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region"/>に設定されます。
            <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion"/>または<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region"/>に割り当てられたLEADリージョンまたはWindowsリージョンは、不要になったときに破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.LeadRegion">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>が戻るとき、削除されたすべてのラインをリージョンとして持つ対象画像のシャローコピーを<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion"/>プロパティに設定します。
            このフラグはSingleRegionと組み合わせる必要があります。そのため、<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Flags"/>をSingleRegion | LeadRegionに設定します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.CallBackRegion">
            <summary>
            削除しようとしているラインを含むWindowsリージョンを<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Region"/>プロパティに設定します。このフラグを設定すると、<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったリージョンを結合することによって、削除されたラインを含む独自のリージョンを作成できます。リージョンは論理OR演算子を使用して結合できます。
            <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status"/>が<see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>の場合に受け取ったすべてのリージョンを結合すると、<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Flags"/>にSingleRegionを設定した場合に作成されるリージョンと結果的に同じになります。
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Region"/>プロパティで受け取ったリージョンが不要になったときは、破棄する必要があります。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.ImageUnchanged">
            <summary>
            Runメソッドの画像を変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.RemoveEntire">
            <summary>
            ラインが文字またはウォールを通過している場合でも、ライン全体を削除します。
            <br>次のようなラインがあるとします。 </br>
            <br><img src="Wall1.jpg"/></br>
            <br>上の図の場合に、iMaxWallPercentを80に設定してLINE_REMOVE_ENTIREを渡すと、下図の赤のピクセルが削除されます。</br>
            <br><img src="Wall3.jpg"/></br>
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.UseGap">
            <summary>
            ラインを削除するときに断線部を考慮します。このフラグを設定した場合は、GapLengthの値（<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.GapLength"/>プロパティ、またはコンストラクタのgapLengthパラメータ）が使用されます。このフラグを設定しない場合、GapLengthの値は無視されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.UseVariance">
            <summary>
            ラインを削除するときにライン幅の変動を考慮します。このフラグを設定した場合は、Varianceの値（<see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Variance"/>プロパティ、またはコンストラクタのvarianceパラメータ）が使用されます。このフラグを設定しない場合、Varianceの値は無視されます。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommandType">
            <summary>
             <para>削除するラインを示すフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、１つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandType.Horizontal">
            <summary>
            水平線を削除します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandType.Vertical">
            <summary>
            垂直線を削除します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs">
            <summary>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>によって検出された各ラインを処理します。
            </summary>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.LineRemoveCommandEventArgs.LineRemoveCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Int32,System.Int32,System.Int32)">
            <summary>
            明示的なパラメータを使用して、新しいLineRemoveCommandを初期化します。
            </summary>
            <param name="image">対象の画像。</param>
            <param name="region">削除されるラインを表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</param>
            <param name="startRow">ラインの開始行。行は０から始まります。</param>
            <param name="startColumn">ラインの開始列。列は０から始まります。</param>
            <param name="length">ラインの長さ（ピクセル単位）。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.LineRemoveCommandEventArgs.LineRemoveCommandEventArgs-->
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Image">
            <summary>
            対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクトを取得します。
            </summary>
            <value>対象の画像を参照する<see cref="T:Leadtools.RasterImage"/>オブジェクト。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Int32,System.Int32,System.Int32)">LineRemoveCommandEventArgs(RasterImage, Region, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Region">
            <summary>
            削除されるラインを表すWindowsリージョンを取得します。
            </summary>
            <value>削除されるラインを表すWindowsリージョン。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,System.Drawing.Region,System.Int32,System.Int32,System.Int32)">LineRemoveCommandEventArgs(RasterImage, Region, int, int, int)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.StartRow">
            <summary>
            ラインの開始行を取得します。行は０から始まります。
            </summary>
            <value>ラインの開始行。行は０から始まります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.StartColumn">
            <summary>
            ラインの開始列を取得します。列は０から始まります。
            </summary>
            <value>ラインの開始列。列は０から始まります。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Length">
            <summary>
            ラインの長さ（ピクセル単位）を取得します。
            </summary>
            <value>ラインの長さ（ピクセル単位）。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status">
            <summary>
            ライン削除処理のステータスを示す値を取得または設定します。
            </summary>
            <value>ライン削除処理のステータスを示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 28.sep.06: Reviewed.</reviewed>
             <reviewed>Mutasem 10.Sep.06: I modified the first "description" tag below.
             Samah 28.sep.06: Reviewed.</reviewed>
             <summary>
             １ビットの白黒画像から水平および垂直のラインを削除します。このコマンドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <keywords>ドキュメントのクリーンアップ|削除|水平ライン|クリーンアップ|１ビット画像|垂直ライン</keywords>
             <remarks>
             <list type="bullet">
             <item><description> このコマンドは、スキャンしたテキスト文書から水平および垂直のラインを削除します。
             ラインがテキストを通過している場合は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のプロパティまたはコンストラクタのパラメータを使用して、そのテキストを削除するかそのまま残すかを指定できます。このコマンドの動作は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs"/>を使用してさらに変更できます。 </description></item>
             <item><description>このコマンドは１ビットの白黒画像に対してのみ動作します。</description></item>
             <item><description>リージョンが選択されている場合は、そのリージョンのみが処理対象となります。リージョンが選択されていない場合は、画像全体が処理されます。</description></item>
             <item><description>このコマンドは符号付きデータ画像をサポートしていません。 </description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             <para>
             たとえば次の画像では、ラインを除去する必要があります。</para>
             <img src="LineRemoveCommand_before.jpg"/>
             <para></para>
             <para>次の図のように画像をクリーンアップすると、ラインが除去できます。</para>
             <img src="LineRemoveCommand_after.jpg"/>
             <para>詳細は、「<see cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</see>」を参照してください。</para>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>を実行します。
             <!--ImageProcessing.Core.LineRemoveCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.CleaningUp1bitImages">１ビット画像のクリーンアップ</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいLineRemoveCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.LineRemoveCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.LineRemoveCommandType)">
             <summary>
             明示的なパラメータを使用して、新しいLineRemoveCommandクラスオブジェクトを初期化します。
             </summary>
             <param name="flags">ライン削除処理の動作を決定するフラグ。</param>
             <param name="minimumLineLength">削除するラインの長さの最小値。この長さより短いラインは削除されません。単位は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</param>
             <param name="maximumLineWidth">削除するラインの<u>平均幅</u>の最大値。
             この平均幅より太いラインは削除されません。単位は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</param>
             <param name="wall">ウォールの高さ。"ウォール"とは、１本のラインの中で、幅が太いためにラインの一部とはみなされない部分を指します。
             たとえば、ラインが通過している文字や垂直線などがウォールに該当します。文字を通過するラインが画像に含まれている場合は、WallをMaximumLineWidthと同じか、またはそれより少し大きな値に設定します。
             単位は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</param>
             <param name="maximumWallPercent">ウォール部分とみなす最大値（ラインの全長に対する割合）。ラインはウォール部分とそうでない部分とで構成されます（Wallプロパティの説明を参照）。このパラメータには、ウォール部分とみなす最大値をラインの全長に対する割合で指定します。ウォールの割合がmaximumWallPercentより大きいラインは削除されません。たとえば、下図のように全長が10ピクセルで高さが１ピクセルの部分と５ピクセルの部分を持つラインがあるとします。 
              <br><img src="Wall1.jpg"/></br>
              <br>この例でminimumLineLengthを10ピクセル、wallを４ピクセルに設定すると、このラインは削除の候補になります。
             このラインのウォールの割合は60％です（全長10ピクセルのうち、６ピクセルがウォールを形成しているため）。maximumWallPercentを80に設定すると、このラインは削除されます（実際は下図の赤いピクセルが削除されます）。maximumWallPercentを30に設定すると、ラインは削除されません。</br>
                <br><img src="Wall2.jpg"/></br>
               </param>
             <param name="gapLength">１本のライン上の断線部または穴の長さの最大値。このプロパティは、点線、鎖線、またはスキャニングの状態によって途中で切れたラインを削除する場合に使用します。単位は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。このパラメータは、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>フラグを設定した場合のみ有効です。</param>
             <param name="variance">隣接する線分の間で許容されるライン幅の変化量。
             単位は、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>フラグが設定されている場合は1/1000インチで、設定されていない場合はピクセルです。このパラメータは、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseVariance</see>フラグを設定した場合のみ有効です。たとえば、次のような長さ30ピクセルの水平線があるとします（Xが１ピクセルを表します）。
             <br><img src="LineRemoveVar.jpg"/></br>
             <br>varianceを２ピクセルにした場合（つまり、ライン幅の変動許容値を２ピクセル以下にした場合）、このラインの最初の10ピクセルと最後の10ピクセルは削除されますが、中央の10ピクセルは削除されません。これにより、削除されるラインと交差している文字を残すことができます。</br> </param>
             <param name="type">削除するラインを示すフラグ。</param>
             <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>を実行します。
             <!--ImageProcessing.Core.LineRemoveCommand.LineRemoveConstructor-->
            </example>
             <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Flags">
            <summary>
            ライン削除処理の動作を決定するフラグを取得または設定します。
            </summary>
            <value>ライン削除処理の動作を決定するフラグ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.MinimumLineLength">
            <summary>
            削除するラインの長さの最小値を取得または設定します。
            </summary>
            <value>削除するラインの長さの最小値。この長さより短いラインは削除されません。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.MaximumLineWidth">
            <summary>
            削除するラインの<u>平均幅</u>の最大値を取得または設定します。 
            </summary>
            <value>削除するラインの<u>平均幅</u>の最大値。
            この平均幅より太いラインは削除されません。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Wall">
            <summary>
            ウォールの高さを取得または設定します。"ウォール"とは、１本のラインの中で、幅が太いためにラインの一部とはみなされない部分を指します。
            </summary>
            <value>ウォールの高さ。"ウォール"とは、１本のラインの中で、幅が太いためにラインの一部とはみなされない部分を指します。
            たとえば、ラインが通過している文字や垂直線などがウォールに該当します。文字を通過するラインが画像に含まれている場合は、WallをMaximumLineWidthと同じか、またはそれより少し大きな値に設定します。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.MaximumWallPercent">
            <summary>
            ウォール部分とみなす最大値（ラインの全長に対する割合）を取得または設定します。
            </summary>
            <value>ウォール部分とみなす最大値（ラインの全長に対する割合）。ラインはウォール部分とそうでない部分とで構成されます（Wallプロパティの説明を参照）。このプロパティには、ウォール部分とみなす最大値をラインの全長に対する割合で指定します。ウォールの割合がmaximumWallPercentより大きいラインは削除されません。たとえば、下図のように全長が10ピクセルで高さが１ピクセルの部分と５ピクセルの部分を持つラインがあるとします。 
             <br><img src="Wall1.jpg"/></br>
             <br>この例でMinimumLineLengthを10ピクセル、Wallを４ピクセルに設定すると、このラインは削除の候補になります。
            このラインのウォールの割合は60％です（全長10ピクセルのうち、６ピクセルがウォールを形成しているため）。MaximumWallPercentを80に設定すると、このラインは削除されます（実際は下図の赤いピクセルが削除されます）。MaximumWallPercentを30に設定すると、ラインは削除されません。</br>
             <br><img src="Wall2.jpg"/></br></value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.GapLength">
            <summary>
            １本のライン上の断線部または穴の長さの最大値を取得または設定します。
            </summary>
            <value>１本のライン上の断線部または穴の長さの最大値。このプロパティは、点線、鎖線、またはスキャニングの状態によって途中で切れたラインを削除する場合に使用します。単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>を設定した場合のみ有効です。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Variance">
            <summary>
            隣接する線分の間で許容されるライン幅の変化量を取得または設定します。
            </summary>
            <value>隣接する線分の間で許容されるライン幅の変化量。
            単位は、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see>が設定されている場合は1/1000インチで、設定されていない場合はピクセルです。このプロパティは、Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseVariance</see>を設定した場合のみ有効です。たとえば、次のような長さ30ピクセルの水平線があるとします（Xが１ピクセルを表します）。
            <br><img src="LineRemoveVar.jpg"/></br>
            <br>Varianceを２ピクセルにした場合（つまり、ライン幅の変動許容値を２ピクセル以下にした場合）、このラインの最初の10ピクセルと最後の10ピクセルは削除されますが、中央の10ピクセルは削除されません。これにより、削除されるラインと交差している文字を残すことができます。</br></value>
            <example>
            <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Type">
            <summary>
            削除するラインを示すフラグ。
            </summary>
            <value>削除するラインを示すフラグ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region">
            <summary>
            Windowsリージョンのハンドルを取得します。
            </summary>
            <value>Windowsリージョンのハンドル。Flagsプロパティに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see>のみが設定されていて、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.LeadRegion</see>が設定されていない場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>が戻るときに、すべての変更を含む１つのWindowsリージョンで更新されます。
            これを使用するには、Flagsプロパティを<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see>に設定します。
            このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。</value>
            <example>
            <see cref="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.LineRemoveCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.LineRemoveCommandType)">LineRemoveCommand(LineRemoveCommandFlags,int,int,int,int,int,int, LineRemoveCommandType)</see>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion">
            <summary>
            削除されたラインをリージョンとして持つ画像のシャローコピーで更新されるRasterImageオブジェクト。 
            </summary>
            <value>
            削除されたラインをリージョンとして持つ画像のシャローコピーで更新された<see cref="T:Leadtools.RasterImage"/>オブジェクト。
            </value>
            <remarks>
            Flagsに<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.LeadRegion</see>が設定されている場合、このプロパティは、<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>が戻るときに、削除されたラインをリージョンとして持つ画像のシャローコピーで更新されます。そのため、Flagsを(<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see> | <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.LeadRegion</see>)に設定します。このリージョンが不要になった場合は、プログラマの責任で破棄する必要があります。
            </remarks>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>を実行します。
            <!--ImageProcessing.Core.LineRemoveCommand.ImageRegion-->
            </example>
        </member>
        <member name="E:Leadtools.ImageProcessing.Core.LineRemoveCommand.LineRemove">
            <reviewed>Mutasem 10.Sep.06: I modified this method to accommodate new v15 changes, I also updated the "summary" and "value" tags, to accommodate the change happened here.
            Samah 28.sep.06: Reviewed.</reviewed>
            <summary>
            追加処理のためのオプションのデリゲートメソッド。
            </summary>
            <value>追加処理のためのオプションのデリゲートメソッド。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags">
            <reviewed>Mutasem 10.Sep.06: I added the keyword [Flags] before the enum.
            Samah 27.Sep.06:reviewed.</reviewed>
            <summary>
            <para>画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかまたはテキストとピクチャが混在しているか、通常回転と高速回転のどちらを使用するか、をそれぞれ示すフラグ。</para>
            <para>この列挙体は、メンバの値をビットごとに結合できる<see cref="T:System.FlagsAttribute"/>属性を持ちます。</para>
            </summary>
            <keywords>ドキュメントイメージング|ドキュメントスキャニング|スキャン|傾き補正|傾き|回転|調整</keywords>
            <remarks>
            ビットごとのOR（|）を使用して、各グループからフラグを１つずつ指定できます。
             <table>
              <tr>
                 <td><b>グループ</b></td>
                 <td><b>フラグ</b></td>
              </tr>
              <tr>
                 <td>画像の回転角度を検出した後にその傾きを補正するかどうかを示すフラグ</td>
                 <td>DeskewImage、ReturnAngleOnly</td>
              </tr>
              <tr>
                 <td>回転によって露出した領域を塗りつぶすために使用する背景色を示すフラグ</td>
                 <td>FillExposedArea、DoNotFillExposedArea</td>
              </tr>
              <tr>
                 <td>回転角度が非常に小さい場合に画像の傾きを補正するかどうかを示すフラグ</td>
                 <td>NoThreshold、Threshold</td>
              </tr>
              <tr>
                 <td>実行する補間のタイプを示すフラグ</td>
                 <td>RotateLinear、RotateResample、RotateBicubic</td>
              </tr>
              <tr>
                 <td>画像にテキストが含まれているかまたはテキストと画像が混在しているかを示すフラグ</td>
                 <td>DocumentImage、DocumentAndTextImage</td>
              </tr>
              <tr>
                 <td>回転タイプ（通常または高速）を示すフラグ。通常回転は高品質であるのに対して、高速回転の品質は中程度です。高速回転は１ビット画像に対してのみ使用できます。</td>
                 <td>NormalSpeedRotate、HighSpeedRotate</td>
              </tr>
             </table>
             </remarks>
            <noexample/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.DeskewImage">
            <summary>
            画像の傾きを補正します（画像を回転させます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.ReturnAngleOnly">
            <summary>
            画像の傾きを補正しません（画像を回転させません）。このフラグは回転角度を確かめるときに使用します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.FillExposedArea">
            <summary>
            回転によって露出した領域をfillColorの色で塗りつぶします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.DoNotFillExposedArea">
            <summary>
            回転によって露出した領域を塗りつぶすのに適切な背景色を自動的に決定します。<see cref="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.FillColor"/>パラメータは無視されます。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.NoThreshold">
            <summary>
            任意の補正角度に対して画像の傾きを補正します（画像を回転させます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.Threshold">
            <summary>
            回転角度が非常に小さい場合に画像の傾きを補正しません（画像を回転させません）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.RotateLinear">
            <summary>
            回転時に補間を実行しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.RotateResample">
            <summary>
            回転時にバイリニア補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.RotateBicubic">
            <summary>
            回転時にバイキュービック補間を実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.DocumentImage">
            <summary>
            画像にはテキストのみが含まれています。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.DocumentAndTextImage">
            <summary>
            画像にはテキストと画像が含まれています。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.UseNormalRotate">
            <summary>
            通常の回転速度を使用します（高品質）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags.UseHighSpeedRotate">
            <summary>
            高速な回転速度を使用します（中程度の品質、１ビット画像の場合のみ）。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.Sep.06:reviewed.</reviewed>
             <reviewed>Mohammed 13.10.06: changed flags to Flags property</reviewed>
             <summary>
             指定した画像を回転させて傾きを補正します。このメソッドは通常、スキャンした画像の傾きを自動的に補正する場合に使用します。このメソッドは<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>で使用できます。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>DeskewCommandと同様に、このコマンドクラスを使用して、スキャンした文書の傾きを自動的に補正できます。
             このクラスはDeskewCommandクラスの拡張版で、有効な補正角度が両方向とも20度から45度に増えています。また、回転ステップの分解能を指定する機能も追加されています。</description></item>
             <item><description>FlagsプロパティにDeskewExtendedCommandFlags.ReturnAngleOnlyが含まれている場合には、画像は回転されず、<see cref="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.Angle"/>に補正角度が設定されます。</description></item>
             <item><description>このコマンドには、回転角度が非常に小さい場合に画像の傾きを補正しないオプションもあります。</description></item>
             <item><description>補正される角度は最大で両方向に45度です。このメソッドは、スキャンした文書など、主に横書きのテキストを含む画像に対して使用することを目的としています。それ以外の種類の画像で使用した場合は、結果が正確には予測できません。</description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このメソッドは符号付きデータ画像をサポートしていません。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</see>」を参照してください。
             </remarks>
             <example>
             <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>を実行して、画像に拡張傾き補正フィルタを適用します。
             <!--ImageProcessing.Core.DeskewExtendedCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.RemovingNoise">ノイズの除去</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,System.Drawing.Point[],System.Drawing.Point[])"></seealso>
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.#ctor(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.Core.DeskewExtendedCommandFlags)">
            <summary>
            明示的なパラメータを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="angleRange">傾き補正の最大角度（1/100度単位）。有効な値の範囲は-4500～4500です。この値は内部で100で除算されます。</param>
            <param name="angleResolution">傾き補正角度の精度。有効な値の範囲は1～uAngleRange（最大傾き補正角度）です。実際の値は内部で10で除算されます。</param>
            <param name="fillColor">回転によって生じる背景を塗りつぶすために使用されるRasterColor。この値は、フラグでDeskewExtendedCommandFlags.FillExposedAreaが設定されている場合にのみ使用されます。</param>
            <param name="flags">画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかまたはテキストとピクチャが混在しているか、通常回転と高速回転のどちらを使用するか、をそれぞれ示すフラグ。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>を実行して、画像に拡張傾き補正フィルタを適用します。
            <!--ImageProcessing.Core.DeskewExtendedCommand.DeskewExtendedConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.Angle">
            <summary>
            このプロパティは、画像の傾きの補正に必要な角度（1/100度単位）で更新されます。このプロパティは画像自体の傾きが補正されない場合に更新されます。
            </summary>
            <value>画像の傾きの補正に必要な角度（1/100度単位）。たとえば、500は時計回りに５度回転することを意味します。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.AngleRange">
            <summary>
            傾き補正の最大角度を示す値（1/100度単位）を取得または設定します。
            </summary>
            <value>傾き補正の最大角度を示す値（1/100度単位）。有効な値の範囲は0～4500です。この値は内部で100で除算されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.AngleResolution">
            <summary>
            フィルタを適用する基となる傾き補正角度の精度を示す値を取得または設定します。
            </summary>
            <value>フィルタを適用する基となる傾き補正角度の精度を示す値。有効な値の範囲は1～<see cref="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.AngleRange"/>（最大傾き補正角度）です。実際の値は内部で10で除算されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.FillColor">
            <summary>
            回転によって生じる背景を塗りつぶすために使用される色を示す値を取得または設定します。
            </summary>
            <value>回転によって生じる背景を塗りつぶすために使用される色を示す値。この値は、フラグでDeskewExtendedCommandFlags.FillExposedAreaが設定されている場合にのみ使用されます。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.DeskewExtendedCommand.Flags">
            <reviewed>Mutasem 10.Sep.06: I changed the name of this property from "flags" to "Flags".
            Samah 27.Sep.06:reviewed.</reviewed>
            <summary>
            画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかまたはテキストとピクチャが混在しているか、通常の回転速度と高速な回転速度のどちらを使用するか、をそれぞれ示すフラグを取得または設定します。
            </summary>
            <value>画像の傾きを補正するかどうか、どの背景色を使用するか、回転角度が非常に小さい場合に画像の傾きを補正するかどうか、どのタイプの補間を使用するか、画像がほとんどテキストかまたはテキストとピクチャが混在しているか、通常の回転速度と高速な回転速度のどちらを使用するか、をそれぞれ示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType">
            <summary>
            画像を変換する際のシフト方法を示すフラグ。
            </summary>
            <noexample/>
            <noremarks/>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftZeroToCenter">
            <summary>
            32768（16ビット画像の場合）または2048（12ビット画像の場合）シフトします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftMinimumToZero">
            <summary>
            画像内の最小値が０になり、最大値が有効な最大値（16ビットの場合は65535、12ビットの場合は4095）になるようにすべての画像データをシフトします。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftNegativeToZero">
            <summary>
            負のピクセルをすべて０に設定し、正のピクセルは変更しません（ClearNegativePixelsCommandでも同じ結果が得られます）。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftRangeOnly">
            <summary>
            ビット範囲の半分を各ピクセルに加算することによってデータをシフトします。LowBit～HighBitの範囲外のビットは変更しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftRangeProcessOutSide">
            <summary>
            ビット範囲の半分を各ピクセルに加算することによってデータをシフトします。LowBit～HighBitの範囲外のビットはすべて０にします。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand">
             <reviewed>Mutasem 12.Sep.06: A new line is added to the remarks section. (The last item, talking about 32-bit grayscale images).
             Samah 27.sep.06:reviewed.</reviewed>
             <summary>
             符号付き画像を符号なし画像に変換します。
             </summary>
             <remarks>
             <list type="bullet">
             <item><description>画像には負のピクセル値が含まれる場合があり、その場合は画像が正常に描画／処理されません。この画像を正しく使用するには、負のピクセル値が含まれる場合（<see cref="P:Leadtools.RasterImage.Signed"/>がTrueの場合）に、そのピクセル値を変換する必要があります。</description></item>
             <item><description>このメソッドは、<see cref="P:Leadtools.RasterImage.Signed"/>がTrueに設定されている場合に、画像のカラー値をTypeプロパティに従ってシフトします。</description></item>
             <item><description>また、<see cref="T:Leadtools.RasterImage"/>の<see cref="P:Leadtools.RasterImage.MinValue"/>プロパティと<see cref="P:Leadtools.RasterImage.MaxValue"/>プロパティを更新します。</description></item>
             <item><description>このメソッドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしています。12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像を使用できるのは、<see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see>のみです。</description></item>
             <item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
             </list>
             詳細は、「<see cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</see>」を参照してください。<br/>
             </remarks>
             <example>
             画像に対して<see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"/>を実行します。符号付きの画像を渡す必要があります。
             <!--ImageProcessing.Core.ConvertSignedToUnsignedCommand-->
             </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.Topics.DetectingRegistrationMarks">レジスタマークの検出</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"></seealso>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.#ctor">
            <summary>
            デフォルトパラメータを使用して、新しいConvertSignedToUnsignedCommandクラスオブジェクトを初期化します。
            </summary>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.#ctor(Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType)">
            <summary>
            明示的なパラメータを使用して、新しいConvertSignedToUnsignedCommandクラスオブジェクトを初期化します。
            </summary>
            <param name="type">シフト方法を示すフラグ。</param>
            <example>
            画像に対して<see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"/>を実行します。符号付きの画像を渡す必要があります。
            <!--ImageProcessing.Core.ConvertSignedToUnsignedCommand.ConvertSignedToUnsignedConstructor-->
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.ToString">
            <summary>
            オーバーライドされます。このクラスの意味のある名前を返します。
            </summary>
            <returns>このクラスの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.Type">
            <summary>
            シフト方法を示すフラグ。
            </summary>
            <value>シフト方法を示すフラグ。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags">
            <summary>
             <para>自動2値化処理の動作を決定するフラグ。</para>
             </summary>
             <remarks>
            ビットごとのOR（|）を使用して、1つまたは複数のフラグを指定できます。
             </remarks>
            <noexample/>  
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseAutoPreProcessing">
            <summary>
            前処理を自動的に実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.DontUsePreProcessing">
            <summary>
            前処理を実行しません。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseBackGroundElimination">
            <summary>
            ビットマップの背景を除去しますが、テキストなどの重要な特徴は保持します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseColorLeveling">
            <summary>
            カラーレベル調整を自動的に実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseAutoThreshold">
            <summary>
            しきい値処理を自動的に実行します。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseUserThreshold">
            <summary>
            ユーザーがFactorで指定したカラー値をしきい値として使用します。有効な値の範囲は0（黒）～255（白）です。 
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UsePercentileThreshold">
            <summary>
            パーセンタイルによるしきい値処理を実行します。この場合は、しきい値処理を実行する黒ピクセルの割合をFactorに1/100%単位で指定します。
            たとえば、500は5パーセンタイルを意味します。有効な値の範囲は0～10000です。
            </summary>
        </member>
        <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseMedianThreshold">
            <summary>
            メディアンによるしきい値処理を実行します。
            </summary>
        </member>
        <member name="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand">
            <summary>
            このコマンドはビットマップを自動的に2値化します。各ピクセルがしきい値と比較され、ピクセルの明度がしきい値よりも高い（明るい）場合、そのピクセルは白に設定されます。ピクセルの明度がしきい値よりも低い（暗い）場合、そのピクセルは黒に設定されます。
            </summary>
            <keywords>クリーンアップ|ドキュメントのクリーンアップ|自動2値化|しきい値|2値画像|ドキュメント|OCR|前処理</keywords>
            <remarks>
            	<list type="bullet">
            		<item><description>
            このコマンドは、OCR、バーコード、OMR、ICRの認識結果を向上させる場合に役立ちます。各ピクセルがしきい値と比較され、
             ピクセルの明度がしきい値よりも高い（明るい）場合、そのピクセルは白に設定されます。ピクセルの明度がしきい値よりも低い（暗い）場合、そのピクセルは黒に設定されます。
            </description></item>
            		<item><description>このコマンドは12ビットと16ビットのグレースケール画像、および48ビットと64ビットのカラー画像をサポートしていませんが、例外はスローされません。</description></item>
            		<item><description>このコマンドは符号付きデータ画像をサポートしていません。</description></item>
            		<item><description>このコマンドは32ビットのグレースケール画像をサポートしていません。</description></item>
            	</list>
            ヒストグラムの統計分析手法である2ピーク法に基づいて自動的に算出されたしきい値を使用してビットマップを2値化する場合は、<see cref="T:Leadtools.ImageProcessing.Color.AutoBinaryCommand"/>を使用します。ビット数を変更せずに画像を白黒に変換するには、<see cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand"/>を使用します。
             AutoBinarizeCommandは以下のような場合に使用します。
            <list type="bullet">
            		<item><description>
             前処理を自動的に実行する場合
            </description></item>
            		<item><description>
            前処理に背景除去を含める場合
            </description></item>
            		<item><description>
             前処理にカラーレベル調整を含める場合
            </description></item>
            		<item><description>
            自動しきい値処理、またはパーセンタイルまたはメディアンによるしきい値処理を実行する場合
            </description></item>
            		<item><description>
            しきい値を手動で指定する場合
            </description></item>
            	</list>
            </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>を実行して、画像を2値画像に変換します。
            <!--ImageProcessing.Core.BlankPageDetectorCommand-->
            </example>
            <seealso cref="T:Leadtools.Topics.ProcessingAnImage">画像の処理</seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.AutoBinaryCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewExtendedCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCheckCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>
            <isnew>6/30/2008 12:58:37 PM</isnew>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.#ctor">
            <summary>
            デフォルトパラメーターを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <remarks>Factorのデフォルト値は0です。Flagsのデフォルト値は、AutoBinarizeCommandFlags.UseAutoPreProcessing | AutoBinarizeCommandFlags.UseAutoThresholdです。 </remarks>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.#ctor(System.Int32,Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags)">
            <summary>
            明示的なパラメーターを使用して、新しい<see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>クラスオブジェクトを初期化します。
            </summary>
            <param name="factor">この係数の意味は、使用するしきい値タイプフラグによって異なります。</param>
            <param name="flags">自動2値化処理の動作を決定するフラグ。</param>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.ToString">
            <summary>
            オーバーライドされます。このコマンドの意味のある名前を返します。
            </summary>
            <returns>このコマンドの名前を表す文字列。</returns>
            <noexample/>
            <noremarks/>
        </member>
        <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
            <exclude/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.Factor">
            <summary>
            しきい値係数を取得または設定します。
            </summary>
            <value>しきい値係数を示す値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
        <member name="P:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.Flags">
            <summary>
            自動2値化処理の動作を決定するフラグを取得または設定します。
            </summary>
            <value>自動2値化処理の動作を決定する値。</value>
            <example>
            <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand"/>のサンプルを参照してください。
            </example>
            <noremarks/>
        </member>
    </members>
</doc>
